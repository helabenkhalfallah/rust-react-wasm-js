{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29","program":"/Users/helabenkhalfallah/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures","/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","--cfg","feature=\"with-deprecated\"","-C","metadata=a03b50af7038c6ad","-C","extra-filename=-a03b50af7038c6ad","--out-dir","/Users/helabenkhalfallah/Desktop/hela_workspace/github_workspace/rust-react-wasm-js/target/rls/debug/deps","-L","dependency=/Users/helabenkhalfallah/Desktop/hela_workspace/github_workspace/rust-react-wasm-js/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/helabenkhalfallah/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/helabenkhalfallah/Desktop/hela_workspace/github_workspace/rust-react-wasm-js/target/rls/debug/deps/libfutures-a03b50af7038c6ad.rmeta"},"prelude":{"crate_id":{"name":"futures","disambiguator":[17330242701503367595,10476635367753197998]},"crate_root":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src","external_crates":[{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5902495869598878631,6483651549774204679]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12311488937759207811,9591695617658421232]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13642764918293034548,9567326413417207759]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[12678783859402539130,11033699271647822562]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13989086203811079768,14781321679734955535]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18262239609673298908,5174085264251780333]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15596655843449967889,8729491543963844827]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8633493352746497996,3308549486174864674]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9090856330303166257,15266389826979080272]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10275868503320404072,15700038594031858524]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16931781941529345914,7757858263785678856]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17386117254425836477,8366695672852535875]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6497267535012603728,15523194060056832509]}},{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5307688171077319232,12990389752959085457]}}],"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":0,"byte_end":9267,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6487,"byte_end":6491,"line_start":175,"line_end":175,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3009},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6493,"byte_end":6498,"line_start":175,"line_end":175,"column_start":22,"column_end":27},"alias_span":null,"name":"Async","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6500,"byte_end":6509,"line_start":175,"line_end":175,"column_start":29,"column_end":38},"alias_span":null,"name":"AsyncSink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6511,"byte_end":6520,"line_start":175,"line_end":175,"column_start":40,"column_end":49},"alias_span":null,"name":"StartSend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12813,"byte_end":12818,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3051},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12820,"byte_end":12825,"line_start":17,"line_end":17,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12849,"byte_end":12853,"line_start":18,"line_end":18,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12855,"byte_end":12859,"line_start":18,"line_end":18,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12886,"byte_end":12893,"line_start":19,"line_end":19,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12895,"byte_end":12901,"line_start":19,"line_end":19,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12928,"byte_end":12934,"line_start":20,"line_end":20,"column_start":25,"column_end":31},"alias_span":null,"name":"result","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12936,"byte_end":12938,"line_start":20,"line_end":20,"column_start":33,"column_end":35},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12940,"byte_end":12943,"line_start":20,"line_end":20,"column_start":37,"column_end":40},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12945,"byte_end":12957,"line_start":20,"line_end":20,"column_start":42,"column_end":54},"alias_span":null,"name":"FutureResult","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12984,"byte_end":12991,"line_start":21,"line_end":21,"column_start":25,"column_end":32},"alias_span":null,"name":"loop_fn","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12993,"byte_end":12997,"line_start":21,"line_end":21,"column_start":34,"column_end":38},"alias_span":null,"name":"Loop","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3113},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12999,"byte_end":13005,"line_start":21,"line_end":21,"column_start":40,"column_end":46},"alias_span":null,"name":"LoopFn","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13133,"byte_end":13135,"line_start":26,"line_end":26,"column_start":16,"column_end":18},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13139,"byte_end":13147,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"name":"finished","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13149,"byte_end":13151,"line_start":26,"line_end":26,"column_start":32,"column_end":34},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13155,"byte_end":13163,"line_start":26,"line_end":26,"column_start":38,"column_end":46},"name":"Finished","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13291,"byte_end":13294,"line_start":30,"line_end":30,"column_start":16,"column_end":19},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13298,"byte_end":13304,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"name":"failed","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13306,"byte_end":13309,"line_start":30,"line_end":30,"column_start":31,"column_end":34},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13313,"byte_end":13319,"line_start":30,"line_end":30,"column_start":38,"column_end":44},"name":"Failed","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":1,"index":5505},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13450,"byte_end":13456,"line_start":34,"line_end":34,"column_start":16,"column_end":22},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13460,"byte_end":13464,"line_start":34,"line_end":34,"column_start":26,"column_end":30},"name":"done","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13466,"byte_end":13478,"line_start":34,"line_end":34,"column_start":32,"column_end":44},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13482,"byte_end":13486,"line_start":34,"line_end":34,"column_start":48,"column_end":52},"name":"Done","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13623,"byte_end":13635,"line_start":38,"line_end":38,"column_start":16,"column_end":28},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13639,"byte_end":13641,"line_start":38,"line_end":38,"column_start":32,"column_end":34},"name":"Ok","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13778,"byte_end":13790,"line_start":42,"line_end":42,"column_start":16,"column_end":28},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":13794,"byte_end":13797,"line_start":42,"line_end":42,"column_start":32,"column_end":35},"name":"Err","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3122},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14062,"byte_end":14069,"line_start":64,"line_end":64,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14094,"byte_end":14101,"line_start":65,"line_end":65,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14133,"byte_end":14146,"line_start":66,"line_end":66,"column_start":31,"column_end":44},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3147},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14168,"byte_end":14172,"line_start":67,"line_end":67,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3153},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14201,"byte_end":14211,"line_start":68,"line_end":68,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3159},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14234,"byte_end":14238,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14240,"byte_end":14245,"line_start":69,"line_end":69,"column_start":28,"column_end":33},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3224},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14247,"byte_end":14252,"line_start":69,"line_end":69,"column_start":35,"column_end":40},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14254,"byte_end":14259,"line_start":69,"line_end":69,"column_start":42,"column_end":47},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3330},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14281,"byte_end":14284,"line_start":70,"line_end":70,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14309,"byte_end":14315,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3348},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14341,"byte_end":14348,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"FromErr","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3357},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14373,"byte_end":14379,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3367},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14404,"byte_end":14410,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3375},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14412,"byte_end":14422,"line_start":74,"line_end":74,"column_start":32,"column_end":42},"alias_span":null,"name":"SelectNext","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3396},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14448,"byte_end":14455,"line_start":75,"line_end":75,"column_start":24,"column_end":31},"alias_span":null,"name":"Select2","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3404},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14477,"byte_end":14481,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3414},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14505,"byte_end":14511,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3427},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14536,"byte_end":14543,"line_start":78,"line_end":78,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14683,"byte_end":14694,"line_start":86,"line_end":86,"column_start":33,"column_end":44},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14725,"byte_end":14733,"line_start":87,"line_end":87,"column_start":30,"column_end":38},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14735,"byte_end":14742,"line_start":87,"line_end":87,"column_start":40,"column_end":47},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3677},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14776,"byte_end":14785,"line_start":88,"line_end":88,"column_start":32,"column_end":41},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3510},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14787,"byte_end":14800,"line_start":88,"line_end":88,"column_start":43,"column_end":56},"alias_span":null,"name":"SelectAllNext","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3512},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14802,"byte_end":14812,"line_start":88,"line_end":88,"column_start":58,"column_end":68},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14845,"byte_end":14853,"line_start":89,"line_end":89,"column_start":31,"column_end":39},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14855,"byte_end":14864,"line_start":89,"line_end":89,"column_start":41,"column_end":50},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3562},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14894,"byte_end":14900,"line_start":90,"line_end":90,"column_start":28,"column_end":34},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3689},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14902,"byte_end":14912,"line_start":90,"line_end":90,"column_start":36,"column_end":46},"alias_span":null,"name":"SharedItem","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3698},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":14914,"byte_end":14925,"line_start":90,"line_end":90,"column_start":48,"column_end":59},"alias_span":null,"name":"SharedError","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15082,"byte_end":15090,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15094,"byte_end":15101,"line_start":95,"line_end":95,"column_start":41,"column_end":48},"name":"collect","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15255,"byte_end":15262,"line_start":99,"line_end":99,"column_start":29,"column_end":36},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15266,"byte_end":15273,"line_start":99,"line_end":99,"column_start":40,"column_end":47},"name":"Collect","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6557,"byte_end":6563,"line_start":178,"line_end":178,"column_start":18,"column_end":24},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6565,"byte_end":6575,"line_start":178,"line_end":178,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90644,"byte_end":90648,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3722},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90650,"byte_end":90654,"line_start":22,"line_end":22,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3722},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90728,"byte_end":90732,"line_start":25,"line_end":25,"column_start":15,"column_end":19},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90736,"byte_end":90746,"line_start":25,"line_end":25,"column_start":23,"column_end":33},"name":"IterStream","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90785,"byte_end":90792,"line_start":27,"line_end":27,"column_start":25,"column_end":32},"alias_span":null,"name":"iter_ok","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3729},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90794,"byte_end":90800,"line_start":27,"line_end":27,"column_start":34,"column_end":40},"alias_span":null,"name":"IterOk","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90848,"byte_end":90859,"line_start":29,"line_end":29,"column_start":29,"column_end":40},"alias_span":null,"name":"iter_result","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3738},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90861,"byte_end":90871,"line_start":29,"line_end":29,"column_start":42,"column_end":52},"alias_span":null,"name":"IterResult","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":636},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90910,"byte_end":90916,"line_start":32,"line_end":32,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3744},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90918,"byte_end":90924,"line_start":32,"line_end":32,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3753},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91318,"byte_end":91325,"line_start":64,"line_end":64,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3781},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91348,"byte_end":91353,"line_start":65,"line_end":65,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":723},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91398,"byte_end":91404,"line_start":67,"line_end":67,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":709},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91428,"byte_end":91435,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"alias_span":null,"name":"Concat2","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3808},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91459,"byte_end":91464,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91466,"byte_end":91471,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3816},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91496,"byte_end":91502,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91530,"byte_end":91539,"line_start":71,"line_end":71,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3834},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91564,"byte_end":91571,"line_start":72,"line_end":72,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3841},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91593,"byte_end":91597,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3870},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91623,"byte_end":91630,"line_start":74,"line_end":74,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3882},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91656,"byte_end":91663,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"FromErr","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91685,"byte_end":91689,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3898},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91713,"byte_end":91725,"line_start":77,"line_end":77,"column_start":23,"column_end":35},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3904},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91750,"byte_end":91757,"line_start":78,"line_end":78,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3913},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91786,"byte_end":91796,"line_start":79,"line_end":79,"column_start":28,"column_end":38},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3922},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91817,"byte_end":91820,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3931},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91845,"byte_end":91851,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3940},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91896,"byte_end":91901,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3950},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91903,"byte_end":91913,"line_start":83,"line_end":83,"column_start":30,"column_end":40},"alias_span":null,"name":"MergedItem","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3967},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91937,"byte_end":91941,"line_start":84,"line_end":84,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91943,"byte_end":91947,"line_start":84,"line_end":84,"column_start":28,"column_end":32},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3976},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":91973,"byte_end":91979,"line_start":85,"line_end":85,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3988},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92001,"byte_end":92009,"line_start":86,"line_end":86,"column_start":21,"column_end":29},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92035,"byte_end":92042,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":3995},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92044,"byte_end":92050,"line_start":87,"line_end":87,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4001},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92075,"byte_end":92081,"line_start":88,"line_end":88,"column_start":23,"column_end":29},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4011},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92103,"byte_end":92107,"line_start":89,"line_end":89,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4018},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92135,"byte_end":92144,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4031},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92166,"byte_end":92170,"line_start":91,"line_end":91,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4038},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92198,"byte_end":92207,"line_start":92,"line_end":92,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4051},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92229,"byte_end":92233,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4063},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92258,"byte_end":92264,"line_start":94,"line_end":94,"column_start":24,"column_end":30},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":1328},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92266,"byte_end":92272,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4089},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92294,"byte_end":92297,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92322,"byte_end":92329,"line_start":96,"line_end":96,"column_start":24,"column_end":31},"alias_span":null,"name":"Forward","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4121},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92603,"byte_end":92611,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92649,"byte_end":92664,"line_start":113,"line_end":113,"column_start":37,"column_end":52},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4628},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92698,"byte_end":92709,"line_start":114,"line_end":114,"column_start":33,"column_end":44},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4646},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92737,"byte_end":92743,"line_start":115,"line_end":115,"column_start":27,"column_end":33},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4655},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92772,"byte_end":92779,"line_start":116,"line_end":116,"column_start":28,"column_end":35},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4662},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92805,"byte_end":92809,"line_start":117,"line_end":117,"column_start":25,"column_end":29},"alias_span":null,"name":"Wait","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4692},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92837,"byte_end":92848,"line_start":118,"line_end":118,"column_start":27,"column_end":38},"alias_span":null,"name":"SplitStream","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4699},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92850,"byte_end":92859,"line_start":118,"line_end":118,"column_start":40,"column_end":49},"alias_span":null,"name":"SplitSink","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4353},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92861,"byte_end":92873,"line_start":118,"line_end":118,"column_start":51,"column_end":63},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4402},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92913,"byte_end":92929,"line_start":119,"line_end":119,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4577},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92967,"byte_end":92982,"line_start":120,"line_end":120,"column_start":37,"column_end":52},"alias_span":null,"name":"futures_ordered","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4571},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92984,"byte_end":92998,"line_start":120,"line_end":120,"column_start":54,"column_end":68},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4283},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93114,"byte_end":93121,"line_start":125,"line_end":125,"column_start":29,"column_end":36},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4668},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93123,"byte_end":93129,"line_start":125,"line_end":125,"column_start":38,"column_end":44},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4676},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93131,"byte_end":93139,"line_start":125,"line_end":125,"column_start":46,"column_end":54},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4684},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93141,"byte_end":93153,"line_start":125,"line_end":125,"column_start":56,"column_end":68},"alias_span":null,"name":"FutureSender","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":4286},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93155,"byte_end":93164,"line_start":125,"line_end":125,"column_start":70,"column_end":79},"alias_span":null,"name":"SendError","value":"","parent":{"krate":0,"index":568}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6611,"byte_end":6617,"line_start":181,"line_end":181,"column_start":17,"column_end":23},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4877},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208443,"byte_end":208449,"line_start":30,"line_end":30,"column_start":27,"column_end":33},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4885},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208475,"byte_end":208479,"line_start":31,"line_end":31,"column_start":25,"column_end":29},"alias_span":null,"name":"Wait","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4706},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209861,"byte_end":209865,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4746},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209896,"byte_end":209907,"line_start":78,"line_end":78,"column_start":30,"column_end":41},"alias_span":null,"name":"WithFlatMap","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4762},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209930,"byte_end":209935,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4781},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209957,"byte_end":209961,"line_start":80,"line_end":80,"column_start":21,"column_end":25},"alias_span":null,"name":"Send","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4788},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209987,"byte_end":209994,"line_start":81,"line_end":81,"column_start":25,"column_end":32},"alias_span":null,"name":"SendAll","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4798},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210019,"byte_end":210029,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"alias_span":null,"name":"SinkMapErr","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":4768},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210055,"byte_end":210066,"line_start":83,"line_end":83,"column_start":25,"column_end":36},"alias_span":null,"name":"SinkFromErr","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210090,"byte_end":210096,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"alias_span":null,"name":"Fanout","value":"","parent":{"krate":0,"index":1509}},{"kind":"Use","ref_id":{"krate":0,"index":1784},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6648,"byte_end":6652,"line_start":184,"line_end":184,"column_start":15,"column_end":19},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6805,"byte_end":6809,"line_start":189,"line_end":189,"column_start":18,"column_end":22},"alias_span":null,"name":"done","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6811,"byte_end":6816,"line_start":189,"line_end":189,"column_start":24,"column_end":29},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6818,"byte_end":6824,"line_start":189,"line_end":189,"column_start":31,"column_end":37},"alias_span":null,"name":"failed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6826,"byte_end":6834,"line_start":189,"line_end":189,"column_start":39,"column_end":47},"alias_span":null,"name":"finished","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6836,"byte_end":6840,"line_start":189,"line_end":189,"column_start":49,"column_end":53},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6999,"byte_end":7003,"line_start":195,"line_end":195,"column_start":5,"column_end":9},"alias_span":null,"name":"Done","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3051},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7005,"byte_end":7010,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7012,"byte_end":7018,"line_start":195,"line_end":195,"column_start":18,"column_end":24},"alias_span":null,"name":"Failed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7020,"byte_end":7028,"line_start":195,"line_end":195,"column_start":26,"column_end":34},"alias_span":null,"name":"Finished","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7030,"byte_end":7034,"line_start":195,"line_end":195,"column_start":36,"column_end":40},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3122},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7036,"byte_end":7043,"line_start":195,"line_end":195,"column_start":42,"column_end":49},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7045,"byte_end":7052,"line_start":195,"line_end":195,"column_start":51,"column_end":58},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7054,"byte_end":7067,"line_start":195,"line_end":195,"column_start":60,"column_end":73},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3147},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7069,"byte_end":7073,"line_start":195,"line_end":195,"column_start":75,"column_end":79},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3153},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7075,"byte_end":7085,"line_start":195,"line_end":195,"column_start":81,"column_end":91},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3159},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7091,"byte_end":7095,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7097,"byte_end":7102,"line_start":196,"line_end":196,"column_start":11,"column_end":16},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3224},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7104,"byte_end":7109,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7111,"byte_end":7116,"line_start":196,"line_end":196,"column_start":25,"column_end":30},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3330},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7118,"byte_end":7121,"line_start":196,"line_end":196,"column_start":32,"column_end":35},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7123,"byte_end":7129,"line_start":196,"line_end":196,"column_start":37,"column_end":43},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3357},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7131,"byte_end":7137,"line_start":196,"line_end":196,"column_start":45,"column_end":51},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3367},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7139,"byte_end":7145,"line_start":196,"line_end":196,"column_start":53,"column_end":59},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3375},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7151,"byte_end":7161,"line_start":197,"line_end":197,"column_start":5,"column_end":15},"alias_span":null,"name":"SelectNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3404},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7163,"byte_end":7167,"line_start":197,"line_end":197,"column_start":17,"column_end":21},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338172,"byte_end":338177,"line_start":34,"line_end":34,"column_start":21,"column_end":26},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2228},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338179,"byte_end":338184,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2135},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338186,"byte_end":338192,"line_start":34,"line_end":34,"column_start":35,"column_end":41},"alias_span":null,"name":"Unpark","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2137},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338194,"byte_end":338202,"line_start":34,"line_end":34,"column_start":43,"column_end":51},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2139},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338204,"byte_end":338207,"line_start":34,"line_end":34,"column_start":53,"column_end":56},"alias_span":null,"name":"Run","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2213},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338209,"byte_end":338213,"line_start":34,"line_end":34,"column_start":58,"column_end":62},"alias_span":null,"name":"park","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":4993},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338237,"byte_end":338241,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":1898},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338243,"byte_end":338253,"line_start":36,"line_end":36,"column_start":27,"column_end":37},"alias_span":null,"name":"AtomicTask","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2211},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338255,"byte_end":338262,"line_start":36,"line_end":36,"column_start":39,"column_end":46},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":1957},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338264,"byte_end":338268,"line_start":36,"line_end":36,"column_start":48,"column_end":52},"alias_span":null,"name":"init","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2078},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338270,"byte_end":338280,"line_start":36,"line_end":36,"column_start":54,"column_end":64},"alias_span":null,"name":"is_in_task","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":4920},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338353,"byte_end":338361,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2166},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338363,"byte_end":338380,"line_start":40,"line_end":40,"column_start":31,"column_end":48},"alias_span":null,"name":"with_unpark_event","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":4988},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338382,"byte_end":338393,"line_start":40,"line_end":40,"column_start":50,"column_end":61},"alias_span":null,"name":"UnparkEvent","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2175},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338395,"byte_end":338403,"line_start":40,"line_end":40,"column_start":63,"column_end":71},"alias_span":null,"name":"EventSet","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":4927},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":338608,"byte_end":338614,"line_start":46,"line_end":46,"column_start":20,"column_end":26},"alias_span":null,"name":"TaskRc","value":"","parent":{"krate":0,"index":2321}},{"kind":"Use","ref_id":{"krate":0,"index":2135},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339024,"byte_end":339030,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"alias_span":null,"name":"Unpark","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2137},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339032,"byte_end":339040,"line_start":13,"line_end":13,"column_start":29,"column_end":37},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2139},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339042,"byte_end":339045,"line_start":13,"line_end":13,"column_start":39,"column_end":42},"alias_span":null,"name":"Run","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339069,"byte_end":339074,"line_start":15,"line_end":15,"column_start":21,"column_end":26},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2228},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339076,"byte_end":339081,"line_start":15,"line_end":15,"column_start":28,"column_end":33},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2262},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339083,"byte_end":339089,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2266},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339091,"byte_end":339102,"line_start":15,"line_end":15,"column_start":43,"column_end":54},"alias_span":null,"name":"with_notify","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2272},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339126,"byte_end":339138,"line_start":17,"line_end":17,"column_start":21,"column_end":33},"alias_span":null,"name":"UnsafeNotify","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":2275},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":339140,"byte_end":339152,"line_start":17,"line_end":17,"column_start":35,"column_end":47},"alias_span":null,"name":"NotifyHandle","value":"","parent":{"krate":0,"index":2341}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339732,"byte_end":339738,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"alias_span":null,"name":"BiLock","value":"","parent":{"krate":0,"index":2354}},{"kind":"Use","ref_id":{"krate":0,"index":5183},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339740,"byte_end":339751,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"BiLockGuard","value":"","parent":{"krate":0,"index":2354}},{"kind":"Use","ref_id":{"krate":0,"index":5191},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339753,"byte_end":339766,"line_start":17,"line_end":17,"column_start":45,"column_end":58},"alias_span":null,"name":"BiLockAcquire","value":"","parent":{"krate":0,"index":2354}},{"kind":"Use","ref_id":{"krate":0,"index":5197},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339768,"byte_end":339782,"line_start":17,"line_end":17,"column_start":60,"column_end":74},"alias_span":null,"name":"BiLockAcquired","value":"","parent":{"krate":0,"index":2354}},{"kind":"Use","ref_id":{"krate":0,"index":5029},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433156,"byte_end":433164,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":2918}},{"kind":"Use","ref_id":{"krate":0,"index":2374},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7541,"byte_end":7548,"line_start":218,"line_end":218,"column_start":28,"column_end":35},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7552,"byte_end":7559,"line_start":218,"line_end":218,"column_start":39,"column_end":46},"name":"oneshot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5008},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7729,"byte_end":7737,"line_start":223,"line_end":223,"column_start":28,"column_end":36},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7741,"byte_end":7748,"line_start":223,"line_end":223,"column_start":40,"column_end":47},"name":"Oneshot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5014},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7916,"byte_end":7922,"line_start":228,"line_end":228,"column_start":28,"column_end":34},"alias_span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7926,"byte_end":7934,"line_start":228,"line_end":228,"column_start":38,"column_end":46},"name":"Complete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5029},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8104,"byte_end":8112,"line_start":233,"line_end":233,"column_start":28,"column_end":36},"alias_span":null,"name":"Canceled","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3652},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8306,"byte_end":8315,"line_start":239,"line_end":239,"column_start":22,"column_end":31},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8317,"byte_end":8324,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"alias_span":null,"name":"collect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3512},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8326,"byte_end":8336,"line_start":239,"line_end":239,"column_start":42,"column_end":52},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8338,"byte_end":8347,"line_start":239,"line_end":239,"column_start":54,"column_end":63},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3677},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8517,"byte_end":8526,"line_start":244,"line_end":244,"column_start":22,"column_end":31},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3510},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8528,"byte_end":8541,"line_start":244,"line_end":244,"column_start":33,"column_end":46},"alias_span":null,"name":"SelectAllNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8543,"byte_end":8550,"line_start":244,"line_end":244,"column_start":48,"column_end":55},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8552,"byte_end":8560,"line_start":244,"line_end":244,"column_start":57,"column_end":65},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9162,"byte_end":9168,"line_start":262,"line_end":262,"column_start":14,"column_end":20},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9170,"byte_end":9176,"line_start":262,"line_end":262,"column_start":22,"column_end":28},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":1784},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9178,"byte_end":9182,"line_start":262,"line_end":262,"column_start":30,"column_end":34},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":3009},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9184,"byte_end":9189,"line_start":262,"line_end":262,"column_start":36,"column_end":41},"alias_span":null,"name":"Async","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9191,"byte_end":9200,"line_start":262,"line_end":262,"column_start":43,"column_end":52},"alias_span":null,"name":"AsyncSink","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9202,"byte_end":9206,"line_start":262,"line_end":262,"column_start":54,"column_end":58},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9208,"byte_end":9217,"line_start":262,"line_end":262,"column_start":60,"column_end":69},"alias_span":null,"name":"StartSend","value":"","parent":{"krate":0,"index":2999}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9254,"byte_end":9264,"line_start":264,"line_end":264,"column_start":13,"column_end":23},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":2999}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":0,"byte_end":9267,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":31},{"krate":0,"index":36},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1826},{"krate":0,"index":1847},{"krate":0,"index":1880},{"krate":0,"index":2306},{"krate":0,"index":2321},{"krate":0,"index":2341},{"krate":0,"index":2354},{"krate":0,"index":2778},{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5283},{"krate":0,"index":5284},{"krate":0,"index":5289},{"krate":0,"index":2999}],"decl_id":null,"docs":" Zero-cost Futures in Rust","sig":null,"attributes":[{"value":"! Zero-cost Futures in Rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":30,"byte_end":33,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library is an implementation of futures in Rust which aims to provide","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":34,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! a robust implementation of handling asynchronous computations, ergonomic","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":113,"byte_end":189,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! composition and usage, and zero-cost abstractions over what would otherwise","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":190,"byte_end":269,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"! be written by hand.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":270,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":294,"byte_end":297,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Futures are a concept for an object which is a proxy for another value that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":298,"byte_end":377,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! may not be ready yet. For example issuing an HTTP request may return a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":378,"byte_end":452,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! future for the HTTP response, as it probably hasn't arrived yet. With an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":453,"byte_end":529,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! object representing a value that will eventually be available, futures allow","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":530,"byte_end":610,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! for powerful composition of tasks through basic combinators that can perform","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":611,"byte_end":691,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! operations like chaining computations, changing the types of futures, or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":692,"byte_end":768,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! waiting for two futures to complete at the same time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":769,"byte_end":826,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":827,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! You can find extensive tutorials and documentations at [https://tokio.rs]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":831,"byte_end":908,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"! for both this crate (asynchronous programming in general) as well as the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":909,"byte_end":985,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! Tokio stack to perform async I/O with.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":986,"byte_end":1028,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1029,"byte_end":1032,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! [https://tokio.rs]: https://tokio.rs","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1033,"byte_end":1073,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1074,"byte_end":1077,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ## Installation","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1078,"byte_end":1097,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1098,"byte_end":1101,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Add this to your `Cargo.toml`:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1102,"byte_end":1136,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1137,"byte_end":1140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1141,"byte_end":1152,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1153,"byte_end":1171,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"! futures = \"0.1\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1172,"byte_end":1191,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"! ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1192,"byte_end":1199,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1200,"byte_end":1203,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1204,"byte_end":1219,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1220,"byte_end":1223,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! Let's take a look at a few examples of how futures might be used:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1224,"byte_end":1293,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1294,"byte_end":1297,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1298,"byte_end":1305,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"! extern crate futures;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1306,"byte_end":1331,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1332,"byte_end":1335,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1336,"byte_end":1352,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"! use std::time::Duration;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1353,"byte_end":1381,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"! use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1382,"byte_end":1410,"line_start":40,"line_end":40,"column_start":1,"column_end":29}},{"value":"! use futures::future::Map;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1411,"byte_end":1440,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1441,"byte_end":1444,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! // A future is actually a trait implementation, so we can generically take a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1445,"byte_end":1525,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"! // future of any integer and return back a future that will resolve to that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1526,"byte_end":1605,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"! // value plus 10 more.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1606,"byte_end":1632,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"! //","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1633,"byte_end":1639,"line_start":46,"line_end":46,"column_start":1,"column_end":7}},{"value":"! // Note here that like iterators, we're returning the `Map` combinator in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1640,"byte_end":1717,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"! // the futures crate, not a boxed abstraction. This is a zero-cost","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1718,"byte_end":1788,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"! // construction of a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1789,"byte_end":1821,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"! fn add_ten<F>(future: F) -> Map<F, fn(i32) -> i32>","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1822,"byte_end":1876,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"!     where F: Future<Item=i32>,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1877,"byte_end":1911,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"! {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1912,"byte_end":1917,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"!     fn add(a: i32) -> i32 { a + 10 }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1918,"byte_end":1958,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"!     future.map(add)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1959,"byte_end":1982,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1983,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1989,"byte_end":1992,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! // Not only can we modify one future, but we can even compose them together!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":1993,"byte_end":2073,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"! // Here we have a function which takes two futures as input, and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2074,"byte_end":2152,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"! // future that will calculate the sum of their two values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2153,"byte_end":2215,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"! //","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2216,"byte_end":2222,"line_start":60,"line_end":60,"column_start":1,"column_end":7}},{"value":"! // Above we saw a direct return value of the `Map` combinator, but","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2223,"byte_end":2293,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"! // performance isn't always critical and sometimes it's more ergonomic to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2294,"byte_end":2371,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"! // return a trait object like we do here. Note though that there's only one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2372,"byte_end":2451,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"! // allocation here, not any for the intermediate futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2452,"byte_end":2513,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"! fn add<'a, A, B>(a: A, b: B) -> Box<Future<Item=i32, Error=A::Error> + 'a>","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2514,"byte_end":2592,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"!     where A: Future<Item=i32> + 'a,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2593,"byte_end":2632,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"!           B: Future<Item=i32, Error=A::Error> + 'a,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2633,"byte_end":2688,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"! {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2689,"byte_end":2694,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"!     Box::new(a.join(b).map(|(a, b)| a + b))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2695,"byte_end":2742,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2743,"byte_end":2748,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2749,"byte_end":2752,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! // Futures also allow chaining computations together, starting another after","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2753,"byte_end":2833,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"! // the previous finishes. Here we wait for the first computation to finish,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2834,"byte_end":2913,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"! // and then decide what to do depending on the result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2914,"byte_end":2972,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"! fn download_timeout(url: &str,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":2973,"byte_end":3007,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"!                     timeout_dur: Duration)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3008,"byte_end":3054,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"!                     -> Box<Future<Item=Vec<u8>, Error=io::Error>> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3055,"byte_end":3126,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"!     use std::io;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3127,"byte_end":3147,"line_start":78,"line_end":78,"column_start":1,"column_end":21}},{"value":"!     use std::net::{SocketAddr, TcpStream};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3148,"byte_end":3194,"line_start":79,"line_end":79,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3195,"byte_end":3198,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!     type IoFuture<T> = Box<Future<Item=T, Error=io::Error>>;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3199,"byte_end":3263,"line_start":81,"line_end":81,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3264,"byte_end":3267,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!     // First thing to do is we need to resolve our URL to an address. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3268,"byte_end":3346,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"!     // will likely perform a DNS lookup which may take some time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3347,"byte_end":3416,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"!     let addr = resolve(url);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3417,"byte_end":3449,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3450,"byte_end":3453,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // After we acquire the address, we next want to open up a TCP","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3454,"byte_end":3524,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"!     // connection.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3525,"byte_end":3547,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"!     let tcp = addr.and_then(|addr| connect(&addr));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3548,"byte_end":3603,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"!     // After the TCP connection is established and ready to go, we're off to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3608,"byte_end":3688,"line_start":91,"line_end":91,"column_start":1,"column_end":81}},{"value":"!     // the races!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3689,"byte_end":3710,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"!     let data = tcp.and_then(|conn| download(conn));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3711,"byte_end":3766,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3767,"byte_end":3770,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"!     // That all might take awhile, though, so let's not wait too long for it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3771,"byte_end":3851,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"!     // to all come back. The `select` combinator here returns a future which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3852,"byte_end":3932,"line_start":96,"line_end":96,"column_start":1,"column_end":81}},{"value":"!     // resolves to the first value that's ready plus the next future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":3933,"byte_end":4006,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"!     //","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4007,"byte_end":4017,"line_start":98,"line_end":98,"column_start":1,"column_end":11}},{"value":"!     // Note we can also use the `then` combinator which is similar to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4018,"byte_end":4091,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"!     // `and_then` above except that it receives the result of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4092,"byte_end":4161,"line_start":100,"line_end":100,"column_start":1,"column_end":70}},{"value":"!     // computation, not just the successful value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4162,"byte_end":4216,"line_start":101,"line_end":101,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4217,"byte_end":4227,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"!     // Again note that all the above calls to `and_then` and the below calls","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4228,"byte_end":4308,"line_start":103,"line_end":103,"column_start":1,"column_end":81}},{"value":"!     // to `map` and such require no allocations. We only ever allocate once","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4309,"byte_end":4388,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"!     // we hit the `Box::new()` call at the end here, which means we've built","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4389,"byte_end":4469,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"!     // up a relatively involved computation with only one box, and even that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4470,"byte_end":4550,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"!     // was optional!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4551,"byte_end":4575,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4576,"byte_end":4579,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!     let data = data.map(Ok);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4580,"byte_end":4612,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"!     let timeout = timeout(timeout_dur).map(Err);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4613,"byte_end":4665,"line_start":110,"line_end":110,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4666,"byte_end":4669,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!     let ret = data.select(timeout).then(|result| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4670,"byte_end":4724,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"!         match result {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4725,"byte_end":4751,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"!             // One future succeeded, and it was the one which was","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4752,"byte_end":4821,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"!             // downloading data from the connection.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4822,"byte_end":4878,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"!             Ok((Ok(data), _other_future)) => Ok(data),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4879,"byte_end":4937,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4938,"byte_end":4941,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"!             // The timeout fired, and otherwise no error was found, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":4942,"byte_end":5016,"line_start":118,"line_end":118,"column_start":1,"column_end":75}},{"value":"!             // we translate this to an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5017,"byte_end":5066,"line_start":119,"line_end":119,"column_start":1,"column_end":50}},{"value":"!             Ok((Err(_timeout), _other_future)) => {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5067,"byte_end":5122,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"!                 Err(io::Error::new(io::ErrorKind::Other, \"timeout\"))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5123,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"!             }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5196,"byte_end":5213,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5214,"byte_end":5217,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"!             // A normal I/O error happened, so we pass that on through.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5218,"byte_end":5293,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"!             Err((e, _other_future)) => Err(e),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5294,"byte_end":5344,"line_start":125,"line_end":125,"column_start":1,"column_end":51}},{"value":"!         }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5345,"byte_end":5358,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5359,"byte_end":5370,"line_start":127,"line_end":127,"column_start":1,"column_end":12}},{"value":"!     return Box::new(ret);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5371,"byte_end":5400,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5401,"byte_end":5404,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"!     fn resolve(url: &str) -> IoFuture<SocketAddr> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5405,"byte_end":5460,"line_start":130,"line_end":130,"column_start":1,"column_end":56}},{"value":"!         // ...","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5461,"byte_end":5479,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"! #       panic!(\"unimplemented\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5480,"byte_end":5516,"line_start":132,"line_end":132,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5517,"byte_end":5526,"line_start":133,"line_end":133,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5527,"byte_end":5530,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"!     fn connect(hostname: &SocketAddr) -> IoFuture<TcpStream> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5531,"byte_end":5597,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"!         // ...","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5598,"byte_end":5616,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"! #       panic!(\"unimplemented\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5617,"byte_end":5653,"line_start":137,"line_end":137,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5654,"byte_end":5663,"line_start":138,"line_end":138,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5664,"byte_end":5667,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"!     fn download(stream: TcpStream) -> IoFuture<Vec<u8>> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5668,"byte_end":5729,"line_start":140,"line_end":140,"column_start":1,"column_end":62}},{"value":"!         // ...","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5730,"byte_end":5748,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"! #       panic!(\"unimplemented\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5749,"byte_end":5785,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5786,"byte_end":5795,"line_start":143,"line_end":143,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5796,"byte_end":5799,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"!     fn timeout(stream: Duration) -> IoFuture<()> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5800,"byte_end":5854,"line_start":145,"line_end":145,"column_start":1,"column_end":55}},{"value":"!         // ...","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5855,"byte_end":5873,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! #       panic!(\"unimplemented\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5874,"byte_end":5910,"line_start":147,"line_end":147,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5911,"byte_end":5920,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5921,"byte_end":5926,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"! # fn main() {}","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5927,"byte_end":5945,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5946,"byte_end":5953,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Some more information can also be found in the [README] for now, but","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":5958,"byte_end":6030,"line_start":153,"line_end":153,"column_start":1,"column_end":73}},{"value":"! otherwise feel free to jump in to the docs below!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6031,"byte_end":6084,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6085,"byte_end":6088,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! [README]: https://github.com/rust-lang-nursery/futures-rs#futures-rs","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6089,"byte_end":6161,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"no_std","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6163,"byte_end":6173,"line_start":158,"line_end":158,"column_start":1,"column_end":11}},{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6174,"byte_end":6227,"line_start":159,"line_end":159,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":8},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10014,"byte_end":10018,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Poll","qualname":"::poll::Poll","value":"Result<Async<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Return type of the `Future::poll` method, indicates whether a future's value\n is ready or not.","sig":null,"attributes":[{"value":"/ Return type of the `Future::poll` method, indicates whether a future's value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9676,"byte_end":9756,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ is ready or not.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9757,"byte_end":9777,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9778,"byte_end":9781,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `Ok(Async::Ready(t))` means that a future has successfully resolved","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9782,"byte_end":9855,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ * `Ok(Async::NotReady)` means that a future is not ready to complete yet","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9856,"byte_end":9932,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ * `Err(e)` means that a future has completed with the given failure","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":9933,"byte_end":10004,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10239,"byte_end":10244,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Ready","qualname":"::poll::Async::Ready","value":"Async::Ready(T)","parent":{"krate":0,"index":3009},"children":[],"decl_id":null,"docs":" Represents that a value is immediately ready.\n","sig":null,"attributes":[{"value":"/ Represents that a value is immediately ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10185,"byte_end":10234,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10325,"byte_end":10333,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::poll::Async::NotReady","value":"Async::NotReady","parent":{"krate":0,"index":3009},"children":[],"decl_id":null,"docs":" Represents that a value is not ready yet, but may be so later.\n","sig":null,"attributes":[{"value":"/ Represents that a value is not ready yet, but may be so later.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10254,"byte_end":10320,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10170,"byte_end":10175,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Async","qualname":"::poll::Async","value":"Async::{Ready, NotReady}","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3014}],"decl_id":null,"docs":" Return type of future, indicating whether a value is ready or not.\n","sig":null,"attributes":[{"value":"/ Return type of future, indicating whether a value is ready or not.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10049,"byte_end":10119,"line_start":22,"line_end":22,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10443,"byte_end":10446,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"map","qualname":"<Async<T>>::map","value":"fn <F, U> (self, f: F) -> Async<U>","parent":null,"children":[],"decl_id":null,"docs":" Change the success value of this `Async` with the closure provided\n","sig":null,"attributes":[{"value":"/ Change the success value of this `Async` with the closure provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10361,"byte_end":10431,"line_start":33,"line_end":33,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10710,"byte_end":10718,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<Async<T>>::is_ready","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `Async::Ready`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `Async::Ready`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10656,"byte_end":10698,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10911,"byte_end":10923,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"is_not_ready","qualname":"<Async<T>>::is_not_ready","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `Async::NotReady`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `Async::NotReady`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10854,"byte_end":10899,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11375,"byte_end":11380,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"Ready","qualname":"::poll::AsyncSink::Ready","value":"AsyncSink::Ready","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" The `start_send` attempt succeeded, so the sending process has\n *started*; you must use `Sink::poll_complete` to drive the send\n to completion.\n","sig":null,"attributes":[{"value":"/ The `start_send` attempt succeeded, so the sending process has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11209,"byte_end":11275,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ *started*; you must use `Sink::poll_complete` to drive the send","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11280,"byte_end":11347,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11352,"byte_end":11370,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11589,"byte_end":11597,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::poll::AsyncSink::NotReady","value":"AsyncSink::NotReady(T)","parent":{"krate":0,"index":3030},"children":[],"decl_id":null,"docs":" The `start_send` attempt failed due to the sink being full. The value\n being sent is returned, and the current `Task` will be automatically\n notified again once the sink has room.\n","sig":null,"attributes":[{"value":"/ The `start_send` attempt failed due to the sink being full. The value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11387,"byte_end":11460,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ being sent is returned, and the current `Task` will be automatically","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11465,"byte_end":11537,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ notified again once the sink has room.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11542,"byte_end":11584,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11190,"byte_end":11199,"line_start":65,"line_end":65,"column_start":10,"column_end":19},"name":"AsyncSink","qualname":"::poll::AsyncSink","value":"AsyncSink::{Ready, NotReady}","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3034}],"decl_id":null,"docs":" The result of an asynchronous attempt to send a value to a sink.\n","sig":null,"attributes":[{"value":"/ The result of an asynchronous attempt to send a value to a sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11071,"byte_end":11139,"line_start":63,"line_end":63,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11719,"byte_end":11722,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"map","qualname":"<AsyncSink<T>>::map","value":"fn <F, U> (self, f: F) -> AsyncSink<U>","parent":null,"children":[],"decl_id":null,"docs":" Change the NotReady value of this `AsyncSink` with the closure provided\n","sig":null,"attributes":[{"value":"/ Change the NotReady value of this `AsyncSink` with the closure provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11632,"byte_end":11707,"line_start":78,"line_end":78,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12011,"byte_end":12019,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<AsyncSink<T>>::is_ready","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `AsyncSink::Ready`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `AsyncSink::Ready`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11953,"byte_end":11999,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12224,"byte_end":12236,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"is_not_ready","qualname":"<AsyncSink<T>>::is_not_ready","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is `AsyncSink::NotReady`\n","sig":null,"attributes":[{"value":"/ Returns whether this is `AsyncSink::NotReady`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12163,"byte_end":12212,"line_start":96,"line_end":96,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12428,"byte_end":12437,"line_start":105,"line_end":105,"column_start":10,"column_end":19},"name":"StartSend","qualname":"::poll::StartSend","value":"Result<AsyncSink<T>, E>","parent":null,"children":[],"decl_id":null,"docs":" Return type of the `Sink::start_send` method, indicating the outcome of a\n send attempt. See `AsyncSink` for more details.\n","sig":null,"attributes":[{"value":"/ Return type of the `Sink::start_send` method, indicating the outcome of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12289,"byte_end":12366,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ send attempt. See `AsyncSink` for more details.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":12367,"byte_end":12418,"line_start":104,"line_end":104,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":54},{"krate":0,"index":73},{"krate":0,"index":88},{"krate":0,"index":113},{"krate":0,"index":132},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":195},{"krate":0,"index":216},{"krate":0,"index":236},{"krate":0,"index":252},{"krate":0,"index":266},{"krate":0,"index":279},{"krate":0,"index":294},{"krate":0,"index":309},{"krate":0,"index":324},{"krate":0,"index":342},{"krate":0,"index":362},{"krate":0,"index":377},{"krate":0,"index":395},{"krate":0,"index":417},{"krate":0,"index":431},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":3454},{"krate":0,"index":3478},{"krate":0,"index":3502},{"krate":0,"index":3521},{"krate":0,"index":3538},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":517},{"krate":0,"index":523},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":538},{"krate":0,"index":545},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":3707},{"krate":0,"index":3720},{"krate":0,"index":3719},{"krate":0,"index":3717},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":557},{"krate":0,"index":562}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12472,"byte_end":12483,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12484,"byte_end":12487,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the `Future` trait and a number of adaptors for this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12488,"byte_end":12565,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! trait. See the crate docs, and the docs for `Future`, for full detail.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":12566,"byte_end":12640,"line_start":4,"line_end":4,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56440,"byte_end":56445,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Empty","qualname":"::future::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3054}],"decl_id":null,"docs":" A future which is never resolved.","sig":null,"attributes":[{"value":"/ A future which is never resolved.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56263,"byte_end":56300,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56301,"byte_end":56304,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This future can be created with the `empty` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56305,"byte_end":56362,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56380,"byte_end":56428,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56666,"byte_end":56671,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"empty","qualname":"::future::empty::empty","value":"fn <T, E> () -> Empty<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56497,"byte_end":56577,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56578,"byte_end":56591,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56592,"byte_end":56595,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return `Async::NotReady`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56596,"byte_end":56658,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57264,"byte_end":57268,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":3062}],"decl_id":null,"docs":" A future which defers creation of the actual future until a callback is\n scheduled.","sig":null,"attributes":[{"value":"/ A future which defers creation of the actual future until a callback is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57048,"byte_end":57123,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ scheduled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57124,"byte_end":57138,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57139,"byte_end":57142,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the `lazy` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57143,"byte_end":57186,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57204,"byte_end":57252,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57957,"byte_end":57961,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will eventually be the same as the one created\n by the closure provided.","sig":null,"attributes":[{"value":"/ Creates a new future which will eventually be the same as the one created","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57403,"byte_end":57480,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ by the closure provided.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57481,"byte_end":57509,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57510,"byte_end":57513,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future has a callback scheduled","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57514,"byte_end":57591,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ on it, otherwise the callback never runs. Once run, however, this future is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57592,"byte_end":57671,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ the same as the one the closure creates.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57672,"byte_end":57716,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57717,"byte_end":57720,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57721,"byte_end":57735,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57736,"byte_end":57739,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57740,"byte_end":57747,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57748,"byte_end":57775,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57776,"byte_end":57779,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let a = lazy(|| ok::<u32, u32>(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57780,"byte_end":57819,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57820,"byte_end":57823,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let b = lazy(|| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57824,"byte_end":57871,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57872,"byte_end":57896,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57897,"byte_end":57904,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57905,"byte_end":57941,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":57942,"byte_end":57949,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59224,"byte_end":59230,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3084}],"decl_id":null,"docs":" A future which adapts a function returning `Poll`.","sig":null,"attributes":[{"value":"/ A future which adapts a function returning `Poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59049,"byte_end":59103,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59104,"byte_end":59107,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `poll_fn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59108,"byte_end":59146,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59164,"byte_end":59212,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59664,"byte_end":59671,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, E, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning `Poll`.","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning `Poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59253,"byte_end":59322,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59323,"byte_end":59326,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59327,"byte_end":59393,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59394,"byte_end":59397,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59398,"byte_end":59412,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59413,"byte_end":59416,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59417,"byte_end":59424,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59425,"byte_end":59458,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use futures::{Async, Poll};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59459,"byte_end":59490,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59491,"byte_end":59494,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn read_line() -> Poll<String, std::io::Error> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59495,"byte_end":59547,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/     Ok(Async::Ready(\"Hello, World!\".into()))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59548,"byte_end":59596,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59597,"byte_end":59602,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59603,"byte_end":59606,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59607,"byte_end":59648,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59649,"byte_end":59656,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60308,"byte_end":60320,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"FutureResult","qualname":"::future::result_::FutureResult","value":"FutureResult {  }","parent":null,"children":[{"krate":0,"index":3091}],"decl_id":null,"docs":" A future representing a value that is immediately ready.","sig":null,"attributes":[{"value":"/ A future representing a value that is immediately ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60062,"byte_end":60122,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60123,"byte_end":60126,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Created by the `result` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60127,"byte_end":60164,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60189,"byte_end":60237,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60859,"byte_end":60865,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"result","qualname":"::future::result_::result","value":"fn <T, E> (r: result::Result<T, E>) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new \"leaf future\" which will resolve with the given result.","sig":null,"attributes":[{"value":"/ Creates a new \"leaf future\" which will resolve with the given result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60373,"byte_end":60446,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60447,"byte_end":60450,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The returned future represents a computation which is finished immediately.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60451,"byte_end":60530,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ This can be useful with the `finished` and `failed` base future types to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60531,"byte_end":60607,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ convert an immediate value to a future to interoperate elsewhere.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60608,"byte_end":60677,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60678,"byte_end":60681,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60682,"byte_end":60696,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60697,"byte_end":60700,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60701,"byte_end":60708,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60709,"byte_end":60736,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60737,"byte_end":60740,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = result::<u32, u32>(Ok(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60741,"byte_end":60789,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ let future_of_err_2 = result::<u32, u32>(Err(2));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60790,"byte_end":60843,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60844,"byte_end":60851,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61308,"byte_end":61310,"line_start":48,"line_end":48,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::result_::ok","value":"fn <T, E> (t: T) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a finished and\n successful computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a finished and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":60960,"byte_end":61029,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ successful computation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61030,"byte_end":61057,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61058,"byte_end":61061,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61062,"byte_end":61140,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61141,"byte_end":61188,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61189,"byte_end":61192,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61193,"byte_end":61207,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61208,"byte_end":61211,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61212,"byte_end":61219,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61220,"byte_end":61247,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61248,"byte_end":61251,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let future_of_1 = ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61252,"byte_end":61292,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61293,"byte_end":61300,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61700,"byte_end":61703,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"err","qualname":"::future::result_::err","value":"fn <T, E> (e: E) -> FutureResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a \"leaf future\" from an immediate value of a failed computation.","sig":null,"attributes":[{"value":"/ Creates a \"leaf future\" from an immediate value of a failed computation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61368,"byte_end":61444,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61445,"byte_end":61448,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ The returned future is similar to `result` where it will immediately run a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61449,"byte_end":61527,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ scheduled callback with the provided value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61528,"byte_end":61575,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61576,"byte_end":61579,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61580,"byte_end":61594,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61595,"byte_end":61598,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61599,"byte_end":61606,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61607,"byte_end":61634,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61635,"byte_end":61638,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let future_of_err_1 = err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61639,"byte_end":61684,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61685,"byte_end":61692,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62348,"byte_end":62353,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Break","qualname":"::future::loop_fn::Loop::Break","value":"Loop::Break(T)","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":" Indicates that the loop has completed with output `T`.\n","sig":null,"attributes":[{"value":"/ Indicates that the loop has completed with output `T`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62285,"byte_end":62343,"line_start":8,"line_end":8,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62457,"byte_end":62465,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Continue","qualname":"::future::loop_fn::Loop::Continue","value":"Loop::Continue(S)","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":" Indicates that the loop function should be called again with input\n state `S`.\n","sig":null,"attributes":[{"value":"/ Indicates that the loop function should be called again with input","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62363,"byte_end":62433,"line_start":11,"line_end":11,"column_start":5,"column_end":75}},{"value":"/ state `S`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62438,"byte_end":62452,"line_start":12,"line_end":12,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62268,"byte_end":62272,"line_start":7,"line_end":7,"column_start":10,"column_end":14},"name":"Loop","qualname":"::future::loop_fn::Loop","value":"Loop::{Break, Continue}","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3106}],"decl_id":null,"docs":" The status of a `loop_fn` loop.\n","sig":null,"attributes":[{"value":"/ The status of a `loop_fn` loop.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62206,"byte_end":62241,"line_start":5,"line_end":5,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62593,"byte_end":62599,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"LoopFn","qualname":"::future::loop_fn::LoopFn","value":"LoopFn {  }","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117}],"decl_id":null,"docs":" A future implementing a tail-recursive loop.","sig":null,"attributes":[{"value":"/ A future implementing a tail-recursive loop.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62473,"byte_end":62521,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62522,"byte_end":62525,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Created by the `loop_fn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62526,"byte_end":62564,"line_start":18,"line_end":18,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":119},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64158,"byte_end":64165,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"loop_fn","qualname":"::future::loop_fn::loop_fn","value":"fn <S, T, A, F> (initial_state: S, mut func: F) -> LoopFn<A, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future implementing a tail-recursive loop.","sig":null,"attributes":[{"value":"/ Creates a new future implementing a tail-recursive loop.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62667,"byte_end":62727,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62728,"byte_end":62731,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The loop function is immediately called with `initial_state` and should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62732,"byte_end":62807,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ return a value that can be converted to a future. On successful completion,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62808,"byte_end":62887,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ this future should output a `Loop<T, S>` to indicate the status of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62888,"byte_end":62962,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ loop.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62963,"byte_end":62972,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62973,"byte_end":62976,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Loop::Break(T)` halts the loop and completes the future with output `T`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":62977,"byte_end":63054,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63055,"byte_end":63058,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `Loop::Continue(S)` reinvokes the loop function with state `S`. The returned","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63059,"byte_end":63139,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ future will be subsequently polled for a new `Loop<T, S>` value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63140,"byte_end":63208,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63209,"byte_end":63212,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63213,"byte_end":63227,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63228,"byte_end":63231,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63232,"byte_end":63239,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{ok, loop_fn, Future, FutureResult, Loop};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63240,"byte_end":63307,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ use std::io::Error;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63308,"byte_end":63331,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63332,"byte_end":63335,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ struct Client {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63336,"byte_end":63355,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/     ping_count: u8,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63356,"byte_end":63379,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63380,"byte_end":63385,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63386,"byte_end":63389,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63390,"byte_end":63407,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/     fn new() -> Self {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63408,"byte_end":63434,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/         Client { ping_count: 0 }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63435,"byte_end":63471,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63472,"byte_end":63481,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63482,"byte_end":63485,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     fn send_ping(self) -> FutureResult<Self, Error> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63486,"byte_end":63543,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/         ok(Client { ping_count: self.ping_count + 1 })","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63544,"byte_end":63602,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63603,"byte_end":63612,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63613,"byte_end":63616,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     fn receive_pong(self) -> FutureResult<(Self, bool), Error> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63617,"byte_end":63685,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/         let done = self.ping_count >= 5;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63686,"byte_end":63730,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/         ok((self, done))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63731,"byte_end":63759,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63760,"byte_end":63769,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63770,"byte_end":63775,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63776,"byte_end":63779,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let ping_til_done = loop_fn(Client::new(), |client| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63780,"byte_end":63837,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/     client.send_ping()","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63838,"byte_end":63864,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/         .and_then(|client| client.receive_pong())","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63865,"byte_end":63918,"line_start":64,"line_end":64,"column_start":1,"column_end":54}},{"value":"/         .and_then(|(client, done)| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63919,"byte_end":63959,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/             if done {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63960,"byte_end":63985,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/                 Ok(Loop::Break(client))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":63986,"byte_end":64029,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/             } else {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64030,"byte_end":64054,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/                 Ok(Loop::Continue(client))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64055,"byte_end":64101,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/             }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64102,"byte_end":64119,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64120,"byte_end":64134,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64135,"byte_end":64142,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64143,"byte_end":64150,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65576,"byte_end":65583,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3126}],"decl_id":null,"docs":" Future for the `and_then` combinator, chaining a computation onto the end of\n another future which completes successfully.","sig":null,"attributes":[{"value":"/ Future for the `and_then` combinator, chaining a computation onto the end of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65311,"byte_end":65391,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ another future which completes successfully.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65392,"byte_end":65440,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65441,"byte_end":65444,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::and_then` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65445,"byte_end":65498,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65516,"byte_end":65564,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66529,"byte_end":66536,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":204}],"decl_id":null,"docs":" Future for the `flatten` combinator, flattening a future-of-a-future to get just\n the result of the final future.","sig":null,"attributes":[{"value":"/ Future for the `flatten` combinator, flattening a future-of-a-future to get just","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66291,"byte_end":66375,"line_start":5,"line_end":5,"column_start":1,"column_end":85}},{"value":"/ the result of the final future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66376,"byte_end":66411,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66412,"byte_end":66415,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::flatten` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66416,"byte_end":66468,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66469,"byte_end":66517,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67932,"byte_end":67945,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":225}],"decl_id":null,"docs":" Future for the `flatten_stream` combinator, flattening a\n future-of-a-stream to get just the result of the final stream as a stream.","sig":null,"attributes":[{"value":"/ Future for the `flatten_stream` combinator, flattening a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67668,"byte_end":67728,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ future-of-a-stream to get just the result of the final stream as a stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67729,"byte_end":67807,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67808,"byte_end":67811,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::flatten_stream` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67812,"byte_end":67871,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":67872,"byte_end":67920,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71034,"byte_end":71038,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":3149}],"decl_id":null,"docs":" A future which \"fuses\" a future once it's been resolved.","sig":null,"attributes":[{"value":"/ A future which \"fuses\" a future once it's been resolved.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70606,"byte_end":70666,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70667,"byte_end":70670,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally futures can behave unpredictable once they're used after a future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70671,"byte_end":70749,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ has been resolved, but `Fuse` is always defined to return `Async::NotReady`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70750,"byte_end":70829,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ from `poll` after it has resolved successfully or returned an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70830,"byte_end":70902,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70903,"byte_end":70906,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::fuse` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70907,"byte_end":70956,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":70974,"byte_end":71022,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71505,"byte_end":71512,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<A>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying future has finished or not.\n \n If this method returns `true`, then all future calls to `poll`\n are guaranteed to return `Ok(Async::NotReady)`. If this returns\n false, then the underlying future has not been driven to\n completion.\n","sig":null,"attributes":[{"value":"/ Returns whether the underlying future has finished or not.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71194,"byte_end":71256,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ ","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71261,"byte_end":71265,"line_start":24,"line_end":24,"column_start":5,"column_end":9}},{"value":"/ If this method returns `true`, then all future calls to `poll`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71270,"byte_end":71336,"line_start":25,"line_end":25,"column_start":5,"column_end":71}},{"value":"/ are guaranteed to return `Ok(Async::NotReady)`. If this returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71341,"byte_end":71408,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/ false, then the underlying future has not been driven to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71413,"byte_end":71473,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"/ completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71478,"byte_end":71493,"line_start":28,"line_end":28,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/into_stream.rs","byte_start":72241,"byte_end":72251,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3155}],"decl_id":null,"docs":" Future that forwards one element from the underlying future\n (whether it is success of error) and emits EOF after that.\n","sig":null,"attributes":[{"value":"/ Future that forwards one element from the underlying future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/into_stream.rs","byte_start":72086,"byte_end":72149,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/ (whether it is success of error) and emits EOF after that.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/into_stream.rs","byte_start":72150,"byte_end":72212,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":76565,"byte_end":76569,"line_start":122,"line_end":122,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163}],"decl_id":null,"docs":" Future for the `join` combinator, waiting for two futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":73259,"byte_end":73307,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":76744,"byte_end":76749,"line_start":128,"line_end":128,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194}],"decl_id":null,"docs":" Future for the `join3` combinator, waiting for three futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":73259,"byte_end":73307,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":76927,"byte_end":76932,"line_start":134,"line_end":134,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232}],"decl_id":null,"docs":" Future for the `join4` combinator, waiting for four futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":73259,"byte_end":73307,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":77113,"byte_end":77118,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277}],"decl_id":null,"docs":" Future for the `join5` combinator, waiting for five futures to\n complete.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":73259,"byte_end":73307,"line_start":14,"line_end":14,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78131,"byte_end":78134,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334}],"decl_id":null,"docs":" Future for the `map` combinator, changing the type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map` combinator, changing the type of a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":77933,"byte_end":78000,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78001,"byte_end":78004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::map` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78005,"byte_end":78053,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78071,"byte_end":78119,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":79041,"byte_end":79047,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":3342},{"krate":0,"index":3343}],"decl_id":null,"docs":" Future for the `map_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `map_err` combinator, changing the error type of a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":78829,"byte_end":78906,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":78907,"byte_end":78910,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::map_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":78911,"byte_end":78963,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":78981,"byte_end":79029,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3348},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":79930,"byte_end":79937,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FromErr","qualname":"::future::from_err::FromErr","value":"FromErr {  }","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352}],"decl_id":null,"docs":" Future for the `from_err` combinator, changing the error type of a future.","sig":null,"attributes":[{"value":"/ Future for the `from_err` combinator, changing the error type of a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":79716,"byte_end":79794,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":79795,"byte_end":79798,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::from_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":79799,"byte_end":79852,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":79870,"byte_end":79918,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80786,"byte_end":80792,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3361}],"decl_id":null,"docs":" Future for the `or_else` combinator, chaining a computation onto the end of\n a future which fails with an error.","sig":null,"attributes":[{"value":"/ Future for the `or_else` combinator, chaining a computation onto the end of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80532,"byte_end":80611,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a future which fails with an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80612,"byte_end":80651,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80652,"byte_end":80655,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::or_else` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80656,"byte_end":80708,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":80726,"byte_end":80774,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81729,"byte_end":81735,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":3370}],"decl_id":null,"docs":" Future for the `select` combinator, waiting for one of two futures to\n complete.","sig":null,"attributes":[{"value":"/ Future for the `select` combinator, waiting for one of two futures to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81508,"byte_end":81581,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81582,"byte_end":81595,"line_start":4,"line_end":4,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81596,"byte_end":81599,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::select` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81600,"byte_end":81651,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81669,"byte_end":81717,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":82087,"byte_end":82097,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"SelectNext","qualname":"::future::select::SelectNext","value":"SelectNext {  }","parent":null,"children":[{"krate":0,"index":3378}],"decl_id":null,"docs":" Future yielded as the second result in a `Select` future.","sig":null,"attributes":[{"value":"/ Future yielded as the second result in a `Select` future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81831,"byte_end":81892,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81893,"byte_end":81896,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This sentinel future represents the completion of the second future to a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81897,"byte_end":81973,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `select` which finished second.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":81974,"byte_end":82009,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":82027,"byte_end":82075,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3396},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84365,"byte_end":84372,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Select2","qualname":"::future::select2::Select2","value":"Select2 {  }","parent":null,"children":[{"krate":0,"index":3399}],"decl_id":null,"docs":" Future for the `select2` combinator, waiting for one of two differently-typed\n futures to complete.","sig":null,"attributes":[{"value":"/ Future for the `select2` combinator, waiting for one of two differently-typed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84060,"byte_end":84141,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ futures to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84142,"byte_end":84166,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84167,"byte_end":84170,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`Future::select2`] method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84171,"byte_end":84225,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84226,"byte_end":84229,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Future::select2`]: trait.Future.html#method.select2","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84230,"byte_end":84287,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84288,"byte_end":84336,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3404},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85622,"byte_end":85626,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3408}],"decl_id":null,"docs":" Future for the `then` combinator, chaining computations on the end of\n another future regardless of its outcome.","sig":null,"attributes":[{"value":"/ Future for the `then` combinator, chaining computations on the end of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85371,"byte_end":85444,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ another future regardless of its outcome.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85445,"byte_end":85490,"line_start":5,"line_end":5,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85491,"byte_end":85494,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::then` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85495,"byte_end":85544,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85562,"byte_end":85610,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86410,"byte_end":86411,"line_start":8,"line_end":8,"column_start":5,"column_end":6},"name":"A","qualname":"::future::either::Either::A","value":"Either::A(A)","parent":{"krate":0,"index":3414},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86377,"byte_end":86405,"line_start":7,"line_end":7,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86454,"byte_end":86455,"line_start":10,"line_end":10,"column_start":5,"column_end":6},"name":"B","qualname":"::future::either::Either::B","value":"Either::B(B)","parent":{"krate":0,"index":3414},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86420,"byte_end":86449,"line_start":9,"line_end":9,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86358,"byte_end":86364,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{A, B}","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3420}],"decl_id":null,"docs":" Combines two different futures yielding the same item and error\n types into a single type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures yielding the same item and error","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86234,"byte_end":86301,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ types into a single type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86302,"byte_end":86331,"line_start":4,"line_end":4,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86688,"byte_end":86693,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"split","qualname":"<Either<(T, A), (T, B)>>::split","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Splits out the homogeneous type from an either of tuples.","sig":null,"attributes":[{"value":"/ Splits out the homogeneous type from an either of tuples.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86506,"byte_end":86567,"line_start":14,"line_end":14,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86572,"byte_end":86575,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is typically useful when combined with the `Future::select2`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86580,"byte_end":86656,"line_start":16,"line_end":16,"column_start":5,"column_end":81}},{"value":"/ combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86661,"byte_end":86676,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":87796,"byte_end":87803,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431}],"decl_id":null,"docs":" Do something with the item of a future, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the item of a future, passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":87603,"byte_end":87661,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":87662,"byte_end":87665,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::inspect` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":87666,"byte_end":87718,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":87736,"byte_end":87784,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8326973,"byte_end":8326984,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":3662}],"decl_id":null,"docs":" Future for the `catch_unwind` combinator.","sig":null,"attributes":[{"value":"/ Future for the `catch_unwind` combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8326788,"byte_end":8326833,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8326834,"byte_end":8326837,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Future::catch_unwind` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8326838,"byte_end":8326895,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8326913,"byte_end":8326961,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328482,"byte_end":8328489,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":3489}],"decl_id":null,"docs":" A future which takes a list of futures and resolves with a vector of the\n completed values.","sig":null,"attributes":[{"value":"/ A future which takes a list of futures and resolves with a vector of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328264,"byte_end":8328340,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ completed values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328341,"byte_end":8328362,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328363,"byte_end":8328366,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This future is created with the `join_all` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328367,"byte_end":8328421,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328422,"byte_end":8328470,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330039,"byte_end":8330047,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn <I> (i: I) -> JoinAll<I>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the results of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the results of the futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329023,"byte_end":8329103,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329104,"byte_end":8329114,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329115,"byte_end":8329118,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329119,"byte_end":8329198,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329199,"byte_end":8329279,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ were provided. If any future returns an error then all other futures will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329280,"byte_end":8329360,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ canceled and an error will be returned immediately. If all futures complete","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329361,"byte_end":8329440,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ successfully, however, then the returned future will succeed with a `Vec` of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329441,"byte_end":8329521,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ all the successful results.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329522,"byte_end":8329553,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329554,"byte_end":8329557,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329558,"byte_end":8329572,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329573,"byte_end":8329576,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329577,"byte_end":8329584,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329585,"byte_end":8329612,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329613,"byte_end":8329616,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let f = join_all(vec![","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329617,"byte_end":8329643,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(1),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329644,"byte_end":8329670,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(2),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329671,"byte_end":8329697,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/     ok::<u32, u32>(3),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329698,"byte_end":8329724,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329725,"byte_end":8329732,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ let f = f.map(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329733,"byte_end":8329756,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     assert_eq!(x, [1, 2, 3]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329757,"byte_end":8329790,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329791,"byte_end":8329798,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329799,"byte_end":8329802,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let f = join_all(vec![","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329803,"byte_end":8329829,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/     Box::new(ok::<u32, u32>(1)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329830,"byte_end":8329866,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/     Box::new(err::<u32, u32>(2)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329867,"byte_end":8329904,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     Box::new(ok::<u32, u32>(3)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329905,"byte_end":8329941,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/ ]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329942,"byte_end":8329949,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ let f = f.then(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329950,"byte_end":8329974,"line_start":71,"line_end":71,"column_start":1,"column_end":25}},{"value":"/     assert_eq!(x, Err(2));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8329975,"byte_end":8330005,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/     x","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330006,"byte_end":8330015,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330016,"byte_end":8330023,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330024,"byte_end":8330031,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332250,"byte_end":8332259,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":3679}],"decl_id":null,"docs":" Future for the `select_all` combinator, waiting for one of any of a list of\n futures to complete.","sig":null,"attributes":[{"value":"/ Future for the `select_all` combinator, waiting for one of any of a list of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332014,"byte_end":8332093,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ futures to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332094,"byte_end":8332118,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332119,"byte_end":8332122,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the `select_all` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332123,"byte_end":8332172,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332190,"byte_end":8332238,"line_start":14,"line_end":14,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332327,"byte_end":8332340,"line_start":20,"line_end":20,"column_start":10,"column_end":23},"name":"SelectAllNext","qualname":"::future::select_all::SelectAllNext","value":"A","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332767,"byte_end":8332777,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn <I> (iter: I) -> SelectAll<<I::Item as IntoFuture>::Future>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332350,"byte_end":8332416,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332417,"byte_end":8332420,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332421,"byte_end":8332501,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ completion or failure the item resolved will be returned, along with the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332502,"byte_end":8332578,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ index of the future that was ready and the list of all the remaining","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332579,"byte_end":8332651,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332652,"byte_end":8332664,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332665,"byte_end":8332668,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332669,"byte_end":8332681,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332682,"byte_end":8332685,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8332686,"byte_end":8332759,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334476,"byte_end":8334484,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":3685}],"decl_id":null,"docs":" Future for the `select_ok` combinator, waiting for one of any of a list of\n futures to successfully complete. Unlike `select_all`, this future ignores all\n but the last error, if there are any.","sig":null,"attributes":[{"value":"/ Future for the `select_ok` combinator, waiting for one of any of a list of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334142,"byte_end":8334220,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ futures to successfully complete. Unlike `select_all`, this future ignores all","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334221,"byte_end":8334303,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ but the last error, if there are any.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334304,"byte_end":8334345,"line_start":11,"line_end":11,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334346,"byte_end":8334349,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is created by the `select_ok` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334350,"byte_end":8334398,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334416,"byte_end":8334464,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3529},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8335032,"byte_end":8335041,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn <I> (iter: I) -> SelectOk<<I::Item as IntoFuture>::Future>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334528,"byte_end":8334622,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334623,"byte_end":8334626,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334627,"byte_end":8334716,"line_start":22,"line_end":22,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334717,"byte_end":8334801,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334802,"byte_end":8334883,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334884,"byte_end":8334929,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334930,"byte_end":8334933,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334934,"byte_end":8334946,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334947,"byte_end":8334950,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8334951,"byte_end":8335024,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337690,"byte_end":8337696,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":3564},{"krate":0,"index":3565}],"decl_id":null,"docs":" A future that is cloneable and can be polled in multiple threads.\n Use `Future::shared()` method to convert any future into a `Shared` future.\n","sig":null,"attributes":[{"value":"/ A future that is cloneable and can be polled in multiple threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337480,"byte_end":8337549,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ Use `Future::shared()` method to convert any future into a `Shared` future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337550,"byte_end":8337629,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337630,"byte_end":8337678,"line_start":29,"line_end":29,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339195,"byte_end":8339198,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Shared<F>>::new","value":"fn (future: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.12\", note = \"use `Future::shared` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339054,"byte_end":8339124,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339129,"byte_end":8339164,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339468,"byte_end":8339472,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<F>>::peek","value":"fn (&self) -> Option<Result<SharedItem<F::Item>, SharedError<F::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" If any clone of this `Shared` has completed execution, returns its result immediately\n without blocking. Otherwise, returns None without triggering the work represented by\n this `Shared`.\n","sig":null,"attributes":[{"value":"/ If any clone of this `Shared` has completed execution, returns its result immediately","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339251,"byte_end":8339340,"line_start":90,"line_end":90,"column_start":5,"column_end":94}},{"value":"/ without blocking. Otherwise, returns None without triggering the work represented by","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339345,"byte_end":8339433,"line_start":91,"line_end":91,"column_start":5,"column_end":93}},{"value":"/ this `Shared`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8339438,"byte_end":8339456,"line_start":92,"line_end":92,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344816,"byte_end":8344826,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"SharedItem","qualname":"::future::shared::SharedItem","value":"SharedItem {  }","parent":null,"children":[{"krate":0,"index":3691}],"decl_id":null,"docs":" A wrapped item of the original future that is cloneable and implements Deref\n for ease of use.\n","sig":null,"attributes":[{"value":"/ A wrapped item of the original future that is cloneable and implements Deref","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344679,"byte_end":8344759,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ for ease of use.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344760,"byte_end":8344780,"line_start":265,"line_end":265,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345117,"byte_end":8345128,"line_start":282,"line_end":282,"column_start":12,"column_end":23},"name":"SharedError","qualname":"::future::shared::SharedError","value":"SharedError {  }","parent":null,"children":[{"krate":0,"index":3700}],"decl_id":null,"docs":" A wrapped error of the original future that is cloneable and implements Deref\n for ease of use.\n","sig":null,"attributes":[{"value":"/ A wrapped error of the original future that is cloneable and implements Deref","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344979,"byte_end":8345060,"line_start":279,"line_end":279,"column_start":1,"column_end":82}},{"value":"/ for ease of use.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345061,"byte_end":8345081,"line_start":280,"line_end":280,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15606,"byte_end":15615,"line_start":106,"line_end":106,"column_start":14,"column_end":23},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"::std::boxed::Box<Future<Item = T, Error = E> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Future + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6399,"byte_end":6426,"line_start":168,"line_end":168,"column_start":9,"column_end":36}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15345,"byte_end":15592,"line_start":103,"line_end":105,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":468},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18863,"byte_end":18869,"line_start":178,"line_end":178,"column_start":11,"column_end":17},"name":"Future","qualname":"::future::Future","value":"Future","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" Trait for types which are a placeholder of a value that may become\n available at some later point in time.","sig":null,"attributes":[{"value":"/ Trait for types which are a placeholder of a value that may become","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15934,"byte_end":16004,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/ available at some later point in time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16005,"byte_end":16047,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16048,"byte_end":16051,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ In addition to the documentation here you can also find more information","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16052,"byte_end":16128,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ about futures [online] at [https://tokio.rs](https://tokio.rs)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16129,"byte_end":16195,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16196,"byte_end":16199,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/futures/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16200,"byte_end":16260,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16261,"byte_end":16264,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Futures are used to provide a sentinel through which a value can be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16265,"byte_end":16336,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/ referenced. They crucially allow chaining and composing operations through","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16337,"byte_end":16415,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ consumption which allows expressing entire trees of computation as one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16416,"byte_end":16490,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ sentinel value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16491,"byte_end":16510,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16511,"byte_end":16514,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The ergonomics and implementation of the `Future` trait are very similar to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16515,"byte_end":16594,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ the `Iterator` trait in that there is just one methods you need","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16595,"byte_end":16662,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ to implement, but you get a whole lot of others for free as a result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16663,"byte_end":16736,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16737,"byte_end":16740,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # The `poll` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16741,"byte_end":16764,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16765,"byte_end":16768,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The core method of future, `poll`, is used to attempt to generate the value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16769,"byte_end":16848,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ of a `Future`. This method *does not block* but is allowed to inform the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16849,"byte_end":16925,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/ caller that the value is not ready yet. Implementations of `poll` may","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":16926,"byte_end":16999,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ themselves do work to generate the value, but it's guaranteed that this will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17000,"byte_end":17080,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ never block the calling thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17081,"byte_end":17116,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17117,"byte_end":17120,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ A key aspect of this method is that if the value is not yet available the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17121,"byte_end":17198,"line_start":145,"line_end":145,"column_start":1,"column_end":78}},{"value":"/ current task is scheduled to receive a notification when it's later ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17199,"byte_end":17279,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ be made available. This follows what's typically known as a \"readiness\" or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17280,"byte_end":17358,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ \"pull\" model where values are pulled out of futures on demand, and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17359,"byte_end":17429,"line_start":148,"line_end":148,"column_start":1,"column_end":71}},{"value":"/ otherwise a task is notified when a value might be ready to get pulled out.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17430,"byte_end":17509,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17510,"byte_end":17513,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The `poll` method is not intended to be called in general, but rather is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17514,"byte_end":17590,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/ typically called in the context of a \"task\" which drives a future to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17591,"byte_end":17663,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/ completion. For more information on this see the `task` module.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17664,"byte_end":17731,"line_start":153,"line_end":153,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17732,"byte_end":17735,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ More information about the details of `poll` and the nitty-gritty of tasks","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17736,"byte_end":17814,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ can be [found online at tokio.rs][poll-dox].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17815,"byte_end":17863,"line_start":156,"line_end":156,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17864,"byte_end":17867,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [poll-dox]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17868,"byte_end":17941,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17942,"byte_end":17945,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ # Combinators","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17946,"byte_end":17963,"line_start":160,"line_end":160,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17964,"byte_end":17967,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Like iterators, futures provide a large number of combinators to work with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":17968,"byte_end":18046,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ futures to express computations in a much more natural method than","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18047,"byte_end":18117,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/ scheduling a number of callbacks. For example the `map` method can change","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18118,"byte_end":18195,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ a `Future<Item=T>` to a `Future<Item=U>` or an `and_then` combinator could","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18196,"byte_end":18274,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ create a future after the first one is done and only be resolved when the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18275,"byte_end":18352,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/ second is done.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18353,"byte_end":18372,"line_start":167,"line_end":167,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18373,"byte_end":18376,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Combinators act very similarly to the methods on the `Iterator` trait itself","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18377,"byte_end":18457,"line_start":169,"line_end":169,"column_start":1,"column_end":81}},{"value":"/ or those on `Option` and `Result`. Like with iterators, the combinators are","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18458,"byte_end":18537,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ zero-cost and don't impose any extra layers of indirection you wouldn't","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18538,"byte_end":18613,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ otherwise have to write down.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18614,"byte_end":18647,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18648,"byte_end":18651,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ More information about combinators can be found [on tokio.rs].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18652,"byte_end":18718,"line_start":174,"line_end":174,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18719,"byte_end":18722,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ [on tokio.rs]: https://tokio.rs/docs/going-deeper-futures/futures-mechanics/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18723,"byte_end":18803,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18804,"byte_end":18852,"line_start":177,"line_end":177,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":469},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18972,"byte_end":18976,"line_start":181,"line_end":181,"column_start":10,"column_end":14},"name":"Item","qualname":"::future::Future::Item","value":"type Item;","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" The type of value that this future will resolved with if it is\n successful.\n","sig":null,"attributes":[{"value":"/ The type of value that this future will resolved with if it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18876,"byte_end":18942,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"/ successful.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18947,"byte_end":18962,"line_start":180,"line_end":180,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":470},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19090,"byte_end":19095,"line_start":185,"line_end":185,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::Future::Error","value":"type Error;","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" The type of error that this future will resolve with if it fails in a\n normal fashion.\n","sig":null,"attributes":[{"value":"/ The type of error that this future will resolve with if it fails in a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":18983,"byte_end":19056,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ normal fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19061,"byte_end":19080,"line_start":184,"line_end":184,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23802,"byte_end":23806,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"poll","qualname":"::future::Future::poll","value":"fn (&mut self) -> Poll<Self::Item, Self::Error>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Query this future to see if its value has become available, registering\n interest if it is not.","sig":null,"attributes":[{"value":"/ Query this future to see if its value has become available, registering","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19102,"byte_end":19177,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ interest if it is not.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19182,"byte_end":19208,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19213,"byte_end":19216,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This function will check the internal state of the future and assess","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19221,"byte_end":19293,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ whether the value is ready to be produced. Implementers of this function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19298,"byte_end":19374,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ should ensure that a call to this **never blocks** as event loops may","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19379,"byte_end":19452,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ not work properly otherwise.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19457,"byte_end":19489,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19494,"byte_end":19497,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ When a future is not ready yet, the `Async::NotReady` value will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19502,"byte_end":19573,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ returned. In this situation the future will *also* register interest of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19578,"byte_end":19653,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ the current task in the value being produced. This is done by calling","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19658,"byte_end":19731,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/ `task::park` to retrieve a handle to the current `Task`. When the future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19736,"byte_end":19812,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ is then ready to make progress (e.g. it should be `poll`ed again) the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19817,"byte_end":19890,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/ `unpark` method is called on the `Task`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19895,"byte_end":19939,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19944,"byte_end":19947,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ More information about the details of `poll` and the nitty-gritty of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":19952,"byte_end":20024,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ tasks can be [found online at tokio.rs][poll-dox].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20029,"byte_end":20083,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20088,"byte_end":20091,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [poll-dox]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20096,"byte_end":20169,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20174,"byte_end":20177,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Runtime characteristics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20182,"byte_end":20211,"line_start":207,"line_end":207,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20216,"byte_end":20219,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This function, `poll`, is the primary method for 'making progress'","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20224,"byte_end":20294,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ within a tree of futures. For example this method will be called","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20299,"byte_end":20367,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ repeatedly as the internal state machine makes its various transitions.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20372,"byte_end":20447,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ Executors are responsible for ensuring that this function is called in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20452,"byte_end":20526,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the right location (e.g. always on an I/O thread or not). Unless it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20531,"byte_end":20605,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ otherwise arranged to be so, it should be ensured that **implementations","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20610,"byte_end":20686,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ of this function finish very quickly**.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20691,"byte_end":20734,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20739,"byte_end":20742,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Returning quickly prevents unnecessarily clogging up threads and/or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20747,"byte_end":20818,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ event loops while a `poll` function call, for example, takes up compute","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20823,"byte_end":20898,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ resources to perform some expensive computation. If it is known ahead","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20903,"byte_end":20976,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ of time that a call to `poll` may end up taking awhile, the work should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":20981,"byte_end":21056,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ be offloaded to a thread pool (or something similar) to ensure that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21061,"byte_end":21132,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ `poll` can return quickly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21137,"byte_end":21167,"line_start":222,"line_end":222,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21172,"byte_end":21175,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Note that the `poll` function is not called repeatedly in a loop for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21180,"byte_end":21252,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ futures typically, but only whenever the future itself is ready. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21257,"byte_end":21328,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ you're familiar with the `poll(2)` or `select(2)` syscalls on Unix","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21333,"byte_end":21403,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/ it's worth noting that futures typically do *not* suffer the same","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21408,"byte_end":21477,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ problems of \"all wakeups must poll all events\". Futures have enough","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21482,"byte_end":21553,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ support for only polling futures which cause a wakeup.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21558,"byte_end":21616,"line_start":229,"line_end":229,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21621,"byte_end":21624,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21629,"byte_end":21647,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21652,"byte_end":21655,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function returns `Async::NotReady` if the future is not ready yet,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21660,"byte_end":21735,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ `Err` if the future is finished but resolved to an error, or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21740,"byte_end":21804,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/ `Async::Ready` with the result of this future if it's finished","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21809,"byte_end":21875,"line_start":235,"line_end":235,"column_start":5,"column_end":71}},{"value":"/ successfully. Once a future has finished it is considered a contract","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21880,"byte_end":21952,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ error to continue polling the future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":21957,"byte_end":21998,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22003,"byte_end":22006,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned, then the future will internally register","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22011,"byte_end":22082,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ interest in the value being produced for the current task (through","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22087,"byte_end":22157,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ `task::park`). In other words, the current task will receive a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22162,"byte_end":22228,"line_start":241,"line_end":241,"column_start":5,"column_end":71}},{"value":"/ notification (through the `unpark` method) once the value is ready to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22233,"byte_end":22309,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ produced or the future can make progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22314,"byte_end":22359,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22364,"byte_end":22367,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Note that if `NotReady` is returned it only means that *this* task will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22372,"byte_end":22447,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ receive a notification. Historical calls to `poll` with different tasks","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22452,"byte_end":22527,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ will not receive notifications. In other words, implementers of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22532,"byte_end":22603,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ `Future` trait need not store a queue of tasks to notify, but only the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22608,"byte_end":22682,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ last task that called this method. Alternatively callers of this method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22687,"byte_end":22762,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ can only rely on the most recent task which call `poll` being notified","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22767,"byte_end":22841,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ when a future is ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22846,"byte_end":22873,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22878,"byte_end":22881,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22886,"byte_end":22898,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22903,"byte_end":22906,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Once a future has completed (returned `Ready` or `Err` from `poll`),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22911,"byte_end":22983,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ then any future calls to `poll` may panic, block forever, or otherwise","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":22988,"byte_end":23062,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ cause wrong behavior. The `Future` trait itself provides no guarantees","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23067,"byte_end":23141,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ about the behavior of `poll` after a future has completed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23146,"byte_end":23208,"line_start":258,"line_end":258,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23213,"byte_end":23216,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Callers who may call `poll` too many times may want to consider using","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23221,"byte_end":23294,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ the `fuse` adaptor which defines the behavior of `poll`, but comes with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23299,"byte_end":23374,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ a little bit of extra cost.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23379,"byte_end":23410,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23415,"byte_end":23418,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Additionally, calls to `poll` must always be made from within the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23423,"byte_end":23492,"line_start":264,"line_end":264,"column_start":5,"column_end":74}},{"value":"/ context of a task. If a current task is not set then this method will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23497,"byte_end":23570,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ likely panic.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23575,"byte_end":23592,"line_start":266,"line_end":266,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23597,"byte_end":23600,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23605,"byte_end":23617,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23622,"byte_end":23625,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This future may have failed to finish the computation, in which case","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23630,"byte_end":23702,"line_start":270,"line_end":270,"column_start":5,"column_end":77}},{"value":"/ the `Err` variant will be returned with an appropriate payload of an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23707,"byte_end":23779,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23784,"byte_end":23794,"line_start":272,"line_end":272,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25000,"byte_end":25004,"line_start":297,"line_end":297,"column_start":8,"column_end":12},"name":"wait","qualname":"::future::Future::wait","value":"fn (self) -> result::Result<Self::Item, Self::Error>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Block the current thread until this future is resolved.","sig":null,"attributes":[{"value":"/ Block the current thread until this future is resolved.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23857,"byte_end":23916,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23921,"byte_end":23924,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This method will consume ownership of this future, driving it to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":23929,"byte_end":23997,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ completion via `poll` and blocking the current thread while it's waiting","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24002,"byte_end":24078,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ for the value to become available. Once the future is resolved the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24083,"byte_end":24153,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ result of this future is returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24158,"byte_end":24196,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24201,"byte_end":24204,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ > **Note:** This method is not appropriate to call on event loops or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24209,"byte_end":24281,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ >           similar I/O situations because it will prevent the event","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24286,"byte_end":24358,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ >           loop from making progress (this blocks the thread). This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24363,"byte_end":24435,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ >           method should only be called when it's guaranteed that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24440,"byte_end":24514,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ >           blocking work associated with this future will be completed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24519,"byte_end":24594,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ >           by another thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24599,"byte_end":24633,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24638,"byte_end":24641,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24646,"byte_end":24714,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24719,"byte_end":24776,"line_start":290,"line_end":290,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24781,"byte_end":24784,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24789,"byte_end":24801,"line_start":292,"line_end":292,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24806,"byte_end":24809,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This function does not attempt to catch panics. If the `poll` function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24814,"byte_end":24888,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ of this future panics, panics will be propagated to the caller.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24893,"byte_end":24960,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":24965,"byte_end":24992,"line_start":296,"line_end":296,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26325,"byte_end":26330,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::Future::boxed","value":"fn (self) -> BoxFuture<Self::Item, Self::Error>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Convenience function for turning this future into a trait object which\n is also `Send`.","sig":null,"attributes":[{"value":"/ Convenience function for turning this future into a trait object which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25143,"byte_end":25217,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ is also `Send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25222,"byte_end":25241,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25246,"byte_end":25249,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This simply avoids the need to write `Box::new` and can often help with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25254,"byte_end":25329,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ type inference as well by always returning a trait object. Note that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25334,"byte_end":25406,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ this method requires the `Send` bound and returns a `BoxFuture`, which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25411,"byte_end":25485,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/ also encodes this. If you'd like to create a `Box<Future>` without the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25490,"byte_end":25564,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ `Send` bound, then the `Box::new` function can be used instead.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25569,"byte_end":25636,"line_start":310,"line_end":310,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25641,"byte_end":25644,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25649,"byte_end":25717,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25722,"byte_end":25779,"line_start":313,"line_end":313,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25784,"byte_end":25787,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25792,"byte_end":25806,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25811,"byte_end":25814,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25819,"byte_end":25826,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25831,"byte_end":25859,"line_start":318,"line_end":318,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{BoxFuture, result};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25864,"byte_end":25909,"line_start":319,"line_end":319,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25914,"byte_end":25917,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let a: BoxFuture<i32, i32> = result(Ok(1)).boxed();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25922,"byte_end":25977,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25982,"byte_end":25989,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":25994,"byte_end":26021,"line_start":323,"line_end":323,"column_start":5,"column_end":32}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26045,"byte_end":26292,"line_start":325,"line_end":327,"column_start":5,"column_end":98}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26297,"byte_end":26317,"line_start":328,"line_end":328,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27803,"byte_end":27806,"line_start":371,"line_end":371,"column_start":8,"column_end":11},"name":"map","qualname":"::future::Future::map","value":"fn <F, U> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Map this future's result to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's result to a different type, returning a new future of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26472,"byte_end":26547,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26552,"byte_end":26575,"line_start":336,"line_end":336,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26580,"byte_end":26583,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26588,"byte_end":26662,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26667,"byte_end":26738,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26743,"byte_end":26805,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26810,"byte_end":26813,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The closure provided will only be called if this future is resolved","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26818,"byte_end":26889,"line_start":342,"line_end":342,"column_start":5,"column_end":76}},{"value":"/ successfully. If this future returns an error, panics, or is dropped,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26894,"byte_end":26967,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ then the closure provided will never be invoked.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":26972,"byte_end":27024,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27029,"byte_end":27032,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27037,"byte_end":27108,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27113,"byte_end":27184,"line_start":347,"line_end":347,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27189,"byte_end":27210,"line_start":348,"line_end":348,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27215,"byte_end":27218,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27223,"byte_end":27237,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27242,"byte_end":27245,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27250,"byte_end":27257,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27262,"byte_end":27290,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27295,"byte_end":27319,"line_start":354,"line_end":354,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27324,"byte_end":27327,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27332,"byte_end":27375,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27380,"byte_end":27423,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.wait(), Ok(4));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27428,"byte_end":27469,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27474,"byte_end":27481,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27486,"byte_end":27489,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Calling `map` on an errored `Future` has no effect:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27494,"byte_end":27549,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27554,"byte_end":27557,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27562,"byte_end":27569,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27574,"byte_end":27602,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27607,"byte_end":27631,"line_start":365,"line_end":365,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27636,"byte_end":27639,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let future = future::err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27644,"byte_end":27688,"line_start":367,"line_end":367,"column_start":5,"column_end":49}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27693,"byte_end":27736,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.wait(), Err(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27741,"byte_end":27783,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27788,"byte_end":27795,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29209,"byte_end":29216,"line_start":411,"line_end":411,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::Future::map_err","value":"fn <F, E> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Map this future's error to a different error, returning a new future.","sig":null,"attributes":[{"value":"/ Map this future's error to a different error, returning a new future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":27989,"byte_end":28062,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28067,"byte_end":28070,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Result::map_err` where it will change","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28075,"byte_end":28149,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/ the error type of the underlying future. This is useful for example to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28154,"byte_end":28228,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ ensure that futures have the same error type when used with combinators","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28233,"byte_end":28308,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ like `select` and `join`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28313,"byte_end":28342,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28347,"byte_end":28350,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The closure provided will only be called if this future is resolved","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28355,"byte_end":28426,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ with an error. If this future returns a success, panics, or is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28431,"byte_end":28497,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/ dropped, then the closure provided will never be invoked.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28502,"byte_end":28563,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28568,"byte_end":28571,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28576,"byte_end":28647,"line_start":389,"line_end":389,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28652,"byte_end":28678,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28683,"byte_end":28686,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28691,"byte_end":28705,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28710,"byte_end":28713,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28718,"byte_end":28725,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28730,"byte_end":28757,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28762,"byte_end":28765,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let future = err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28770,"byte_end":28806,"line_start":397,"line_end":397,"column_start":5,"column_end":41}},{"value":"/ let new_future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28811,"byte_end":28858,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(new_future.wait(), Err(4));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28863,"byte_end":28905,"line_start":399,"line_end":399,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28910,"byte_end":28917,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28922,"byte_end":28925,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Calling `map_err` on a successful `Future` has no effect:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28930,"byte_end":28991,"line_start":402,"line_end":402,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":28996,"byte_end":28999,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29004,"byte_end":29011,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use futures::future::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29016,"byte_end":29043,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29048,"byte_end":29051,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let future = ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29056,"byte_end":29091,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ let new_future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29096,"byte_end":29143,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(new_future.wait(), Ok(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29148,"byte_end":29189,"line_start":409,"line_end":409,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29194,"byte_end":29201,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30236,"byte_end":30244,"line_start":441,"line_end":441,"column_start":8,"column_end":16},"name":"from_err","qualname":"::future::Future::from_err","value":"fn <E> (self) -> FromErr<Self, E>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Map this future's error to any error implementing `From` for\n this future's `Error`, returning a new future.","sig":null,"attributes":[{"value":"/ Map this future's error to any error implementing `From` for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29408,"byte_end":29472,"line_start":420,"line_end":420,"column_start":5,"column_end":69}},{"value":"/ this future's `Error`, returning a new future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29477,"byte_end":29527,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29532,"byte_end":29535,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function does for futures what `try!` does for `Result`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29540,"byte_end":29605,"line_start":423,"line_end":423,"column_start":5,"column_end":70}},{"value":"/ by letting the compiler infer the type of the resulting error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29610,"byte_end":29676,"line_start":424,"line_end":424,"column_start":5,"column_end":71}},{"value":"/ Just as `map_err` above, this is useful for example to ensure","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29681,"byte_end":29746,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/ that futures have the same error type when used with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29751,"byte_end":29807,"line_start":426,"line_end":426,"column_start":5,"column_end":61}},{"value":"/ combinators like `select` and `join`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29812,"byte_end":29853,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29858,"byte_end":29861,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29866,"byte_end":29937,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29942,"byte_end":29968,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29973,"byte_end":29976,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":29981,"byte_end":29995,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30000,"byte_end":30003,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30008,"byte_end":30015,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30020,"byte_end":30048,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30053,"byte_end":30077,"line_start":436,"line_end":436,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30082,"byte_end":30085,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let future_with_err_u8 = future::err::<(), u8>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30090,"byte_end":30144,"line_start":438,"line_end":438,"column_start":5,"column_end":59}},{"value":"/ let future_with_err_u32 = future_with_err_u8.from_err::<u32>();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30149,"byte_end":30216,"line_start":439,"line_end":439,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30221,"byte_end":30228,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31853,"byte_end":31857,"line_start":485,"line_end":485,"column_start":8,"column_end":12},"name":"then","qualname":"::future::Future::then","value":"fn <F, B> (self, f: F) -> Then<Self, B, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30399,"byte_end":30475,"line_start":447,"line_end":447,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30480,"byte_end":30523,"line_start":448,"line_end":448,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30528,"byte_end":30531,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function can be used to ensure a computation runs regardless of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30536,"byte_end":30608,"line_start":450,"line_end":450,"column_start":5,"column_end":77}},{"value":"/ the conclusion of the future. The closure provided will be yielded a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30613,"byte_end":30685,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ `Result` once the future is complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30690,"byte_end":30731,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30736,"byte_end":30739,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30744,"byte_end":30819,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30824,"byte_end":30898,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30903,"byte_end":30975,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":30980,"byte_end":31051,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31056,"byte_end":31082,"line_start":458,"line_end":458,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31087,"byte_end":31090,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped or panics then the closure `f` will not be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31095,"byte_end":31167,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/ run.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31172,"byte_end":31180,"line_start":461,"line_end":461,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31185,"byte_end":31188,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31193,"byte_end":31264,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31269,"byte_end":31295,"line_start":464,"line_end":464,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31300,"byte_end":31303,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31308,"byte_end":31322,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31327,"byte_end":31330,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31335,"byte_end":31342,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31347,"byte_end":31375,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31380,"byte_end":31404,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31409,"byte_end":31412,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31417,"byte_end":31465,"line_start":472,"line_end":472,"column_start":5,"column_end":53}},{"value":"/ let future_of_4 = future_of_1.then(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31470,"byte_end":31514,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/     x.map(|y| y + 3)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31519,"byte_end":31543,"line_start":474,"line_end":474,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31548,"byte_end":31555,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31560,"byte_end":31563,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31568,"byte_end":31621,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/ let future_of_4 = future_of_err_1.then(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31626,"byte_end":31674,"line_start":478,"line_end":478,"column_start":5,"column_end":53}},{"value":"/     match x {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31679,"byte_end":31696,"line_start":479,"line_end":479,"column_start":5,"column_end":22}},{"value":"/         Ok(_) => panic!(\"expected an error\"),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31701,"byte_end":31750,"line_start":480,"line_end":480,"column_start":5,"column_end":54}},{"value":"/         Err(y) => future::ok::<u32, u32>(y + 3),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31755,"byte_end":31807,"line_start":481,"line_end":481,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31812,"byte_end":31821,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31826,"byte_end":31833,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":31838,"byte_end":31845,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33429,"byte_end":33437,"line_start":526,"line_end":526,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::Future::and_then","value":"fn <F, B> (self, f: F) -> AndThen<Self, B, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Execute another future after this one has resolved successfully.","sig":null,"attributes":[{"value":"/ Execute another future after this one has resolved successfully.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32106,"byte_end":32174,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32179,"byte_end":32182,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function can be used to chain two futures together and ensure that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32187,"byte_end":32262,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ the final future isn't resolved until both have finished. The closure","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32267,"byte_end":32340,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ provided is yielded the successful result of this future and returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32345,"byte_end":32417,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ another value which can be converted into a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32422,"byte_end":32477,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32482,"byte_end":32485,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Note that because `Result` implements the `IntoFuture` trait this method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32490,"byte_end":32566,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ can also be useful for chaining fallible and serial computations onto","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32571,"byte_end":32644,"line_start":501,"line_end":501,"column_start":5,"column_end":78}},{"value":"/ the end of one future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32649,"byte_end":32675,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32680,"byte_end":32683,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped, panics, or completes with an error then the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32688,"byte_end":32762,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ provided closure `f` is never called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32767,"byte_end":32808,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32813,"byte_end":32816,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32821,"byte_end":32892,"line_start":507,"line_end":507,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32897,"byte_end":32923,"line_start":508,"line_end":508,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32928,"byte_end":32931,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32936,"byte_end":32950,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32955,"byte_end":32958,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32963,"byte_end":32970,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":32975,"byte_end":33003,"line_start":513,"line_end":513,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33008,"byte_end":33054,"line_start":514,"line_end":514,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33059,"byte_end":33062,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33067,"byte_end":33115,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/ let future_of_4 = future_of_1.and_then(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33120,"byte_end":33168,"line_start":517,"line_end":517,"column_start":5,"column_end":53}},{"value":"/     Ok(x + 3)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33173,"byte_end":33190,"line_start":518,"line_end":518,"column_start":5,"column_end":22}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33195,"byte_end":33202,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33207,"byte_end":33210,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33215,"byte_end":33268,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/ future_of_err_1.and_then(|_| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33273,"byte_end":33333,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/     panic!(\"should not be called in case of an error\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33338,"byte_end":33397,"line_start":523,"line_end":523,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33402,"byte_end":33409,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33414,"byte_end":33421,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35011,"byte_end":35018,"line_start":567,"line_end":567,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::Future::or_else","value":"fn <F, B> (self, f: F) -> OrElse<Self, B, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Execute another future if this one resolves with an error.","sig":null,"attributes":[{"value":"/ Execute another future if this one resolves with an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33688,"byte_end":33750,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33755,"byte_end":33758,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Return a future that passes along this future's value if it succeeds,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33763,"byte_end":33836,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ and otherwise passes the error to the closure `f` and waits for the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33841,"byte_end":33912,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ future it returns. The closure may also simply return a value that can","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33917,"byte_end":33991,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ be converted into a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":33996,"byte_end":34027,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34032,"byte_end":34035,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ Note that because `Result` implements the `IntoFuture` trait this method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34040,"byte_end":34116,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ can also be useful for chaining together fallback computations, where","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34121,"byte_end":34194,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/ when one fails, the next is attempted.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34199,"byte_end":34241,"line_start":543,"line_end":543,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34246,"byte_end":34249,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If this future is dropped, panics, or completes successfully then the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34254,"byte_end":34327,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ provided closure `f` is never called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34332,"byte_end":34373,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34378,"byte_end":34381,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34386,"byte_end":34457,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34462,"byte_end":34488,"line_start":549,"line_end":549,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34493,"byte_end":34496,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34501,"byte_end":34515,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34520,"byte_end":34523,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34528,"byte_end":34535,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34540,"byte_end":34568,"line_start":554,"line_end":554,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34573,"byte_end":34619,"line_start":555,"line_end":555,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34624,"byte_end":34627,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let future_of_err_1 = future::err::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34632,"byte_end":34685,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/ let future_of_4 = future_of_err_1.or_else(|x| -> Result<u32, u32> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34690,"byte_end":34761,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/     Ok(x + 3)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34766,"byte_end":34783,"line_start":559,"line_end":559,"column_start":5,"column_end":22}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34788,"byte_end":34795,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34800,"byte_end":34803,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34808,"byte_end":34856,"line_start":562,"line_end":562,"column_start":5,"column_end":53}},{"value":"/ future_of_1.or_else(|_| -> FutureResult<u32, u32> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34861,"byte_end":34916,"line_start":563,"line_end":563,"column_start":5,"column_end":60}},{"value":"/     panic!(\"should not be called in case of success\");","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34921,"byte_end":34979,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34984,"byte_end":34991,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":34996,"byte_end":35003,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37022,"byte_end":37028,"line_start":625,"line_end":625,"column_start":8,"column_end":14},"name":"select","qualname":"::future::Future::select","value":"fn <B> (self, other: B) -> Select<Self, B::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Waits for either one of two futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two futures to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35266,"byte_end":35318,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35323,"byte_end":35326,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits for either this or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35331,"byte_end":35405,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ the `other` future to complete. The returned future will finish with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35410,"byte_end":35482,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ both the value resolved and a future representing the completion of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35487,"byte_end":35562,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ other work. Both futures must have the same item and error type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35567,"byte_end":35635,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35640,"byte_end":35643,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35648,"byte_end":35720,"line_start":582,"line_end":582,"column_start":5,"column_end":77}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35725,"byte_end":35753,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35758,"byte_end":35761,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35766,"byte_end":35780,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35785,"byte_end":35788,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35793,"byte_end":35806,"line_start":587,"line_end":587,"column_start":5,"column_end":18}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35811,"byte_end":35839,"line_start":588,"line_end":588,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35844,"byte_end":35868,"line_start":589,"line_end":589,"column_start":5,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35873,"byte_end":35893,"line_start":590,"line_end":590,"column_start":5,"column_end":25}},{"value":"/ use std::time;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35898,"byte_end":35916,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35921,"byte_end":35924,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ let future1 = future::lazy(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35929,"byte_end":35964,"line_start":593,"line_end":593,"column_start":5,"column_end":40}},{"value":"/     thread::sleep(time::Duration::from_secs(5));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":35969,"byte_end":36021,"line_start":594,"line_end":594,"column_start":5,"column_end":57}},{"value":"/     future::ok::<char, ()>('a')","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36026,"byte_end":36061,"line_start":595,"line_end":595,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36066,"byte_end":36073,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36078,"byte_end":36081,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let future2 = future::lazy(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36086,"byte_end":36121,"line_start":598,"line_end":598,"column_start":5,"column_end":40}},{"value":"/     thread::sleep(time::Duration::from_secs(3));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36126,"byte_end":36178,"line_start":599,"line_end":599,"column_start":5,"column_end":57}},{"value":"/     future::ok::<char, ()>('b')","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36183,"byte_end":36218,"line_start":600,"line_end":600,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36223,"byte_end":36230,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36235,"byte_end":36238,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let (value, last_future) = future1.select(future2).wait().ok().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36243,"byte_end":36319,"line_start":603,"line_end":603,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(value, 'a');","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36324,"byte_end":36351,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(last_future.wait().unwrap(), 'b');","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36356,"byte_end":36405,"line_start":605,"line_end":605,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36410,"byte_end":36417,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36422,"byte_end":36425,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ A poor-man's `join` implemented on top of `select`:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36430,"byte_end":36485,"line_start":608,"line_end":608,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36490,"byte_end":36493,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36498,"byte_end":36505,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36510,"byte_end":36538,"line_start":611,"line_end":611,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36543,"byte_end":36567,"line_start":612,"line_end":612,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36572,"byte_end":36575,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ fn join<A>(a: A, b: A) -> Box<Future<Item=(u32, u32), Error=u32>>","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36580,"byte_end":36649,"line_start":614,"line_end":614,"column_start":5,"column_end":74}},{"value":"/     where A: Future<Item = u32, Error = u32> + 'static,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36654,"byte_end":36713,"line_start":615,"line_end":615,"column_start":5,"column_end":64}},{"value":"/ {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36718,"byte_end":36723,"line_start":616,"line_end":616,"column_start":5,"column_end":10}},{"value":"/     Box::new(a.select(b).then(|res| -> Box<Future<Item=_, Error=_>> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36728,"byte_end":36801,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/         match res {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36806,"byte_end":36829,"line_start":618,"line_end":618,"column_start":5,"column_end":28}},{"value":"/             Ok((a, b)) => Box::new(b.map(move |b| (a, b))),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36834,"byte_end":36897,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/             Err((a, _)) => Box::new(future::err(a)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36902,"byte_end":36958,"line_start":620,"line_end":620,"column_start":5,"column_end":61}},{"value":"/         }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36963,"byte_end":36976,"line_start":621,"line_end":621,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36981,"byte_end":36992,"line_start":622,"line_end":622,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":36997,"byte_end":37002,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37007,"byte_end":37014,"line_start":624,"line_end":624,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38936,"byte_end":38943,"line_start":671,"line_end":671,"column_start":8,"column_end":15},"name":"select2","qualname":"::future::Future::select2","value":"fn <B> (self, other: B) -> Select2<Self, B::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37381,"byte_end":37451,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37456,"byte_end":37459,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits for either this or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37464,"byte_end":37538,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/ the `other` future to complete. The returned future will finish with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37543,"byte_end":37615,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ both the value resolved and a future representing the completion of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37620,"byte_end":37695,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ other work.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37700,"byte_end":37715,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37720,"byte_end":37723,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37728,"byte_end":37800,"line_start":641,"line_end":641,"column_start":5,"column_end":77}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37805,"byte_end":37833,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37838,"byte_end":37841,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37846,"byte_end":37913,"line_start":644,"line_end":644,"column_start":5,"column_end":72}},{"value":"/ success/error type you can use the `Either::split` method to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37918,"byte_end":37982,"line_start":645,"line_end":645,"column_start":5,"column_end":69}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":37987,"byte_end":38037,"line_start":646,"line_end":646,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38042,"byte_end":38045,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38050,"byte_end":38064,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38069,"byte_end":38072,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38077,"byte_end":38084,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38089,"byte_end":38117,"line_start":651,"line_end":651,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38122,"byte_end":38162,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38167,"byte_end":38170,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // A poor-man's join implemented on top of select2","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38175,"byte_end":38229,"line_start":654,"line_end":654,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38234,"byte_end":38237,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> Box<Future<Item=(A::Item, B::Item), Error=E>>","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38242,"byte_end":38323,"line_start":656,"line_end":656,"column_start":5,"column_end":86}},{"value":"/     where A: Future<Error = E> + 'static,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38328,"byte_end":38373,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/           B: Future<Error = E> + 'static,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38378,"byte_end":38423,"line_start":658,"line_end":658,"column_start":5,"column_end":50}},{"value":"/           E: 'static,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38428,"byte_end":38453,"line_start":659,"line_end":659,"column_start":5,"column_end":30}},{"value":"/ {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38458,"byte_end":38463,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/     Box::new(a.select2(b).then(|res| -> Box<Future<Item=_, Error=_>> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38468,"byte_end":38542,"line_start":661,"line_end":661,"column_start":5,"column_end":79}},{"value":"/         match res {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38547,"byte_end":38570,"line_start":662,"line_end":662,"column_start":5,"column_end":28}},{"value":"/             Ok(Either::A((x, b))) => Box::new(b.map(move |y| (x, y))),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38575,"byte_end":38649,"line_start":663,"line_end":663,"column_start":5,"column_end":79}},{"value":"/             Ok(Either::B((y, a))) => Box::new(a.map(move |x| (x, y))),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38654,"byte_end":38728,"line_start":664,"line_end":664,"column_start":5,"column_end":79}},{"value":"/             Err(Either::A((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38733,"byte_end":38800,"line_start":665,"line_end":665,"column_start":5,"column_end":72}},{"value":"/             Err(Either::B((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38805,"byte_end":38872,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38877,"byte_end":38890,"line_start":667,"line_end":667,"column_start":5,"column_end":18}},{"value":"/     }))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38895,"byte_end":38906,"line_start":668,"line_end":668,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38911,"byte_end":38916,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":38921,"byte_end":38928,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40341,"byte_end":40345,"line_start":716,"line_end":716,"column_start":8,"column_end":12},"name":"join","qualname":"::future::Future::join","value":"fn <B> (self, other: B) -> Join<Self, B::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39097,"byte_end":39168,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39173,"byte_end":39176,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will return a new future which awaits both this and the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39181,"byte_end":39254,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/ `other` future to complete. The returned future will finish with a tuple","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39259,"byte_end":39335,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/ of both results.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39340,"byte_end":39360,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39365,"byte_end":39368,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Both futures must have the same error type, and if either finishes with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39373,"byte_end":39448,"line_start":683,"line_end":683,"column_start":5,"column_end":80}},{"value":"/ an error then the other will be dropped and that error will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39453,"byte_end":39519,"line_start":684,"line_end":684,"column_start":5,"column_end":71}},{"value":"/ returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39524,"byte_end":39537,"line_start":685,"line_end":685,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39542,"byte_end":39545,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39550,"byte_end":39621,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39626,"byte_end":39652,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39657,"byte_end":39660,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39665,"byte_end":39679,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39684,"byte_end":39687,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39692,"byte_end":39699,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39704,"byte_end":39732,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39737,"byte_end":39761,"line_start":694,"line_end":694,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39766,"byte_end":39769,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let a = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39774,"byte_end":39812,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/ let b = future::ok::<u32, u32>(2);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39817,"byte_end":39855,"line_start":697,"line_end":697,"column_start":5,"column_end":43}},{"value":"/ let pair = a.join(b);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39860,"byte_end":39885,"line_start":698,"line_end":698,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39890,"byte_end":39893,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.wait(), Ok((1, 2)));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39898,"byte_end":39938,"line_start":700,"line_end":700,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39943,"byte_end":39950,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39955,"byte_end":39958,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ If one or both of the joined `Future`s is errored, the resulting","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":39963,"byte_end":40031,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/ `Future` will be errored:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40036,"byte_end":40065,"line_start":704,"line_end":704,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40070,"byte_end":40073,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40078,"byte_end":40085,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40090,"byte_end":40118,"line_start":707,"line_end":707,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40123,"byte_end":40147,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40152,"byte_end":40155,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let a = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40160,"byte_end":40198,"line_start":710,"line_end":710,"column_start":5,"column_end":43}},{"value":"/ let b = future::err::<u32, u32>(2);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40203,"byte_end":40242,"line_start":711,"line_end":711,"column_start":5,"column_end":44}},{"value":"/ let pair = a.join(b);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40247,"byte_end":40272,"line_start":712,"line_end":712,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40277,"byte_end":40280,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pair.wait(), Err(2));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40285,"byte_end":40321,"line_start":714,"line_end":714,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40326,"byte_end":40333,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40652,"byte_end":40657,"line_start":725,"line_end":725,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::Future::join3","value":"fn <B, C> (self, b: B, c: C) -> Join3<Self, B::Future, C::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40602,"byte_end":40644,"line_start":724,"line_end":724,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40968,"byte_end":40973,"line_start":734,"line_end":734,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::Future::join4","value":"fn <B, C, D> (self, b: B, c: C, d: D) -> Join4<Self, B::Future, C::Future, D::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":40918,"byte_end":40960,"line_start":733,"line_end":733,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":41391,"byte_end":41396,"line_start":745,"line_end":745,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::Future::join5","value":"fn <B, C, D, E> (self, b: B, c: C, d: D, e: E) -> Join5<Self, B::Future, C::Future, D::Future, E::Future>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Same as `join`, but with more futures.\n","sig":null,"attributes":[{"value":"/ Same as `join`, but with more futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":41341,"byte_end":41383,"line_start":744,"line_end":744,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42640,"byte_end":42651,"line_start":778,"line_end":778,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::Future::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":41871,"byte_end":41924,"line_start":757,"line_end":757,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":41929,"byte_end":41932,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":41937,"byte_end":42011,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42016,"byte_end":42079,"line_start":760,"line_end":760,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42084,"byte_end":42087,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42092,"byte_end":42106,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42111,"byte_end":42114,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42119,"byte_end":42126,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42131,"byte_end":42159,"line_start":765,"line_end":765,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42164,"byte_end":42188,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42193,"byte_end":42196,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(17);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42201,"byte_end":42244,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/ let mut stream = future.into_stream();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42249,"byte_end":42291,"line_start":769,"line_end":769,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42296,"byte_end":42354,"line_start":770,"line_end":770,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42359,"byte_end":42413,"line_start":771,"line_end":771,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42418,"byte_end":42421,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let future = future::err::<bool, _>(19);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42426,"byte_end":42470,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/ let mut stream = future.into_stream();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42475,"byte_end":42517,"line_start":774,"line_end":774,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(Err(19), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42522,"byte_end":42561,"line_start":775,"line_end":775,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42566,"byte_end":42620,"line_start":776,"line_end":776,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42625,"byte_end":42632,"line_start":777,"line_end":777,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44092,"byte_end":44099,"line_start":820,"line_end":820,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::Future::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42752,"byte_end":42827,"line_start":784,"line_end":784,"column_start":5,"column_end":80}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42832,"byte_end":42868,"line_start":785,"line_end":785,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42873,"byte_end":42876,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42881,"byte_end":42950,"line_start":787,"line_end":787,"column_start":5,"column_end":74}},{"value":"/ computation out the final result. This method can only be called","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":42955,"byte_end":43023,"line_start":788,"line_end":788,"column_start":5,"column_end":73}},{"value":"/ when the successful result of this future itself implements the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43028,"byte_end":43095,"line_start":789,"line_end":789,"column_start":5,"column_end":72}},{"value":"/ `IntoFuture` trait and the error can be created from this future's error","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43100,"byte_end":43176,"line_start":790,"line_end":790,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43181,"byte_end":43190,"line_start":791,"line_end":791,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43195,"byte_end":43198,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.and_then(|x| x)`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43203,"byte_end":43267,"line_start":793,"line_end":793,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43272,"byte_end":43275,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43280,"byte_end":43351,"line_start":795,"line_end":795,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43356,"byte_end":43382,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43387,"byte_end":43390,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43395,"byte_end":43409,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43414,"byte_end":43417,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43422,"byte_end":43429,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43434,"byte_end":43462,"line_start":801,"line_end":801,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43467,"byte_end":43491,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43496,"byte_end":43499,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let nested_future = future::ok::<_, u32>(future::ok::<u32, u32>(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43504,"byte_end":43576,"line_start":804,"line_end":804,"column_start":5,"column_end":77}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43581,"byte_end":43622,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.wait(), Ok(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43627,"byte_end":43664,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43669,"byte_end":43676,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43681,"byte_end":43684,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ Calling `flatten` on an errored `Future`, or if the inner `Future` is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43689,"byte_end":43762,"line_start":809,"line_end":809,"column_start":5,"column_end":78}},{"value":"/ errored, will result in an errored `Future`:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43767,"byte_end":43815,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43820,"byte_end":43823,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43828,"byte_end":43835,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43840,"byte_end":43868,"line_start":813,"line_end":813,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43873,"byte_end":43897,"line_start":814,"line_end":814,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43902,"byte_end":43905,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let nested_future = future::ok::<_, u32>(future::err::<u32, u32>(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43910,"byte_end":43983,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":43988,"byte_end":44029,"line_start":817,"line_end":817,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.wait(), Err(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44034,"byte_end":44072,"line_start":818,"line_end":818,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44077,"byte_end":44084,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45493,"byte_end":45507,"line_start":860,"line_end":860,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::Future::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44503,"byte_end":44578,"line_start":832,"line_end":832,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44583,"byte_end":44606,"line_start":833,"line_end":833,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44611,"byte_end":44614,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44619,"byte_end":44691,"line_start":835,"line_end":835,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44696,"byte_end":44769,"line_start":836,"line_end":836,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44774,"byte_end":44788,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44793,"byte_end":44796,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44801,"byte_end":44871,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44876,"byte_end":44894,"line_start":840,"line_end":840,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44899,"byte_end":44902,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44907,"byte_end":44921,"line_start":842,"line_end":842,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44926,"byte_end":44929,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44934,"byte_end":44941,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44946,"byte_end":44974,"line_start":845,"line_end":845,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":44979,"byte_end":45003,"line_start":846,"line_end":846,"column_start":5,"column_end":29}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45008,"byte_end":45032,"line_start":847,"line_end":847,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45037,"byte_end":45040,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45045,"byte_end":45085,"line_start":849,"line_end":849,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = future::ok::<_, bool>(stream::iter_ok(stream_items));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45090,"byte_end":45172,"line_start":850,"line_end":850,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45177,"byte_end":45180,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45185,"byte_end":45238,"line_start":852,"line_end":852,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45243,"byte_end":45246,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream.wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45251,"byte_end":45284,"line_start":854,"line_end":854,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Ok(17), iter.next().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45289,"byte_end":45334,"line_start":855,"line_end":855,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Ok(18), iter.next().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45339,"byte_end":45384,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Ok(19), iter.next().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45389,"byte_end":45434,"line_start":857,"line_end":857,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45439,"byte_end":45473,"line_start":858,"line_end":858,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45478,"byte_end":45485,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47068,"byte_end":47072,"line_start":900,"line_end":900,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::Future::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45687,"byte_end":45760,"line_start":867,"line_end":867,"column_start":5,"column_end":78}},{"value":"/ completed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45765,"byte_end":45779,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45784,"byte_end":45787,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Currently once a future has returned `Ready` or `Err` from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45792,"byte_end":45854,"line_start":870,"line_end":870,"column_start":5,"column_end":67}},{"value":"/ `poll` any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45859,"byte_end":45931,"line_start":871,"line_end":871,"column_start":5,"column_end":77}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":45936,"byte_end":46008,"line_start":872,"line_end":872,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46013,"byte_end":46087,"line_start":873,"line_end":873,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46092,"byte_end":46118,"line_start":874,"line_end":874,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46123,"byte_end":46126,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ Once a future has been `fuse`d and it returns a completion from `poll`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46131,"byte_end":46206,"line_start":876,"line_end":876,"column_start":5,"column_end":80}},{"value":"/ then it will forever return `NotReady` from `poll` again (never","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46211,"byte_end":46278,"line_start":877,"line_end":877,"column_start":5,"column_end":72}},{"value":"/ resolve).  This, unlike the trait's `poll` method, is guaranteed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46283,"byte_end":46352,"line_start":878,"line_end":878,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46357,"byte_end":46360,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop this future as soon as it's been completed to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46365,"byte_end":46440,"line_start":880,"line_end":880,"column_start":5,"column_end":80}},{"value":"/ ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46445,"byte_end":46500,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46505,"byte_end":46508,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46513,"byte_end":46527,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46532,"byte_end":46535,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46540,"byte_end":46551,"line_start":885,"line_end":885,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46556,"byte_end":46584,"line_start":886,"line_end":886,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46589,"byte_end":46613,"line_start":887,"line_end":887,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46618,"byte_end":46621,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::ok::<i32, u32>(2);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46626,"byte_end":46673,"line_start":889,"line_end":889,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.poll(), Ok(Async::Ready(2)));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46678,"byte_end":46729,"line_start":890,"line_end":890,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46734,"byte_end":46737,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ // Normally, a call such as this would panic:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46742,"byte_end":46791,"line_start":892,"line_end":892,"column_start":5,"column_end":54}},{"value":"/ //future.poll();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46796,"byte_end":46816,"line_start":893,"line_end":893,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46821,"byte_end":46824,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ // This, however, is guaranteed to not panic","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46829,"byte_end":46877,"line_start":895,"line_end":895,"column_start":5,"column_end":53}},{"value":"/ let mut future = future::ok::<i32, u32>(2).fuse();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46882,"byte_end":46936,"line_start":896,"line_end":896,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(future.poll(), Ok(Async::Ready(2)));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46941,"byte_end":46992,"line_start":897,"line_end":897,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(future.poll(), Ok(Async::NotReady));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":46997,"byte_end":47048,"line_start":898,"line_end":898,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47053,"byte_end":47060,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47840,"byte_end":47847,"line_start":923,"line_end":923,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::Future::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Do something with the item of a future, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the item of a future, passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47224,"byte_end":47282,"line_start":907,"line_end":907,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47287,"byte_end":47290,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47295,"byte_end":47363,"line_start":909,"line_end":909,"column_start":5,"column_end":73}},{"value":"/ While working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47368,"byte_end":47447,"line_start":910,"line_end":910,"column_start":5,"column_end":84}},{"value":"/ various parts in the pipeline. To do that, insert a call to inspect().","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47452,"byte_end":47526,"line_start":911,"line_end":911,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47531,"byte_end":47534,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47539,"byte_end":47553,"line_start":913,"line_end":913,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47558,"byte_end":47561,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47566,"byte_end":47573,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47578,"byte_end":47606,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47611,"byte_end":47635,"line_start":917,"line_end":917,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47640,"byte_end":47643,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<u32, u32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47648,"byte_end":47691,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47696,"byte_end":47774,"line_start":920,"line_end":920,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.wait(), Ok(1));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47779,"byte_end":47820,"line_start":921,"line_end":921,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":47825,"byte_end":47832,"line_start":922,"line_end":922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49444,"byte_end":49456,"line_start":962,"line_end":962,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::Future::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48046,"byte_end":48100,"line_start":930,"line_end":930,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48105,"byte_end":48108,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48113,"byte_end":48188,"line_start":932,"line_end":932,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48193,"byte_end":48267,"line_start":933,"line_end":933,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48272,"byte_end":48346,"line_start":934,"line_end":934,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48351,"byte_end":48402,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48407,"byte_end":48410,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48415,"byte_end":48490,"line_start":937,"line_end":937,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48495,"byte_end":48565,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48570,"byte_end":48637,"line_start":939,"line_end":939,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48642,"byte_end":48717,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48722,"byte_end":48794,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48799,"byte_end":48802,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48807,"byte_end":48875,"line_start":943,"line_end":943,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48880,"byte_end":48937,"line_start":944,"line_end":944,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48942,"byte_end":48945,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48950,"byte_end":48964,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48969,"byte_end":48972,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48977,"byte_end":48988,"line_start":948,"line_end":948,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":48993,"byte_end":49021,"line_start":949,"line_end":949,"column_start":5,"column_end":33}},{"value":"/ use futures::future::{self, FutureResult};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49026,"byte_end":49072,"line_start":950,"line_end":950,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49077,"byte_end":49080,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::ok::<i32, u32>(2);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49085,"byte_end":49132,"line_start":952,"line_end":952,"column_start":5,"column_end":52}},{"value":"/ assert!(future.catch_unwind().wait().is_ok());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49137,"byte_end":49187,"line_start":953,"line_end":953,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49192,"byte_end":49195,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let mut future = future::lazy(|| -> FutureResult<i32, u32> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49200,"byte_end":49264,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/     panic!();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49269,"byte_end":49286,"line_start":956,"line_end":956,"column_start":5,"column_end":22}},{"value":"/     future::ok::<i32, u32>(2)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49291,"byte_end":49324,"line_start":957,"line_end":957,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49329,"byte_end":49336,"line_start":958,"line_end":958,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().wait().is_err());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49341,"byte_end":49392,"line_start":959,"line_end":959,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49397,"byte_end":49404,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49409,"byte_end":49436,"line_start":961,"line_end":961,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51196,"byte_end":51202,"line_start":1011,"line_end":1011,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::Future::shared","value":"fn (self) -> Shared<Self>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49586,"byte_end":49661,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49666,"byte_end":49689,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49694,"byte_end":49697,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ The shared() method provides a method to convert any future into a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49702,"byte_end":49772,"line_start":971,"line_end":971,"column_start":5,"column_end":75}},{"value":"/ cloneable future. It enables a future to be polled by multiple threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49777,"byte_end":49852,"line_start":972,"line_end":972,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49857,"byte_end":49860,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ The returned `Shared` future resolves successfully with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49865,"byte_end":49924,"line_start":974,"line_end":974,"column_start":5,"column_end":64}},{"value":"/ `SharedItem<Self::Item>` or erroneously with `SharedError<Self::Error>`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":49929,"byte_end":50005,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/ Both `SharedItem` and `SharedError` implements `Deref` to allow shared","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50010,"byte_end":50084,"line_start":976,"line_end":976,"column_start":5,"column_end":79}},{"value":"/ access to the underlying result. Ownership of `Self::Item` and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50089,"byte_end":50155,"line_start":977,"line_end":977,"column_start":5,"column_end":71}},{"value":"/ `Self::Error` cannot currently be reclaimed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50160,"byte_end":50208,"line_start":978,"line_end":978,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50213,"byte_end":50216,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50221,"byte_end":50289,"line_start":980,"line_end":980,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50294,"byte_end":50351,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50356,"byte_end":50359,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50364,"byte_end":50378,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50383,"byte_end":50386,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50391,"byte_end":50398,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50403,"byte_end":50431,"line_start":986,"line_end":986,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50436,"byte_end":50460,"line_start":987,"line_end":987,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50465,"byte_end":50468,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(6);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50473,"byte_end":50515,"line_start":989,"line_end":989,"column_start":5,"column_end":47}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50520,"byte_end":50554,"line_start":990,"line_end":990,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50559,"byte_end":50593,"line_start":991,"line_end":991,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(6, *shared1.wait().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50598,"byte_end":50642,"line_start":992,"line_end":992,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(6, *shared2.wait().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50647,"byte_end":50691,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50696,"byte_end":50703,"line_start":994,"line_end":994,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50708,"byte_end":50711,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50716,"byte_end":50723,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50728,"byte_end":50748,"line_start":997,"line_end":997,"column_start":5,"column_end":25}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50753,"byte_end":50781,"line_start":998,"line_end":998,"column_start":5,"column_end":33}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50786,"byte_end":50810,"line_start":999,"line_end":999,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50815,"byte_end":50818,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ let future = future::ok::<_, bool>(6);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50823,"byte_end":50865,"line_start":1001,"line_end":1001,"column_start":5,"column_end":47}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50870,"byte_end":50904,"line_start":1002,"line_end":1002,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50909,"byte_end":50943,"line_start":1003,"line_end":1003,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50948,"byte_end":50993,"line_start":1004,"line_end":1004,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, *shared2.wait().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":50998,"byte_end":51046,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51051,"byte_end":51058,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, *shared1.wait().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51063,"byte_end":51107,"line_start":1007,"line_end":1007,"column_start":5,"column_end":49}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51112,"byte_end":51144,"line_start":1008,"line_end":1008,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51149,"byte_end":51156,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51161,"byte_end":51188,"line_start":1010,"line_end":1010,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":527},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51865,"byte_end":51875,"line_start":1039,"line_end":1039,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"decl_id":null,"docs":" Class of types which can be converted into a future.","sig":null,"attributes":[{"value":"/ Class of types which can be converted into a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51677,"byte_end":51733,"line_start":1035,"line_end":1035,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51734,"byte_end":51737,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ This trait is very similar to the `IntoIterator` trait and is intended to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51738,"byte_end":51818,"line_start":1037,"line_end":1037,"column_start":1,"column_end":81}},{"value":"/ used in a very similar fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51819,"byte_end":51854,"line_start":1038,"line_end":1038,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":528},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51944,"byte_end":51950,"line_start":1041,"line_end":1041,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::IntoFuture::Future","value":"type Future: Future<Item=Self::Item, Error=Self::Error>;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" The future that this type can be converted into.\n","sig":null,"attributes":[{"value":"/ The future that this type can be converted into.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":51882,"byte_end":51934,"line_start":1040,"line_end":1040,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":529},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52057,"byte_end":52061,"line_start":1044,"line_end":1044,"column_start":10,"column_end":14},"name":"Item","qualname":"::future::IntoFuture::Item","value":"type Item;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" The item that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The item that the future may resolve with.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52001,"byte_end":52047,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":530},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52124,"byte_end":52129,"line_start":1046,"line_end":1046,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::IntoFuture::Error","value":"type Error;","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" The error that the future may resolve with.\n","sig":null,"attributes":[{"value":"/ The error that the future may resolve with.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52067,"byte_end":52114,"line_start":1045,"line_end":1045,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52191,"byte_end":52202,"line_start":1049,"line_end":1049,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::IntoFuture::into_future","value":"fn (self) -> Self::Future","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Consumes this object and produces a future.\n","sig":null,"attributes":[{"value":"/ Consumes this object and produces a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52136,"byte_end":52183,"line_start":1048,"line_end":1048,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":545},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52751,"byte_end":52761,"line_start":1076,"line_end":1076,"column_start":11,"column_end":21},"name":"FutureFrom","qualname":"::future::FutureFrom","value":"FutureFrom<T>: Sized","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"decl_id":null,"docs":" Asynchronous conversion from a type `T`.","sig":null,"attributes":[{"value":"/ Asynchronous conversion from a type `T`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52598,"byte_end":52642,"line_start":1072,"line_end":1072,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52643,"byte_end":52646,"line_start":1073,"line_end":1073,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to `std::convert::From`, adapted to asynchronous","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52647,"byte_end":52723,"line_start":1074,"line_end":1074,"column_start":1,"column_end":77}},{"value":"/ computation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52724,"byte_end":52740,"line_start":1075,"line_end":1075,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":547},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52822,"byte_end":52828,"line_start":1078,"line_end":1078,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::FutureFrom::Future","value":"type Future: Future<Item=Self, Error=Self::Error>;","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" The future for the conversion.\n","sig":null,"attributes":[{"value":"/ The future for the conversion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52778,"byte_end":52812,"line_start":1077,"line_end":1077,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52921,"byte_end":52926,"line_start":1081,"line_end":1081,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::FutureFrom::Error","value":"type Error;","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Possible errors during conversion.\n","sig":null,"attributes":[{"value":"/ Possible errors during conversion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52873,"byte_end":52911,"line_start":1080,"line_end":1080,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52995,"byte_end":53006,"line_start":1084,"line_end":1084,"column_start":8,"column_end":19},"name":"future_from","qualname":"::future::FutureFrom::future_from","value":"fn (T) -> Self::Future","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Consume the given value, beginning the conversion.\n","sig":null,"attributes":[{"value":"/ Consume the given value, beginning the conversion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52933,"byte_end":52987,"line_start":1083,"line_end":1083,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":550},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53480,"byte_end":53488,"line_start":1095,"line_end":1095,"column_start":11,"column_end":19},"name":"Executor","qualname":"::future::Executor","value":"Executor<F: Future<Item = (), Error = ()>>","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":" A trait for types which can spawn fresh futures.","sig":null,"attributes":[{"value":"/ A trait for types which can spawn fresh futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53030,"byte_end":53082,"line_start":1087,"line_end":1087,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53083,"byte_end":53086,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ This trait is typically implemented for \"executors\", or those types which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53087,"byte_end":53164,"line_start":1089,"line_end":1089,"column_start":1,"column_end":78}},{"value":"/ can execute futures to completion. Futures passed to `Spawn::spawn`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53165,"byte_end":53236,"line_start":1090,"line_end":1090,"column_start":1,"column_end":72}},{"value":"/ typically get turned into a *task* and are then driven to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53237,"byte_end":53310,"line_start":1091,"line_end":1091,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53311,"byte_end":53314,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ On spawn, the executor takes ownership of the future and becomes responsible","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53315,"byte_end":53395,"line_start":1093,"line_end":1093,"column_start":1,"column_end":81}},{"value":"/ to call `Future::poll()` whenever a readiness notification is raised.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53396,"byte_end":53469,"line_start":1094,"line_end":1094,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54504,"byte_end":54511,"line_start":1116,"line_end":1116,"column_start":8,"column_end":15},"name":"execute","qualname":"::future::Executor::execute","value":"fn (&self, future: F) -> Result<(), ExecuteError<F>>","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Spawns a future to run on this `Executor`, typically in the\n \"background\".","sig":null,"attributes":[{"value":"/ Spawns a future to run on this `Executor`, typically in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53529,"byte_end":53592,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/ \"background\".","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53597,"byte_end":53614,"line_start":1097,"line_end":1097,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53619,"byte_end":53622,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This function will return immediately, and schedule the future `future`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53627,"byte_end":53702,"line_start":1099,"line_end":1099,"column_start":5,"column_end":80}},{"value":"/ to run on `self`. The details of scheduling and execution are left to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53707,"byte_end":53780,"line_start":1100,"line_end":1100,"column_start":5,"column_end":78}},{"value":"/ the implementations of `Executor`, but this is typically a primary point","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53785,"byte_end":53861,"line_start":1101,"line_end":1101,"column_start":5,"column_end":81}},{"value":"/ for injecting concurrency in a futures-based system. Futures spawned","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53866,"byte_end":53938,"line_start":1102,"line_end":1102,"column_start":5,"column_end":77}},{"value":"/ through this `execute` function tend to run concurrently while they're","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":53943,"byte_end":54017,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"/ waiting on events.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54022,"byte_end":54044,"line_start":1104,"line_end":1104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54049,"byte_end":54052,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54057,"byte_end":54069,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54074,"byte_end":54077,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ Implementers of this trait are allowed to reject accepting this future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54082,"byte_end":54156,"line_start":1108,"line_end":1108,"column_start":5,"column_end":79}},{"value":"/ as well. This can happen for various reason such as:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54161,"byte_end":54217,"line_start":1109,"line_end":1109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54222,"byte_end":54225,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ * The executor is shut down","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54230,"byte_end":54261,"line_start":1111,"line_end":1111,"column_start":5,"column_end":36}},{"value":"/ * The executor has run out of capacity to execute futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54266,"byte_end":54327,"line_start":1112,"line_end":1112,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54332,"byte_end":54335,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ The decision is left to the caller how to work with this form of error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54340,"byte_end":54415,"line_start":1114,"line_end":1114,"column_start":5,"column_end":80}},{"value":"/ The error returned transfers ownership of the future back to the caller.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54420,"byte_end":54496,"line_start":1115,"line_end":1115,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54630,"byte_end":54642,"line_start":1120,"line_end":1120,"column_start":12,"column_end":24},"name":"ExecuteError","qualname":"::future::ExecuteError","value":"ExecuteError {  }","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"decl_id":null,"docs":" Errors returned from the `Spawn::spawn` function.\n","sig":null,"attributes":[{"value":"/ Errors returned from the `Spawn::spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54565,"byte_end":54618,"line_start":1119,"line_end":1119,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55086,"byte_end":55094,"line_start":1133,"line_end":1133,"column_start":5,"column_end":13},"name":"Shutdown","qualname":"::future::ExecuteErrorKind::Shutdown","value":"ExecuteErrorKind::Shutdown","parent":{"krate":0,"index":3707},"children":[],"decl_id":null,"docs":" This executor has shut down and will no longer accept new futures to\n spawn.\n","sig":null,"attributes":[{"value":"/ This executor has shut down and will no longer accept new futures to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54994,"byte_end":55066,"line_start":1131,"line_end":1131,"column_start":5,"column_end":77}},{"value":"/ spawn.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55071,"byte_end":55081,"line_start":1132,"line_end":1132,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55243,"byte_end":55253,"line_start":1137,"line_end":1137,"column_start":5,"column_end":15},"name":"NoCapacity","qualname":"::future::ExecuteErrorKind::NoCapacity","value":"ExecuteErrorKind::NoCapacity","parent":{"krate":0,"index":3707},"children":[],"decl_id":null,"docs":" This executor has no more capacity to run more futures. Other futures\n need to finish before this executor can accept another.\n","sig":null,"attributes":[{"value":"/ This executor has no more capacity to run more futures. Other futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55101,"byte_end":55174,"line_start":1135,"line_end":1135,"column_start":5,"column_end":78}},{"value":"/ need to finish before this executor can accept another.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55179,"byte_end":55238,"line_start":1136,"line_end":1136,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55279,"byte_end":55294,"line_start":1140,"line_end":1140,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::future::ExecuteErrorKind::__Nonexhaustive","value":"ExecuteErrorKind::__Nonexhaustive","parent":{"krate":0,"index":3707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54971,"byte_end":54987,"line_start":1130,"line_end":1130,"column_start":10,"column_end":26},"name":"ExecuteErrorKind","qualname":"::future::ExecuteErrorKind","value":"ExecuteErrorKind::{Shutdown, NoCapacity, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712}],"decl_id":null,"docs":" Kinds of errors that can be returned from the `Execute::spawn` function.","sig":null,"attributes":[{"value":"/ Kinds of errors that can be returned from the `Execute::spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54694,"byte_end":54770,"line_start":1125,"line_end":1125,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54771,"byte_end":54774,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ Executors which may not always be able to accept a future may return one of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54775,"byte_end":54854,"line_start":1127,"line_end":1127,"column_start":1,"column_end":80}},{"value":"/ these errors, indicating why it was unable to spawn a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":54855,"byte_end":54920,"line_start":1128,"line_end":1128,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55372,"byte_end":55375,"line_start":1145,"line_end":1145,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecuteError<F>>::new","value":"fn (kind: ExecuteErrorKind, future: F) -> ExecuteError<F>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ExecuteError`\n","sig":null,"attributes":[{"value":"/ Create a new `ExecuteError`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55329,"byte_end":55360,"line_start":1144,"line_end":1144,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55587,"byte_end":55591,"line_start":1153,"line_end":1153,"column_start":12,"column_end":16},"name":"kind","qualname":"<ExecuteError<F>>::kind","value":"fn (&self) -> ExecuteErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the associated reason for the error\n","sig":null,"attributes":[{"value":"/ Returns the associated reason for the error","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55528,"byte_end":55575,"line_start":1152,"line_end":1152,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55729,"byte_end":55740,"line_start":1158,"line_end":1158,"column_start":12,"column_end":23},"name":"into_future","qualname":"<ExecuteError<F>>::into_future","value":"fn (self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the original future that was spawned.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the original future that was spawned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55650,"byte_end":55717,"line_start":1157,"line_end":1157,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":568},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":682},{"krate":0,"index":697},{"krate":0,"index":744},{"krate":0,"index":759},{"krate":0,"index":787},{"krate":0,"index":817},{"krate":0,"index":841},{"krate":0,"index":862},{"krate":0,"index":880},{"krate":0,"index":908},{"krate":0,"index":933},{"krate":0,"index":951},{"krate":0,"index":979},{"krate":0,"index":1007},{"krate":0,"index":1037},{"krate":0,"index":1065},{"krate":0,"index":1081},{"krate":0,"index":1095},{"krate":0,"index":1122},{"krate":0,"index":1146},{"krate":0,"index":1161},{"krate":0,"index":1177},{"krate":0,"index":1201},{"krate":0,"index":1235},{"krate":0,"index":1259},{"krate":0,"index":1293},{"krate":0,"index":1320},{"krate":0,"index":1341},{"krate":0,"index":1357},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4148},{"krate":0,"index":4185},{"krate":0,"index":4210},{"krate":0,"index":4239},{"krate":0,"index":4257},{"krate":0,"index":4271},{"krate":0,"index":4320},{"krate":0,"index":4367},{"krate":0,"index":4536},{"krate":0,"index":4600},{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4614},{"krate":0,"index":4620},{"krate":0,"index":4623},{"krate":0,"index":1430},{"krate":0,"index":1500},{"krate":0,"index":1506}],"decl_id":null,"docs":" Asynchronous streams","sig":null,"attributes":[{"value":"! Asynchronous streams","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":89838,"byte_end":89862,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":89863,"byte_end":89866,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the `Stream` trait and a number of adaptors for this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":89867,"byte_end":89944,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! trait. This trait is very similar to the `Iterator` trait in the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":89945,"byte_end":90022,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! library except that it expresses the concept of blocking as well. A stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90023,"byte_end":90101,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"! here is a sequential sequence of values which may take some amount of time","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90102,"byte_end":90180,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! in between to produce.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90181,"byte_end":90207,"line_start":7,"line_end":7,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90208,"byte_end":90211,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! A stream may request that it is blocked between values while the next value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90212,"byte_end":90291,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! is calculated, and provides a way to get notified once the next value is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90292,"byte_end":90368,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! ready as well.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90369,"byte_end":90387,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90388,"byte_end":90391,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90392,"byte_end":90460,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"! https://tokio.rs][online]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90461,"byte_end":90490,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90491,"byte_end":90494,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":90495,"byte_end":90565,"line_start":16,"line_end":16,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132532,"byte_end":132536,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132320,"byte_end":132396,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132397,"byte_end":132400,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132401,"byte_end":132454,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132472,"byte_end":132520,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":578},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133150,"byte_end":133154,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <J, T, E> (i: J) -> Iter<J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` over `Result`s into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` over `Result`s into a `Stream` which is always ready","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132557,"byte_end":132636,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132637,"byte_end":132665,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132666,"byte_end":132669,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter simply","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132670,"byte_end":132750,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ always calls `iter.next()` and returns that.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132751,"byte_end":132799,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132800,"byte_end":132803,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132804,"byte_end":132815,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132816,"byte_end":132835,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132836,"byte_end":132839,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![Ok(17), Err(false), Ok(19)]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132840,"byte_end":132908,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132909,"byte_end":132967,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Err(false), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":132968,"byte_end":133010,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133011,"byte_end":133069,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133070,"byte_end":133124,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133125,"byte_end":133132,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133133,"byte_end":133142,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133747,"byte_end":133753,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"IterOk","qualname":"::stream::iter_ok::IterOk","value":"IterOk {  }","parent":null,"children":[{"krate":0,"index":3732},{"krate":0,"index":3733}],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133535,"byte_end":133611,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133612,"byte_end":133615,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133616,"byte_end":133669,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133687,"byte_end":133735,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":599},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134340,"byte_end":134347,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"iter_ok","qualname":"::stream::iter_ok::iter_ok","value":"fn <I, E> (i: I) -> IterOk<I::IntoIter, E>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133823,"byte_end":133887,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133888,"byte_end":133916,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133917,"byte_end":133920,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133921,"byte_end":133994,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":133995,"byte_end":134050,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134051,"byte_end":134054,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134055,"byte_end":134066,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134067,"byte_end":134086,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134087,"byte_end":134090,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter_ok::<_, ()>(vec![17, 19]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134091,"byte_end":134151,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134152,"byte_end":134210,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134211,"byte_end":134269,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134270,"byte_end":134324,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134325,"byte_end":134332,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3738},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134967,"byte_end":134977,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterResult","qualname":"::stream::iter_result::IterResult","value":"IterResult {  }","parent":null,"children":[{"krate":0,"index":3740}],"decl_id":null,"docs":" A stream which is just a shim over an underlying instance of `Iterator`.","sig":null,"attributes":[{"value":"/ A stream which is just a shim over an underlying instance of `Iterator`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134755,"byte_end":134831,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134832,"byte_end":134835,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134836,"byte_end":134889,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134907,"byte_end":134955,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":616},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135589,"byte_end":135600,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"iter_result","qualname":"::stream::iter_result::iter_result","value":"fn <J, T, E> (i: J) -> IterResult<J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` over `Result`s into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` over `Result`s into a `Stream` which is always ready","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":134999,"byte_end":135078,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135079,"byte_end":135107,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135108,"byte_end":135111,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter simply","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135112,"byte_end":135192,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ always calls `iter.next()` and returns that.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135193,"byte_end":135241,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135242,"byte_end":135245,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135246,"byte_end":135257,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135258,"byte_end":135277,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135278,"byte_end":135281,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter_result(vec![Ok(17), Err(false), Ok(19)]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135282,"byte_end":135357,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(17))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135358,"byte_end":135416,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Err(false), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135417,"byte_end":135459,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(19))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135460,"byte_end":135518,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135519,"byte_end":135573,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135574,"byte_end":135581,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136367,"byte_end":136373,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"decl_id":null,"docs":" Stream that produces the same element repeatedly.","sig":null,"attributes":[{"value":"/ Stream that produces the same element repeatedly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136168,"byte_end":136221,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136222,"byte_end":136225,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the `stream::repeat` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136226,"byte_end":136289,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136307,"byte_end":136355,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":636},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":137010,"byte_end":137016,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T, E> (item: T) -> Repeat<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136452,"byte_end":136512,"line_start":21,"line_end":21,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136513,"byte_end":136516,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Stream never produces an error or EOF. Note that you likely want to avoid","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136517,"byte_end":136594,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136595,"byte_end":136667,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136668,"byte_end":136725,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136726,"byte_end":136729,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136730,"byte_end":136741,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136742,"byte_end":136761,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136762,"byte_end":136765,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::repeat::<_, bool>(10);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136766,"byte_end":136817,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136818,"byte_end":136876,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136877,"byte_end":136935,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(Ok(Async::Ready(Some(10))), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136936,"byte_end":136994,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":136995,"byte_end":137002,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137663,"byte_end":137670,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759}],"decl_id":null,"docs":" A stream combinator which chains a computation onto values produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto values produced by a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137428,"byte_end":137504,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137505,"byte_end":137516,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137517,"byte_end":137520,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::and_then` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137521,"byte_end":137585,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":137603,"byte_end":137651,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138163,"byte_end":138170,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<S, F, U>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138056,"byte_end":138129,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138134,"byte_end":138151,"line_start":34,"line_end":34,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138479,"byte_end":138486,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<S, F, U>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138218,"byte_end":138285,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138290,"byte_end":138321,"line_start":40,"line_end":40,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138326,"byte_end":138329,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138334,"byte_end":138407,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138412,"byte_end":138467,"line_start":43,"line_end":43,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138781,"byte_end":138791,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<S, F, U>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138546,"byte_end":138608,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138613,"byte_end":138616,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138621,"byte_end":138693,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138698,"byte_end":138769,"line_start":51,"line_end":51,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140823,"byte_end":140828,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":3784}],"decl_id":null,"docs":" An adapter for chaining the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for chaining the output of two streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140596,"byte_end":140650,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140651,"byte_end":140654,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The resulting stream produces items from first stream and then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140655,"byte_end":140721,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ from second stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140722,"byte_end":140745,"line_start":21,"line_end":21,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":140763,"byte_end":140811,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142204,"byte_end":142211,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Concat2","qualname":"::stream::concat::Concat2","value":"Concat2 {  }","parent":null,"children":[{"krate":0,"index":711}],"decl_id":null,"docs":" A stream combinator to concatenate the results of a stream into the first\n yielded item.","sig":null,"attributes":[{"value":"/ A stream combinator to concatenate the results of a stream into the first","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":141980,"byte_end":142057,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ yielded item.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142058,"byte_end":142075,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142076,"byte_end":142079,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::concat2` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142080,"byte_end":142143,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142144,"byte_end":142192,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":723},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143537,"byte_end":143543,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":725}],"decl_id":null,"docs":" A stream combinator to concatenate the results of a stream into the first\n yielded item.","sig":null,"attributes":[{"value":"/ A stream combinator to concatenate the results of a stream into the first","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143239,"byte_end":143316,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ yielded item.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143317,"byte_end":143334,"line_start":58,"line_end":58,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143335,"byte_end":143338,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::concat` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143339,"byte_end":143401,"line_start":60,"line_end":60,"column_start":1,"column_end":63}},{"value":"deprecated(since = \"0.1.18\", note = \"please use `Stream::Concat2` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143402,"byte_end":143476,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143477,"byte_end":143525,"line_start":62,"line_end":62,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146645,"byte_end":146650,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3811}],"decl_id":null,"docs":" A stream which contains no elements.","sig":null,"attributes":[{"value":"/ A stream which contains no elements.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146457,"byte_end":146497,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146498,"byte_end":146501,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream can be created with the `stream::empty` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146502,"byte_end":146567,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146585,"byte_end":146633,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146832,"byte_end":146837,"line_start":18,"line_end":18,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T, E> () -> Empty<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146702,"byte_end":146750,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146751,"byte_end":146754,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146755,"byte_end":146824,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147368,"byte_end":147374,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":3820}],"decl_id":null,"docs":" A stream combinator used to filter the results of a stream and only yield\n some values.","sig":null,"attributes":[{"value":"/ A stream combinator used to filter the results of a stream and only yield","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147129,"byte_end":147206,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ some values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147207,"byte_end":147223,"line_start":5,"line_end":5,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147224,"byte_end":147227,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::filter` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147228,"byte_end":147290,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147308,"byte_end":147356,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147709,"byte_end":147716,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147602,"byte_end":147675,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147680,"byte_end":147697,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148025,"byte_end":148032,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147764,"byte_end":147831,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147836,"byte_end":147867,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147872,"byte_end":147875,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147880,"byte_end":147953,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147958,"byte_end":148013,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148327,"byte_end":148337,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148092,"byte_end":148154,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148159,"byte_end":148162,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148167,"byte_end":148239,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148244,"byte_end":148315,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149724,"byte_end":149733,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829}],"decl_id":null,"docs":" A combinator used to filter the results of a stream and simultaneously map\n them to a different type.","sig":null,"attributes":[{"value":"/ A combinator used to filter the results of a stream and simultaneously map","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149467,"byte_end":149545,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ them to a different type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149546,"byte_end":149575,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149576,"byte_end":149579,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is returned by the `Stream::filter_map` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149580,"byte_end":149646,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149664,"byte_end":149712,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150084,"byte_end":150091,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149977,"byte_end":150050,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150055,"byte_end":150072,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150400,"byte_end":150407,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150139,"byte_end":150206,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150211,"byte_end":150242,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150247,"byte_end":150250,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150255,"byte_end":150328,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150333,"byte_end":150388,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150702,"byte_end":150712,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150467,"byte_end":150529,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150534,"byte_end":150537,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150542,"byte_end":150614,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150619,"byte_end":150690,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152092,"byte_end":152099,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":" A combinator used to flatten a stream-of-streams into one long stream of\n elements.","sig":null,"attributes":[{"value":"/ A combinator used to flatten a stream-of-streams into one long stream of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":151856,"byte_end":151932,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":151933,"byte_end":151946,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":151947,"byte_end":151950,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator is created by the `Stream::flatten` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":151951,"byte_end":152014,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152032,"byte_end":152080,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152511,"byte_end":152518,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152404,"byte_end":152477,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152482,"byte_end":152499,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152827,"byte_end":152834,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152566,"byte_end":152633,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152638,"byte_end":152669,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152674,"byte_end":152677,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152682,"byte_end":152755,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152760,"byte_end":152815,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153129,"byte_end":153139,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152894,"byte_end":152956,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152961,"byte_end":152964,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152969,"byte_end":153041,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153046,"byte_end":153117,"line_start":47,"line_end":47,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":154769,"byte_end":154773,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848}],"decl_id":null,"docs":" A future used to collect all the results of a stream into one generic type.","sig":null,"attributes":[{"value":"/ A future used to collect all the results of a stream into one generic type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":154550,"byte_end":154629,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":154630,"byte_end":154633,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This future is returned by the `Stream::fold` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":154634,"byte_end":154691,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":154709,"byte_end":154757,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157260,"byte_end":157267,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876}],"decl_id":null,"docs":" A stream combinator which executes a unit closure over each item on a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which executes a unit closure over each item on a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157028,"byte_end":157101,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157102,"byte_end":157113,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157114,"byte_end":157117,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is returned by the `Stream::for_each` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157118,"byte_end":157182,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157200,"byte_end":157248,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158563,"byte_end":158570,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"FromErr","qualname":"::stream::from_err::FromErr","value":"FromErr {  }","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3886}],"decl_id":null,"docs":" A stream combinator to change the error type of a stream.","sig":null,"attributes":[{"value":"/ A stream combinator to change the error type of a stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158366,"byte_end":158427,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158428,"byte_end":158431,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::from_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158432,"byte_end":158485,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158503,"byte_end":158551,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158894,"byte_end":158901,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FromErr<S, E>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158787,"byte_end":158860,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158865,"byte_end":158882,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159210,"byte_end":159217,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FromErr<S, E>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158949,"byte_end":159016,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159021,"byte_end":159052,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159057,"byte_end":159060,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159065,"byte_end":159138,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159143,"byte_end":159198,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159512,"byte_end":159522,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FromErr<S, E>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159277,"byte_end":159339,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159344,"byte_end":159347,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159352,"byte_end":159424,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159429,"byte_end":159500,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160794,"byte_end":160798,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":3893},{"krate":0,"index":3894}],"decl_id":null,"docs":" A stream which \"fuse\"s a stream once it's terminated.","sig":null,"attributes":[{"value":"/ A stream which \"fuse\"s a stream once it's terminated.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160484,"byte_end":160541,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160542,"byte_end":160545,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Normally streams can behave unpredictably when used after they have already","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160546,"byte_end":160625,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ finished, but `Fuse` continues to return `None` from `poll` forever when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160626,"byte_end":160702,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ finished.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160703,"byte_end":160716,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160734,"byte_end":160782,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162115,"byte_end":162122,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<S>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161846,"byte_end":161908,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161913,"byte_end":161916,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161921,"byte_end":161989,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161994,"byte_end":162060,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162065,"byte_end":162103,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162276,"byte_end":162283,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162169,"byte_end":162242,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162247,"byte_end":162264,"line_start":68,"line_end":68,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162592,"byte_end":162599,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162331,"byte_end":162398,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162403,"byte_end":162434,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162439,"byte_end":162442,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162447,"byte_end":162520,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162525,"byte_end":162580,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162894,"byte_end":162904,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162659,"byte_end":162721,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162726,"byte_end":162729,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162734,"byte_end":162806,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":162811,"byte_end":162882,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163210,"byte_end":163222,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":3900}],"decl_id":null,"docs":" A combinator used to temporarily convert a stream into a future.","sig":null,"attributes":[{"value":"/ A combinator used to temporarily convert a stream into a future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":162995,"byte_end":163063,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163064,"byte_end":163067,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This future is returned by the `Stream::into_future` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163068,"byte_end":163132,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163150,"byte_end":163198,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163766,"byte_end":163773,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<S>>::get_ref","value":"fn (&self) -> Option<&S>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163373,"byte_end":163446,"line_start":18,"line_end":18,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163451,"byte_end":163468,"line_start":19,"line_end":19,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163473,"byte_end":163476,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163481,"byte_end":163562,"line_start":21,"line_end":21,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163567,"byte_end":163650,"line_start":22,"line_end":22,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163655,"byte_end":163734,"line_start":23,"line_end":23,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163739,"byte_end":163754,"line_start":24,"line_end":24,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164384,"byte_end":164391,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<S>>::get_mut","value":"fn (&mut self) -> Option<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163837,"byte_end":163904,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163909,"byte_end":163940,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163945,"byte_end":163948,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163953,"byte_end":164026,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164031,"byte_end":164086,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164091,"byte_end":164094,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164099,"byte_end":164180,"line_start":35,"line_end":35,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164185,"byte_end":164268,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164273,"byte_end":164352,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164357,"byte_end":164372,"line_start":38,"line_end":38,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164984,"byte_end":164994,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<S>>::into_inner","value":"fn (self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164463,"byte_end":164525,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164530,"byte_end":164533,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164538,"byte_end":164610,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164615,"byte_end":164686,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164691,"byte_end":164694,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164699,"byte_end":164780,"line_start":48,"line_end":48,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling ","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164785,"byte_end":164868,"line_start":49,"line_end":49,"column_start":5,"column_end":88}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164873,"byte_end":164952,"line_start":50,"line_end":50,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":164957,"byte_end":164972,"line_start":51,"line_end":51,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":165924,"byte_end":165931,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3907},{"krate":0,"index":3908}],"decl_id":null,"docs":" Do something with the items of a stream, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the items of a stream, passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":165730,"byte_end":165789,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":165790,"byte_end":165793,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::inspect` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":165794,"byte_end":165846,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":165864,"byte_end":165912,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166313,"byte_end":166320,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166206,"byte_end":166279,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166284,"byte_end":166301,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166629,"byte_end":166636,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166368,"byte_end":166435,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166440,"byte_end":166471,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166476,"byte_end":166479,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166484,"byte_end":166557,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166562,"byte_end":166617,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166931,"byte_end":166941,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166696,"byte_end":166758,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166763,"byte_end":166766,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166771,"byte_end":166843,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166848,"byte_end":166919,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168162,"byte_end":168172,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":" Do something with the error of a stream, passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error of a stream, passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":167964,"byte_end":168023,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168024,"byte_end":168027,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::inspect_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168028,"byte_end":168084,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168102,"byte_end":168150,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168564,"byte_end":168571,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168457,"byte_end":168530,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168535,"byte_end":168552,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168880,"byte_end":168887,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168619,"byte_end":168686,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168691,"byte_end":168722,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168727,"byte_end":168730,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168735,"byte_end":168808,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168813,"byte_end":168868,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169182,"byte_end":169192,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168947,"byte_end":169009,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169014,"byte_end":169017,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169022,"byte_end":169094,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169099,"byte_end":169170,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3922},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170345,"byte_end":170348,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3925},{"krate":0,"index":3926}],"decl_id":null,"docs":" A stream combinator which will change the type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the type of a stream from one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170121,"byte_end":170192,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ type to another.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170193,"byte_end":170213,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170214,"byte_end":170217,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `Stream::map` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170218,"byte_end":170267,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170285,"byte_end":170333,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170673,"byte_end":170680,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170566,"byte_end":170639,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170644,"byte_end":170661,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170989,"byte_end":170996,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170728,"byte_end":170795,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170800,"byte_end":170831,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170836,"byte_end":170839,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170844,"byte_end":170917,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170922,"byte_end":170977,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171291,"byte_end":171301,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171056,"byte_end":171118,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171123,"byte_end":171126,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171131,"byte_end":171203,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171208,"byte_end":171279,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172431,"byte_end":172437,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":3934},{"krate":0,"index":3935}],"decl_id":null,"docs":" A stream combinator which will change the error type of a stream from one\n type to another.","sig":null,"attributes":[{"value":"/ A stream combinator which will change the error type of a stream from one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172197,"byte_end":172274,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ type to another.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172275,"byte_end":172295,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172296,"byte_end":172299,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is produced by the `Stream::map_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172300,"byte_end":172353,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172371,"byte_end":172419,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172772,"byte_end":172779,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<S, F>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172665,"byte_end":172738,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172743,"byte_end":172760,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173088,"byte_end":173095,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<S, F>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172827,"byte_end":172894,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172899,"byte_end":172930,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172935,"byte_end":172938,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172943,"byte_end":173016,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173021,"byte_end":173076,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173390,"byte_end":173400,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<S, F>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173155,"byte_end":173217,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173222,"byte_end":173225,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173230,"byte_end":173302,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173307,"byte_end":173378,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174669,"byte_end":174674,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174350,"byte_end":174403,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174404,"byte_end":174407,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174408,"byte_end":174479,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174480,"byte_end":174554,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174555,"byte_end":174591,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":174609,"byte_end":174657,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175214,"byte_end":175219,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"First","qualname":"::stream::merge::MergedItem::First","value":"MergedItem::First(I1)","parent":{"krate":0,"index":3950},"children":[],"decl_id":null,"docs":" An item from the first stream\n","sig":null,"attributes":[{"value":"/ An item from the first stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175176,"byte_end":175209,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3956},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175268,"byte_end":175274,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Second","qualname":"::stream::merge::MergedItem::Second","value":"MergedItem::Second(I2)","parent":{"krate":0,"index":3950},"children":[],"decl_id":null,"docs":" An item from the second stream\n","sig":null,"attributes":[{"value":"/ An item from the second stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175229,"byte_end":175263,"line_start":36,"line_end":36,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175316,"byte_end":175320,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Both","qualname":"::stream::merge::MergedItem::Both","value":"MergedItem::Both(I1, I2)","parent":{"krate":0,"index":3950},"children":[],"decl_id":null,"docs":" Items from both streams\n","sig":null,"attributes":[{"value":"/ Items from both streams","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175284,"byte_end":175311,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175151,"byte_end":175161,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"name":"MergedItem","qualname":"::stream::merge::MergedItem","value":"MergedItem::{First, Second, Both}","parent":null,"children":[{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3959}],"decl_id":null,"docs":" An item returned from a merge stream, which represents an item from one or\n both of the underlying streams.\n","sig":null,"attributes":[{"value":"/ An item returned from a merge stream, which represents an item from one or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175010,"byte_end":175088,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ both of the underlying streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175089,"byte_end":175124,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177080,"byte_end":177084,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":176891,"byte_end":176944,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":176945,"byte_end":176948,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":176949,"byte_end":177002,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177020,"byte_end":177068,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177357,"byte_end":177361,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T, E> (item: Result<T, E>) -> Once<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of single element","sig":null,"attributes":[{"value":"/ Creates a stream of single element","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177115,"byte_end":177153,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177154,"byte_end":177157,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177158,"byte_end":177169,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177170,"byte_end":177189,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177190,"byte_end":177193,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::once::<(), _>(Err(17));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177194,"byte_end":177246,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(Err(17), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177247,"byte_end":177286,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(Ok(Async::Ready(None)), stream.poll());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177287,"byte_end":177341,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177342,"byte_end":177349,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3976},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":178027,"byte_end":178033,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982}],"decl_id":null,"docs":" A stream combinator which chains a computation onto errors produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto errors produced by a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":177793,"byte_end":177869,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":177870,"byte_end":177881,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":177882,"byte_end":177885,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::or_else` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":177886,"byte_end":177949,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":177967,"byte_end":178015,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3988},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180214,"byte_end":180222,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":179922,"byte_end":179969,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":179970,"byte_end":179973,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":179974,"byte_end":180031,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180032,"byte_end":180089,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180090,"byte_end":180136,"line_start":8,"line_end":8,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180154,"byte_end":180202,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181517,"byte_end":181521,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<S>>::peek","value":"fn (&mut self) -> Poll<Option<&S::Item>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181279,"byte_end":181341,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181346,"byte_end":181349,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181354,"byte_end":181427,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181432,"byte_end":181505,"line_start":61,"line_end":61,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":3995},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182155,"byte_end":182161,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":3997}],"decl_id":null,"docs":" A stream which adapts a function returning `Poll`.","sig":null,"attributes":[{"value":"/ A stream which adapts a function returning `Poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":181980,"byte_end":182034,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182035,"byte_end":182038,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `poll_fn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182039,"byte_end":182077,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182095,"byte_end":182143,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182703,"byte_end":182710,"line_start":32,"line_end":32,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, E, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping around a function returning `Poll`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping around a function returning `Poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182184,"byte_end":182253,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182254,"byte_end":182257,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream delegates to the wrapped function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182258,"byte_end":182324,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182325,"byte_end":182328,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182329,"byte_end":182343,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182344,"byte_end":182347,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182348,"byte_end":182355,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182356,"byte_end":182389,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use futures::{Async, Poll};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182390,"byte_end":182421,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182422,"byte_end":182425,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182426,"byte_end":182455,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182456,"byte_end":182459,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move || -> Poll<Option<String>, std::io::Error> {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182460,"byte_end":182539,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/     if counter == 0 { return Ok(Async::Ready(None)); }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182540,"byte_end":182598,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182599,"byte_end":182620,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/     Ok(Async::Ready(Some(\"Hello, World!\".to_owned())))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182621,"byte_end":182679,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182680,"byte_end":182687,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182688,"byte_end":182695,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4001},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183427,"byte_end":183433,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183060,"byte_end":183113,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183114,"byte_end":183117,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from either of the underlying streams as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183118,"byte_end":183195,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ they become available, and the streams are polled in a round-robin fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183196,"byte_end":183275,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ Errors, however, are not merged: you get at most one error at a time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183276,"byte_end":183349,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183367,"byte_end":183415,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4011},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185324,"byte_end":185328,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"decl_id":null,"docs":" A stream combinator which skips a number of elements before continuing.","sig":null,"attributes":[{"value":"/ A stream combinator which skips a number of elements before continuing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185106,"byte_end":185181,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185182,"byte_end":185185,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::skip` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185186,"byte_end":185246,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185264,"byte_end":185312,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185628,"byte_end":185635,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185521,"byte_end":185594,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185599,"byte_end":185616,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185944,"byte_end":185951,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185683,"byte_end":185750,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185755,"byte_end":185786,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185791,"byte_end":185794,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185799,"byte_end":185872,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185877,"byte_end":185932,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186246,"byte_end":186256,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186011,"byte_end":186073,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186078,"byte_end":186081,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186086,"byte_end":186158,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186163,"byte_end":186234,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187518,"byte_end":187527,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025}],"decl_id":null,"docs":" A stream combinator which skips elements of a stream while a predicate\n holds.","sig":null,"attributes":[{"value":"/ A stream combinator which skips elements of a stream while a predicate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187284,"byte_end":187358,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ holds.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187359,"byte_end":187369,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187370,"byte_end":187373,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::skip_while` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187374,"byte_end":187440,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187458,"byte_end":187506,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188124,"byte_end":188131,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<S, P, R>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188017,"byte_end":188090,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188095,"byte_end":188112,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188440,"byte_end":188447,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<S, P, R>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188179,"byte_end":188246,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188251,"byte_end":188282,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188287,"byte_end":188290,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188295,"byte_end":188368,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188373,"byte_end":188428,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188742,"byte_end":188752,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<S, P, R>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188507,"byte_end":188569,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188574,"byte_end":188577,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188582,"byte_end":188654,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188659,"byte_end":188730,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":190895,"byte_end":190899,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034}],"decl_id":null,"docs":" A stream combinator which returns a maximum number of elements.","sig":null,"attributes":[{"value":"/ A stream combinator which returns a maximum number of elements.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":190685,"byte_end":190752,"line_start":4,"line_end":4,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":190753,"byte_end":190756,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::take` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":190757,"byte_end":190817,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":190835,"byte_end":190883,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191199,"byte_end":191206,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191092,"byte_end":191165,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191170,"byte_end":191187,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191515,"byte_end":191522,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191254,"byte_end":191321,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191326,"byte_end":191357,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191362,"byte_end":191365,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191370,"byte_end":191443,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191448,"byte_end":191503,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191817,"byte_end":191827,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191582,"byte_end":191644,"line_start":39,"line_end":39,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191649,"byte_end":191652,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191657,"byte_end":191729,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191734,"byte_end":191805,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4038},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193175,"byte_end":193184,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045}],"decl_id":null,"docs":" A stream combinator which takes elements from a stream while a predicate\n holds.","sig":null,"attributes":[{"value":"/ A stream combinator which takes elements from a stream while a predicate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":192939,"byte_end":193015,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ holds.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193016,"byte_end":193026,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193027,"byte_end":193030,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::take_while` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193031,"byte_end":193097,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193115,"byte_end":193163,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193777,"byte_end":193784,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<S, P, R>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193670,"byte_end":193743,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193748,"byte_end":193765,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194093,"byte_end":194100,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<S, P, R>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193832,"byte_end":193899,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193904,"byte_end":193935,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193940,"byte_end":193943,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193948,"byte_end":194021,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194026,"byte_end":194081,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194395,"byte_end":194405,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<S, P, R>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194160,"byte_end":194222,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194227,"byte_end":194230,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194235,"byte_end":194307,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194312,"byte_end":194383,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196497,"byte_end":196501,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057}],"decl_id":null,"docs":" A stream combinator which chains a computation onto each item produced by a\n stream.","sig":null,"attributes":[{"value":"/ A stream combinator which chains a computation onto each item produced by a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196263,"byte_end":196342,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196343,"byte_end":196354,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196355,"byte_end":196358,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is produced by the `Stream::then` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196359,"byte_end":196419,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196437,"byte_end":196485,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200149,"byte_end":200155,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, It> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198480,"byte_end":198550,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198551,"byte_end":198554,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198555,"byte_end":198624,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198625,"byte_end":198706,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198707,"byte_end":198738,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198739,"byte_end":198742,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198743,"byte_end":198822,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198823,"byte_end":198902,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198903,"byte_end":198957,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198958,"byte_end":198961,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":198962,"byte_end":199042,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Ok(Async::Ready(None))` in future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199043,"byte_end":199118,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199119,"byte_end":199141,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199142,"byte_end":199145,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `Future`, the error will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199146,"byte_end":199220,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ returned by the `Stream`.  The `Stream` will then yield","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199221,"byte_end":199280,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ `Ok(Async::Ready(None))` in future calls to `poll()`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199281,"byte_end":199338,"line_start":22,"line_end":22,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199339,"byte_end":199342,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199343,"byte_end":199420,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199421,"byte_end":199493,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199494,"byte_end":199571,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199572,"byte_end":199632,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199633,"byte_end":199636,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199637,"byte_end":199650,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199651,"byte_end":199654,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199655,"byte_end":199666,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use futures::stream::{self, Stream};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199667,"byte_end":199707,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ use futures::future::{self, Future};","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199708,"byte_end":199748,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199749,"byte_end":199752,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::unfold(0, |state| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199753,"byte_end":199801,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199802,"byte_end":199825,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199826,"byte_end":199865,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199866,"byte_end":199903,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/         let fut = future::ok::<_, u32>((yielded, next_state));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199904,"byte_end":199970,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/         Some(fut)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199971,"byte_end":199992,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     } else {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":199993,"byte_end":200009,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200010,"byte_end":200026,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200027,"byte_end":200036,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200037,"byte_end":200044,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200045,"byte_end":200048,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect().wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200049,"byte_end":200090,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200091,"byte_end":200133,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200134,"byte_end":200141,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4063},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200581,"byte_end":200587,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":4067},{"krate":0,"index":4068}],"decl_id":null,"docs":" A stream which creates futures, polls them and return their result","sig":null,"attributes":[{"value":"/ A stream which creates futures, polls them and return their result","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200361,"byte_end":200431,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200432,"byte_end":200435,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by the `futures::stream::unfold` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200436,"byte_end":200503,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200521,"byte_end":200569,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202668,"byte_end":202671,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095}],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202349,"byte_end":202402,"line_start":4,"line_end":4,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202403,"byte_end":202406,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202407,"byte_end":202478,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202479,"byte_end":202553,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202571,"byte_end":202607,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":202608,"byte_end":202656,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204444,"byte_end":204451,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Forward","qualname":"::stream::forward::Forward","value":"Forward {  }","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105}],"decl_id":null,"docs":" Future for the `Stream::forward` combinator, which sends a stream of values\n to a sink and then waits until the sink has fully flushed those values.\n","sig":null,"attributes":[{"value":"/ Future for the `Stream::forward` combinator, which sends a stream of values","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204211,"byte_end":204290,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ to a sink and then waits until the sink has fully flushed those values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204291,"byte_end":204366,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204384,"byte_end":204432,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205092,"byte_end":205100,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"sink_ref","qualname":"<Forward<T, U>>::sink_ref","value":"fn (&self) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204946,"byte_end":204991,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204996,"byte_end":205080,"line_start":34,"line_end":34,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205309,"byte_end":205317,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"sink_mut","qualname":"<Forward<T, U>>::sink_mut","value":"fn (&mut self) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205162,"byte_end":205208,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205213,"byte_end":205297,"line_start":40,"line_end":40,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205535,"byte_end":205545,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"stream_ref","qualname":"<Forward<T, U>>::stream_ref","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner stream.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205387,"byte_end":205434,"line_start":45,"line_end":45,"column_start":5,"column_end":52}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205439,"byte_end":205523,"line_start":46,"line_end":46,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205779,"byte_end":205789,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"stream_mut","qualname":"<Forward<T, U>>::stream_mut","value":"fn (&mut self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner stream.\n If this combinator has already been polled to completion, None will be returned.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205630,"byte_end":205678,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ If this combinator has already been polled to completion, None will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":205683,"byte_end":205767,"line_start":52,"line_end":52,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8346158,"byte_end":8346166,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125}],"decl_id":null,"docs":" An adaptor for a stream of futures to execute the futures concurrently, if\n possible.","sig":null,"attributes":[{"value":"/ An adaptor for a stream of futures to execute the futures concurrently, if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8345791,"byte_end":8345869,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ possible.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8345870,"byte_end":8345883,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8345884,"byte_end":8345887,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of pending futures, and then return their","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8345888,"byte_end":8345968,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ results in the order that they were pulled out of the original stream. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8345969,"byte_end":8346048,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ is created by the `Stream::buffered` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8346049,"byte_end":8346097,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8346098,"byte_end":8346146,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347333,"byte_end":8347340,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffered<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347226,"byte_end":8347299,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347304,"byte_end":8347321,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347658,"byte_end":8347665,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffered<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347397,"byte_end":8347464,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347469,"byte_end":8347500,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347505,"byte_end":8347508,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347513,"byte_end":8347586,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347591,"byte_end":8347646,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347965,"byte_end":8347975,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffered<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347730,"byte_end":8347792,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347797,"byte_end":8347800,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347805,"byte_end":8347877,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347882,"byte_end":8347953,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350230,"byte_end":8350245,"line_start":13,"line_end":13,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162}],"decl_id":null,"docs":" An adaptor for a stream of futures to execute the futures concurrently, if\n possible, delivering results as they become available.","sig":null,"attributes":[{"value":"/ An adaptor for a stream of futures to execute the futures concurrently, if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8349840,"byte_end":8349918,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ possible, delivering results as they become available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8349919,"byte_end":8349977,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8349978,"byte_end":8349981,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of pending futures, and then return their","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8349982,"byte_end":8350062,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ results in the order that they complete. This is created by the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350063,"byte_end":8350130,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ `Stream::buffer_unordered` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350131,"byte_end":8350169,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350170,"byte_end":8350218,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351320,"byte_end":8351327,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufferUnordered<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351213,"byte_end":8351286,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351291,"byte_end":8351308,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351645,"byte_end":8351652,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufferUnordered<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351384,"byte_end":8351451,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351456,"byte_end":8351487,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351492,"byte_end":8351495,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351500,"byte_end":8351573,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351578,"byte_end":8351633,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351952,"byte_end":8351962,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferUnordered<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351717,"byte_end":8351779,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351784,"byte_end":8351787,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351792,"byte_end":8351864,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351869,"byte_end":8351940,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4628},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8354107,"byte_end":8354118,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4630}],"decl_id":null,"docs":" Stream for the `catch_unwind` combinator.","sig":null,"attributes":[{"value":"/ Stream for the `catch_unwind` combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8353922,"byte_end":8353967,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8353968,"byte_end":8353971,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Stream::catch_unwind` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8353972,"byte_end":8354029,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8354047,"byte_end":8354095,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356213,"byte_end":8356219,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4649},{"krate":0,"index":4650},{"krate":0,"index":4651}],"decl_id":null,"docs":" An adaptor that chunks up elements in a vector.","sig":null,"attributes":[{"value":"/ An adaptor that chunks up elements in a vector.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8355876,"byte_end":8355927,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8355928,"byte_end":8355931,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This adaptor will buffer up a list of items in the stream and pass on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8355932,"byte_end":8356009,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ vector used for buffering when a specified capacity has been reached. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356010,"byte_end":8356088,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ is created by the `Stream::chunks` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356089,"byte_end":8356135,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356153,"byte_end":8356201,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357456,"byte_end":8357463,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chunks<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357349,"byte_end":8357422,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357427,"byte_end":8357444,"line_start":64,"line_end":64,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357781,"byte_end":8357788,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chunks<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357520,"byte_end":8357587,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357592,"byte_end":8357623,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357628,"byte_end":8357631,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357636,"byte_end":8357709,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357714,"byte_end":8357769,"line_start":73,"line_end":73,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8358088,"byte_end":8358098,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chunks<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357853,"byte_end":8357915,"line_start":78,"line_end":78,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357920,"byte_end":8357923,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357928,"byte_end":8358000,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8358005,"byte_end":8358076,"line_start":81,"line_end":81,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4655},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360233,"byte_end":8360240,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658}],"decl_id":null,"docs":" A future which collects all of the values of a stream into a vector.","sig":null,"attributes":[{"value":"/ A future which collects all of the values of a stream into a vector.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360019,"byte_end":8360091,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360092,"byte_end":8360095,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This future is created by the `Stream::collect` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360096,"byte_end":8360155,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360173,"byte_end":8360221,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4662},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361578,"byte_end":8361582,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Wait","qualname":"::stream::wait::Wait","value":"Wait {  }","parent":null,"children":[{"krate":0,"index":4664}],"decl_id":null,"docs":" A stream combinator which converts an asynchronous stream to a **blocking\n iterator**.","sig":null,"attributes":[{"value":"/ A stream combinator which converts an asynchronous stream to a **blocking","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361181,"byte_end":8361258,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ iterator**.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361259,"byte_end":8361274,"line_start":5,"line_end":5,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361275,"byte_end":8361278,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `Stream::wait` method, this function transforms any stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361279,"byte_end":8361356,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ into a standard iterator. This is implemented by blocking the current thread","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361357,"byte_end":8361437,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ while items on the underlying stream aren't ready yet.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361438,"byte_end":8361496,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"must_use = \"iterators do nothing unless advanced\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361497,"byte_end":8361549,"line_start":10,"line_end":10,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361752,"byte_end":8361759,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Wait<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361645,"byte_end":8361718,"line_start":17,"line_end":17,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361723,"byte_end":8361740,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362077,"byte_end":8362084,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Wait<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361816,"byte_end":8361883,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361888,"byte_end":8361919,"line_start":24,"line_end":24,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361924,"byte_end":8361927,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361932,"byte_end":8362005,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362010,"byte_end":8362065,"line_start":27,"line_end":27,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362384,"byte_end":8362394,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Wait<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362149,"byte_end":8362211,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362216,"byte_end":8362219,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362224,"byte_end":8362296,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362301,"byte_end":8362372,"line_start":35,"line_end":35,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363628,"byte_end":8363635,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"channel","qualname":"::stream::channel::channel","value":"fn <T, E> () -> (Sender<T, E>, Receiver<T, E>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8362985,"byte_end":8363055,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363056,"byte_end":8363059,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363060,"byte_end":8363137,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363138,"byte_end":8363212,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363213,"byte_end":8363289,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The `Sender::send` method will only","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363290,"byte_end":8363365,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ allow sending one message and the next message can only be sent once the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363366,"byte_end":8363442,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ first was consumed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363443,"byte_end":8363466,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363467,"byte_end":8363470,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363471,"byte_end":8363550,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363551,"byte_end":8363620,"line_start":23,"line_end":23,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4668},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363939,"byte_end":8363945,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Sender","qualname":"::stream::channel::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4671}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363771,"byte_end":8363838,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363839,"byte_end":8363842,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method in the `stream` module.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363843,"byte_end":8363910,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4676},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364347,"byte_end":8364355,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::stream::channel::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4679}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8363996,"byte_end":8364067,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364068,"byte_end":8364071,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364072,"byte_end":8364152,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364153,"byte_end":8364224,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ `channel` method in the `stream` module.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364225,"byte_end":8364269,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364270,"byte_end":8364318,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364501,"byte_end":8364510,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"SendError","qualname":"::stream::channel::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of the channel is dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of the channel is dropped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364408,"byte_end":8364489,"line_start":48,"line_end":48,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364600,"byte_end":8364612,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"FutureSender","qualname":"::stream::channel::FutureSender","value":"FutureSender {  }","parent":null,"children":[{"krate":0,"index":4687}],"decl_id":null,"docs":" Future returned by `Sender::send`.\n","sig":null,"attributes":[{"value":"/ Future returned by `Sender::send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364533,"byte_end":8364571,"line_start":51,"line_end":51,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4312},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365885,"byte_end":8365889,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T, E>>::send","value":"fn (self, t: Result<T, E>) -> FutureSender<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value along this channel to the receiver.","sig":null,"attributes":[{"value":"/ Sends a new value along this channel to the receiver.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365661,"byte_end":8365718,"line_start":95,"line_end":95,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365723,"byte_end":8365726,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This method consumes the sender and returns a future which will resolve","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365731,"byte_end":8365806,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ to the sender again when the value sent has been consumed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365811,"byte_end":8365873,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366524,"byte_end":8366535,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SplitStream","qualname":"::stream::split::SplitStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Stream` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Stream` part of the split pair","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366458,"byte_end":8366495,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366815,"byte_end":8366822,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitStream<S>>::reunite","value":"fn (self, other: SplitSink<S>) -> Result<S, ReuniteError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366581,"byte_end":8366649,"line_start":13,"line_end":13,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366654,"byte_end":8366728,"line_start":14,"line_end":14,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366733,"byte_end":8366803,"line_start":15,"line_end":15,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367299,"byte_end":8367308,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"SplitSink","qualname":"::stream::split::SplitSink","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Sink` part of the split pair\n","sig":null,"attributes":[{"value":"/ A `Sink` part of the split pair","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367235,"byte_end":8367270,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367586,"byte_end":8367593,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SplitSink<S>>::reunite","value":"fn (self, other: SplitStream<S>) -> Result<S, ReuniteError<S>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `Stream + Sink` back\n together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are\n a matching pair originating from the same call to `Stream::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `Stream + Sink` back","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367352,"byte_end":8367420,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ together. Succeeds only if the `SplitStream<S>` and `SplitSink<S>` are","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367425,"byte_end":8367499,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ a matching pair originating from the same call to `Stream::split`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367504,"byte_end":8367574,"line_start":40,"line_end":40,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":4353},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8368949,"byte_end":8368961,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::stream::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves\n of a `Stream + Split`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `SplitSink<S>` and `SplitStream<S>` were not two halves","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8368798,"byte_end":8368876,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ of a `Stream + Split`, and thus could not be `reunite`d.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8368877,"byte_end":8368937,"line_start":84,"line_end":84,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4395},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4417},{"krate":0,"index":4425},{"krate":0,"index":4434},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4449},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":5301},{"krate":0,"index":5307},{"krate":0,"index":4474},{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4488},{"krate":0,"index":4491},{"krate":0,"index":4496},{"krate":0,"index":4500},{"krate":0,"index":4504},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4515},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4524},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531}],"decl_id":null,"docs":" An unbounded set of futures.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6399,"byte_end":6426,"line_start":168,"line_end":168,"column_start":9,"column_end":36}},{"value":"! An unbounded set of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8369573,"byte_end":8369605,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4402},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371716,"byte_end":8371732,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370050,"byte_end":8370082,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370083,"byte_end":8370086,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" also serves a special function in this library, providing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370087,"byte_end":8370166,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ the ability to maintain a set of futures that and manage driving them all","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370167,"byte_end":8370244,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370245,"byte_end":8370263,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370264,"byte_end":8370267,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this set and their realized values are yielded as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370268,"byte_end":8370345,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ they are ready. This structure is optimized to manage a large number of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370346,"byte_end":8370421,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ futures. Futures managed by `FuturesUnordered` will only be polled when they","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370422,"byte_end":8370502,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ generate notifications. This reduces the required amount of work needed to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370503,"byte_end":8370581,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ coordinate large numbers of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370582,"byte_end":8370622,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370623,"byte_end":8370626,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesUnordered` is first created, it does not contain any futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370627,"byte_end":8370707,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ Calling `poll` in this state will result in `Ok(Async::Ready(None))` to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370708,"byte_end":8370786,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ returned. Futures are submitted to the set using `push`; however, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370787,"byte_end":8370860,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ future will **not** be polled at this point. `FuturesUnordered` will only","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370861,"byte_end":8370938,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ poll managed futures when `FuturesUnordered::poll` is called. As such, it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8370939,"byte_end":8371016,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371017,"byte_end":8371075,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371076,"byte_end":8371079,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If `FuturesUnordered::poll` returns `Ok(Async::Ready(None))` this means that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371080,"byte_end":8371160,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ the set is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371161,"byte_end":8371237,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ to the set at a later time. At that point, a call to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371238,"byte_end":8371294,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ `FuturesUnordered::poll` will either return the future's resolved value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371295,"byte_end":8371370,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ **or** `Ok(Async::NotReady)` if the future has not yet completed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371371,"byte_end":8371440,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371441,"byte_end":8371444,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesUnordered` via the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371445,"byte_end":8371513,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ `futures_unordered` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371514,"byte_end":8371595,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ empty set with the `FuturesUnordered::new` constructor.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371596,"byte_end":8371655,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371656,"byte_end":8371704,"line_start":46,"line_end":46,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4439},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374557,"byte_end":8374560,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<T>>::new","value":"fn () -> FuturesUnordered<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesUnordered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesUnordered`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374331,"byte_end":8374377,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374382,"byte_end":8374385,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesUnordered` does not contain any futures and, in this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374390,"byte_end":8374467,"line_start":127,"line_end":127,"column_start":5,"column_end":82}},{"value":"/ state, `FuturesUnordered::poll` will return `Ok(Async::Ready(None))`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374472,"byte_end":8374545,"line_start":128,"line_end":128,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375502,"byte_end":8375505,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375364,"byte_end":8375419,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375424,"byte_end":8375427,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375432,"byte_end":8375490,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375613,"byte_end":8375621,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375552,"byte_end":8375601,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4444},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375982,"byte_end":8375986,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<T>>::push","value":"fn (&mut self, future: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375672,"byte_end":8375703,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375708,"byte_end":8375711,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the set for managing. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375716,"byte_end":8375788,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted future. The caller must","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375793,"byte_end":8375867,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ ensure that `FuturesUnordered::poll` is called in order to receive task","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375872,"byte_end":8375947,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ notifications.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375952,"byte_end":8375970,"line_start":172,"line_end":172,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8377017,"byte_end":8377025,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<T>>::iter_mut","value":"fn (&mut self) -> IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8376936,"byte_end":8377005,"line_start":195,"line_end":195,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386762,"byte_end":8386769,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386691,"byte_end":8386750,"line_start":438,"line_end":438,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397309,"byte_end":8397323,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395346,"byte_end":8395380,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395381,"byte_end":8395384,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395385,"byte_end":8395464,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395465,"byte_end":8395536,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395537,"byte_end":8395613,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395614,"byte_end":8395662,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395663,"byte_end":8395666,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395667,"byte_end":8395746,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395747,"byte_end":8395822,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395823,"byte_end":8395901,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395902,"byte_end":8395982,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395983,"byte_end":8396012,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396013,"byte_end":8396016,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396017,"byte_end":8396095,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Ok(Async::Ready(None))` to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396096,"byte_end":8396174,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396175,"byte_end":8396250,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396251,"byte_end":8396326,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396327,"byte_end":8396402,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396403,"byte_end":8396461,"line_start":69,"line_end":69,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396462,"byte_end":8396465,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Ok(Async::Ready(None))` this means that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396466,"byte_end":8396544,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396545,"byte_end":8396623,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396624,"byte_end":8396682,"line_start":73,"line_end":73,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396683,"byte_end":8396756,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ **or** `Ok(Async::NotReady)` if the future has not yet completed. When","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396757,"byte_end":8396831,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396832,"byte_end":8396908,"line_start":76,"line_end":76,"column_start":1,"column_end":77}},{"value":"/ return `Ok(Async::NotReady)` until the first future completes, even if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396909,"byte_end":8396983,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8396984,"byte_end":8397037,"line_start":78,"line_end":78,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397038,"byte_end":8397041,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397042,"byte_end":8397108,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ `futures_ordered` function in the `stream` module, or you can start with an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397109,"byte_end":8397188,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ empty queue with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397189,"byte_end":8397248,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397249,"byte_end":8397297,"line_start":83,"line_end":83,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398157,"byte_end":8398172,"line_start":104,"line_end":104,"column_start":8,"column_end":23},"name":"futures_ordered","qualname":"::stream::futures_ordered::futures_ordered","value":"fn <I> (futures: I) -> FuturesOrdered<<I::Item as IntoFuture>::Future>","parent":null,"children":[],"decl_id":null,"docs":" Converts a list of futures into a `Stream` of results from the futures.","sig":null,"attributes":[{"value":"/ Converts a list of futures into a `Stream` of results from the futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397523,"byte_end":8397598,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397599,"byte_end":8397602,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This function will take an list of futures (e.g. a vector, an iterator,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397603,"byte_end":8397678,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ etc), and return a stream. The stream will yield items as they become","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397679,"byte_end":8397752,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/ available on the futures internally, in the order that their originating","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397753,"byte_end":8397829,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ futures were submitted to the queue. If the futures complete out of order,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397830,"byte_end":8397908,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ items will be stored internally within `FuturesOrdered` until all preceding","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397909,"byte_end":8397988,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ items have been yielded.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8397989,"byte_end":8398017,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398018,"byte_end":8398021,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that the returned queue can also be used to dynamically push more","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398022,"byte_end":8398096,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"/ futures into the queue as they become available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398097,"byte_end":8398149,"line_start":103,"line_end":103,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398833,"byte_end":8398836,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<T>>::new","value":"fn () -> FuturesOrdered<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398613,"byte_end":8398657,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398662,"byte_end":8398665,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398670,"byte_end":8398745,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll` will return `Ok(Async::Ready(None))`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398750,"byte_end":8398821,"line_start":129,"line_end":129,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399350,"byte_end":8399353,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399077,"byte_end":8399134,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399139,"byte_end":8399142,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399147,"byte_end":8399210,"line_start":141,"line_end":141,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399215,"byte_end":8399279,"line_start":142,"line_end":142,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399284,"byte_end":8399338,"line_start":143,"line_end":143,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399505,"byte_end":8399513,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399442,"byte_end":8399493,"line_start":148,"line_end":148,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399931,"byte_end":8399935,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<T>>::push","value":"fn (&mut self, future: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399612,"byte_end":8399645,"line_start":153,"line_end":153,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399650,"byte_end":8399653,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399658,"byte_end":8399734,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399739,"byte_end":8399813,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399818,"byte_end":8399891,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8399896,"byte_end":8399919,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93498,"byte_end":93507,"line_start":132,"line_end":132,"column_start":14,"column_end":23},"name":"BoxStream","qualname":"::stream::BoxStream","value":"::std::boxed::Box<Stream<Item = T, Error = E> + Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Stream + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6399,"byte_end":6426,"line_start":168,"line_end":168,"column_start":9,"column_end":36}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93237,"byte_end":93484,"line_start":129,"line_end":131,"column_start":5,"column_end":98}}]},{"kind":"Trait","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95854,"byte_end":95860,"line_start":184,"line_end":184,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1498}],"decl_id":null,"docs":" A stream of values, not all of which may have been produced yet.","sig":null,"attributes":[{"value":"/ A stream of values, not all of which may have been produced yet.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93813,"byte_end":93881,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93882,"byte_end":93885,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ `Stream` is a trait to represent any source of sequential events or items","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93886,"byte_end":93963,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ which acts like an iterator but long periods of time may pass between","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93964,"byte_end":94037,"line_start":147,"line_end":147,"column_start":1,"column_end":74}},{"value":"/ items. Like `Future` the methods of `Stream` never block and it is thus","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94038,"byte_end":94113,"line_start":148,"line_end":148,"column_start":1,"column_end":76}},{"value":"/ suitable for programming in an asynchronous fashion. This trait is very","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94114,"byte_end":94189,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ similar to the `Iterator` trait in the standard library where `Some` is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94190,"byte_end":94265,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ used to signal elements of the stream and `None` is used to indicate that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94266,"byte_end":94343,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"/ the stream is finished.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94344,"byte_end":94371,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94372,"byte_end":94375,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Like futures a stream has basic combinators to transform the stream, perform","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94376,"byte_end":94456,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ more work on each item, etc.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94457,"byte_end":94489,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94490,"byte_end":94493,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94494,"byte_end":94562,"line_start":157,"line_end":157,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94563,"byte_end":94592,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94593,"byte_end":94596,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94597,"byte_end":94667,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94668,"byte_end":94671,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Streams as Futures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94672,"byte_end":94696,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94697,"byte_end":94700,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Any instance of `Stream` can also be viewed as a `Future` where the resolved","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94701,"byte_end":94781,"line_start":164,"line_end":164,"column_start":1,"column_end":81}},{"value":"/ value is the next item in the stream along with the rest of the stream. The","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94782,"byte_end":94861,"line_start":165,"line_end":165,"column_start":1,"column_end":80}},{"value":"/ `into_future` adaptor can be used here to convert any stream into a future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94862,"byte_end":94940,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ for use with other future methods like `join` and `select`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":94941,"byte_end":95004,"line_start":167,"line_end":167,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95005,"byte_end":95008,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95009,"byte_end":95021,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95022,"byte_end":95025,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Streams, like futures, can also model errors in their computation. All","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95026,"byte_end":95100,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ streams have an associated `Error` type like with futures. Currently as of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95101,"byte_end":95179,"line_start":172,"line_end":172,"column_start":1,"column_end":79}},{"value":"/ the 0.1 release of this library an error on a stream **does not terminate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95180,"byte_end":95257,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ the stream**. That is, after one error is received, another error may be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95258,"byte_end":95334,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ received from the same stream (it's valid to keep polling).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95335,"byte_end":95398,"line_start":175,"line_end":175,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95399,"byte_end":95402,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ This property of streams, however, is [being considered] for change in 0.2","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95403,"byte_end":95481,"line_start":177,"line_end":177,"column_start":1,"column_end":79}},{"value":"/ where an error on a stream is similar to `None`, it terminates the stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95482,"byte_end":95559,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/ entirely. If one of these use cases suits you perfectly and not the other,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95560,"byte_end":95638,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"/ please feel welcome to comment on [the issue][being considered]!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95639,"byte_end":95707,"line_start":180,"line_end":180,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95708,"byte_end":95711,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [being considered]: https://github.com/rust-lang-nursery/futures-rs/issues/206","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95712,"byte_end":95794,"line_start":182,"line_end":182,"column_start":1,"column_end":83}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95795,"byte_end":95843,"line_start":183,"line_end":183,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95932,"byte_end":95936,"line_start":186,"line_end":186,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" The type of item this stream will yield on success.\n","sig":null,"attributes":[{"value":"/ The type of item this stream will yield on success.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95867,"byte_end":95922,"line_start":185,"line_end":185,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96000,"byte_end":96005,"line_start":189,"line_end":189,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::Stream::Error","value":"type Error;","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" The type of error this stream may generate.\n","sig":null,"attributes":[{"value":"/ The type of error this stream may generate.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":95943,"byte_end":95990,"line_start":188,"line_end":188,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97316,"byte_end":97320,"line_start":216,"line_end":216,"column_start":8,"column_end":12},"name":"poll","qualname":"::stream::Stream::poll","value":"fn (&mut self) -> Poll<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, returning `None` if\n the stream is finished.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, returning `None` if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96012,"byte_end":96086,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ the stream is finished.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96091,"byte_end":96118,"line_start":192,"line_end":192,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96123,"byte_end":96126,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This method, like `Future::poll`, is the sole method of pulling out a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96131,"byte_end":96204,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ value from a stream. This method must also be run within the context of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96209,"byte_end":96284,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ a task typically and implementors of this trait must ensure that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96289,"byte_end":96357,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ implementations of this method do not block, as it may cause consumers","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96362,"byte_end":96436,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ to behave badly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96441,"byte_end":96461,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96466,"byte_end":96469,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96474,"byte_end":96492,"line_start":200,"line_end":200,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96497,"byte_end":96500,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then this stream's next value is not ready","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96505,"byte_end":96577,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ yet and implementations will ensure that the current task will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96582,"byte_end":96651,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ notified when the next value may be ready. If `Some` is returned then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96656,"byte_end":96729,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ the returned value represents the next value on the stream. `Err`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96734,"byte_end":96803,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ indicates an error happened, while `Ok` indicates whether there was a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96808,"byte_end":96881,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ new item on the stream or whether the stream has terminated.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96886,"byte_end":96950,"line_start":207,"line_end":207,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96955,"byte_end":96958,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96963,"byte_end":96975,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96980,"byte_end":96983,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Once a stream is finished, that is `Ready(None)` has been returned,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":96988,"byte_end":97059,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ further calls to `poll` may result in a panic or other \"bad behavior\".","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97064,"byte_end":97138,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ If this is difficult to guard against then the `fuse` adapter can be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97143,"byte_end":97215,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ used to ensure that `poll` always has well-defined semantics.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97220,"byte_end":97285,"line_start":214,"line_end":214,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98773,"byte_end":98777,"line_start":245,"line_end":245,"column_start":8,"column_end":12},"name":"wait","qualname":"::stream::Stream::wait","value":"fn (self) -> Wait<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Creates an iterator which blocks the current thread until each item of\n this stream is resolved.","sig":null,"attributes":[{"value":"/ Creates an iterator which blocks the current thread until each item of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97604,"byte_end":97678,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ this stream is resolved.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97683,"byte_end":97711,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97716,"byte_end":97719,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method will consume ownership of this stream, returning an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97724,"byte_end":97791,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ implementation of a standard iterator. This iterator will *block the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97796,"byte_end":97868,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"/ current thread* on each call to `next` if the item in the stream isn't","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97873,"byte_end":97947,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ ready yet.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97952,"byte_end":97966,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97971,"byte_end":97974,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ > **Note:** This method is not appropriate to call on event loops or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":97979,"byte_end":98051,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ >           similar I/O situations because it will prevent the event","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98056,"byte_end":98128,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ >           loop from making progress (this blocks the thread). This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98133,"byte_end":98205,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ >           method should only be called when it's guaranteed that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98210,"byte_end":98284,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ >           blocking work associated with this stream will be completed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98289,"byte_end":98364,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ >           by another thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98369,"byte_end":98403,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98408,"byte_end":98411,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98416,"byte_end":98484,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98489,"byte_end":98546,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98551,"byte_end":98554,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98559,"byte_end":98571,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98576,"byte_end":98579,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The returned iterator does not attempt to catch panics. If the `poll`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98584,"byte_end":98657,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/ function panics, panics will be propagated to the caller of `next`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98662,"byte_end":98733,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98738,"byte_end":98765,"line_start":244,"line_end":244,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100030,"byte_end":100035,"line_start":277,"line_end":277,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::Stream::boxed","value":"fn (self) -> BoxStream<Self::Item, Self::Error>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Convenience function for turning this stream into a trait object.","sig":null,"attributes":[{"value":"/ Convenience function for turning this stream into a trait object.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98865,"byte_end":98934,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98939,"byte_end":98942,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This simply avoids the need to write `Box::new` and can often help with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":98947,"byte_end":99022,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ type inference as well by always returning a trait object. Note that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99027,"byte_end":99099,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ this method requires the `Send` bound and returns a `BoxStream`, which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99104,"byte_end":99178,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ also encodes this. If you'd like to create a `Box<Stream>` without the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99183,"byte_end":99257,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/ `Send` bound, then the `Box::new` function can be used instead.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99262,"byte_end":99329,"line_start":257,"line_end":257,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99334,"byte_end":99337,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99342,"byte_end":99410,"line_start":259,"line_end":259,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99415,"byte_end":99472,"line_start":260,"line_end":260,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99477,"byte_end":99480,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99485,"byte_end":99499,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99504,"byte_end":99507,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99512,"byte_end":99519,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99524,"byte_end":99551,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99556,"byte_end":99584,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99589,"byte_end":99592,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99597,"byte_end":99634,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ let a: BoxStream<i32, ()> = rx.boxed();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99639,"byte_end":99682,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99687,"byte_end":99694,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99699,"byte_end":99726,"line_start":271,"line_end":271,"column_start":5,"column_end":32}},{"value":"deprecated(note =\n             \"removed without replacement, recommended to use a \\\n                         local extension trait or function if needed, more \\\n                         details in https://github.com/rust-lang-nursery/futures-rs/issues/228\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":99750,"byte_end":99997,"line_start":273,"line_end":275,"column_start":5,"column_end":98}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100002,"byte_end":100022,"line_start":276,"line_end":276,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100691,"byte_end":100702,"line_start":292,"line_end":292,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::Stream::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Converts this stream into a `Future`.","sig":null,"attributes":[{"value":"/ Converts this stream into a `Future`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100178,"byte_end":100219,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100224,"byte_end":100227,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ A stream can be viewed as a future which will resolve to a pair containing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100232,"byte_end":100310,"line_start":285,"line_end":285,"column_start":5,"column_end":83}},{"value":"/ the next element of the stream plus the remaining stream. If the stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100315,"byte_end":100390,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ terminates, then the next element is `None` and the remaining stream is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100395,"byte_end":100470,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ still passed back, to allow reclamation of its resources.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100475,"byte_end":100536,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100541,"byte_end":100544,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together by","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100549,"byte_end":100627,"line_start":290,"line_end":290,"column_start":5,"column_end":83}},{"value":"/ placing everything into the \"world of futures\".","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100632,"byte_end":100683,"line_start":291,"line_end":291,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101459,"byte_end":101462,"line_start":317,"line_end":317,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::Stream::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Converts a stream of type `T` to a stream of type `U`.","sig":null,"attributes":[{"value":"/ Converts a stream of type `T` to a stream of type `U`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100800,"byte_end":100858,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100863,"byte_end":100866,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100871,"byte_end":100943,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ they are made available, and the callback will be executed inline with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":100948,"byte_end":101022,"line_start":301,"line_end":301,"column_start":5,"column_end":79}},{"value":"/ calls to `poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101027,"byte_end":101047,"line_start":302,"line_end":302,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101052,"byte_end":101055,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101060,"byte_end":101131,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101136,"byte_end":101207,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101212,"byte_end":101233,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101238,"byte_end":101241,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101246,"byte_end":101260,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101265,"byte_end":101268,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101273,"byte_end":101280,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101285,"byte_end":101313,"line_start":311,"line_end":311,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101318,"byte_end":101346,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101351,"byte_end":101354,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101359,"byte_end":101403,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ let rx = rx.map(|x| x + 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101408,"byte_end":101439,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101444,"byte_end":101451,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102281,"byte_end":102288,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::Stream::map_err","value":"fn <U, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Converts a stream of error type `T` to a stream of error type `U`.","sig":null,"attributes":[{"value":"/ Converts a stream of error type `T` to a stream of error type `U`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101607,"byte_end":101677,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101682,"byte_end":101685,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all errors of this stream as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101690,"byte_end":101760,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ they are made available, and the callback will be executed inline with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101765,"byte_end":101839,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ calls to `poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101844,"byte_end":101864,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101869,"byte_end":101872,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101877,"byte_end":101948,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map_err` methods in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":101953,"byte_end":102028,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/ standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102033,"byte_end":102054,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102059,"byte_end":102062,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102067,"byte_end":102081,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102086,"byte_end":102089,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102094,"byte_end":102101,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102106,"byte_end":102134,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102139,"byte_end":102167,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102172,"byte_end":102175,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102180,"byte_end":102224,"line_start":340,"line_end":340,"column_start":5,"column_end":49}},{"value":"/ let rx = rx.map_err(|()| 3);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102229,"byte_end":102261,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102266,"byte_end":102273,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103353,"byte_end":103359,"line_start":373,"line_end":373,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::Stream::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102441,"byte_end":102513,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102518,"byte_end":102532,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102537,"byte_end":102540,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102545,"byte_end":102621,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ be run against them. If the predicate returns `true` then the stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102626,"byte_end":102698,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ will yield the value, but if the predicate returns `false` then the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102703,"byte_end":102774,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ value will be discarded and the next value will be produced.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102779,"byte_end":102843,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102848,"byte_end":102851,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102856,"byte_end":102927,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102932,"byte_end":102935,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":102940,"byte_end":103011,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103016,"byte_end":103090,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103095,"byte_end":103116,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103121,"byte_end":103124,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103129,"byte_end":103143,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103148,"byte_end":103151,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103156,"byte_end":103163,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103168,"byte_end":103196,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103201,"byte_end":103229,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103234,"byte_end":103237,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103242,"byte_end":103286,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/ let evens = rx.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103291,"byte_end":103333,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103338,"byte_end":103345,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104539,"byte_end":104549,"line_start":409,"line_end":409,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::Stream::filter_map","value":"fn <F, B> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103511,"byte_end":103586,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ them to a different type.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103591,"byte_end":103620,"line_start":381,"line_end":381,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103625,"byte_end":103628,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103633,"byte_end":103708,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate returns `Some(e)` then the stream will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103713,"byte_end":103788,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ yield the value `e`, but if the predicate returns `None` then the next","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103793,"byte_end":103867,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ value will be produced.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103872,"byte_end":103899,"line_start":386,"line_end":386,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103904,"byte_end":103907,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103912,"byte_end":103983,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103988,"byte_end":103991,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":103996,"byte_end":104067,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104072,"byte_end":104150,"line_start":391,"line_end":391,"column_start":5,"column_end":83}},{"value":"/ standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104155,"byte_end":104176,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104181,"byte_end":104184,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104189,"byte_end":104203,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104208,"byte_end":104211,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104216,"byte_end":104223,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104228,"byte_end":104256,"line_start":397,"line_end":397,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104261,"byte_end":104289,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104294,"byte_end":104297,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104302,"byte_end":104346,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ let evens_plus_one = rx.filter_map(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104351,"byte_end":104395,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     if x % 0 == 2 {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104400,"byte_end":104423,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/         Some(x + 1)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104428,"byte_end":104451,"line_start":403,"line_end":403,"column_start":5,"column_end":28}},{"value":"/     } else {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104456,"byte_end":104472,"line_start":404,"line_end":404,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104477,"byte_end":104493,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104498,"byte_end":104507,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104512,"byte_end":104519,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104524,"byte_end":104531,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105963,"byte_end":105967,"line_start":448,"line_end":448,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::Stream::then","value":"fn <F, U> (self, f: F) -> Then<Self, F, U>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the resulting\n item to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the resulting","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104715,"byte_end":104790,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ item to the provided closure `f`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104795,"byte_end":104832,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104837,"byte_end":104840,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This function can be used to ensure a computation runs regardless of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104845,"byte_end":104917,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ the next value on the stream. The closure provided will be yielded a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104922,"byte_end":104994,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ `Result` once a value is ready, and the returned future will then be run","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":104999,"byte_end":105075,"line_start":421,"line_end":421,"column_start":5,"column_end":81}},{"value":"/ to completion to produce the next value on this stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105080,"byte_end":105139,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105144,"byte_end":105147,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105152,"byte_end":105227,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105232,"byte_end":105306,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105311,"byte_end":105383,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105388,"byte_end":105459,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105464,"byte_end":105490,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105495,"byte_end":105498,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105503,"byte_end":105574,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105579,"byte_end":105605,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105610,"byte_end":105613,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105618,"byte_end":105632,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105637,"byte_end":105640,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105645,"byte_end":105652,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105657,"byte_end":105685,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105690,"byte_end":105718,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105723,"byte_end":105726,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105731,"byte_end":105775,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105780,"byte_end":105783,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.then(|result| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105788,"byte_end":105819,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/     match result {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105824,"byte_end":105846,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/         Ok(e) => Ok(e + 3),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105851,"byte_end":105882,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/         Err(()) => Err(4),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105887,"byte_end":105917,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105922,"byte_end":105931,"line_start":445,"line_end":445,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105936,"byte_end":105943,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":105948,"byte_end":105955,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107675,"byte_end":107683,"line_start":495,"line_end":495,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::Stream::and_then","value":"fn <F, U> (self, f: F) -> AndThen<Self, F, U>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106167,"byte_end":106243,"line_start":456,"line_end":456,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106248,"byte_end":106288,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106293,"byte_end":106296,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106301,"byte_end":106377,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106382,"byte_end":106458,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106463,"byte_end":106536,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106541,"byte_end":106583,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106588,"byte_end":106591,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106596,"byte_end":106669,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106674,"byte_end":106705,"line_start":465,"line_end":465,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106710,"byte_end":106713,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106718,"byte_end":106793,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106798,"byte_end":106872,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106877,"byte_end":106949,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":106954,"byte_end":107025,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107030,"byte_end":107056,"line_start":471,"line_end":471,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107061,"byte_end":107064,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107069,"byte_end":107140,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107145,"byte_end":107171,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107176,"byte_end":107179,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107184,"byte_end":107256,"line_start":476,"line_end":476,"column_start":5,"column_end":77}},{"value":"/ success or error, use `for_each` instead.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107261,"byte_end":107306,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107311,"byte_end":107314,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107319,"byte_end":107333,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107338,"byte_end":107341,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107346,"byte_end":107353,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107358,"byte_end":107386,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107391,"byte_end":107419,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107424,"byte_end":107427,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107432,"byte_end":107476,"line_start":485,"line_end":485,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107481,"byte_end":107484,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107489,"byte_end":107524,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/     if result % 2 == 0 {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107529,"byte_end":107557,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/         Ok(result)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107562,"byte_end":107584,"line_start":489,"line_end":489,"column_start":5,"column_end":27}},{"value":"/     } else {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107589,"byte_end":107605,"line_start":490,"line_end":490,"column_start":5,"column_end":21}},{"value":"/         Err(())","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107610,"byte_end":107629,"line_start":491,"line_end":491,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107634,"byte_end":107643,"line_start":492,"line_end":492,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107648,"byte_end":107655,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107660,"byte_end":107667,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108918,"byte_end":108925,"line_start":522,"line_end":522,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::Stream::or_else","value":"fn <F, U> (self, f: F) -> OrElse<Self, F, U>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107890,"byte_end":107955,"line_start":503,"line_end":503,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":107960,"byte_end":108009,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108014,"byte_end":108017,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108022,"byte_end":108101,"line_start":506,"line_end":506,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108106,"byte_end":108180,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108185,"byte_end":108261,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108266,"byte_end":108311,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108316,"byte_end":108319,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108324,"byte_end":108399,"line_start":511,"line_end":511,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108404,"byte_end":108444,"line_start":512,"line_end":512,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108449,"byte_end":108452,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `IntoFuture` trait","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108457,"byte_end":108532,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108537,"byte_end":108611,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/ is finished. Note that the `Result` type implements the `IntoFuture`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108616,"byte_end":108688,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ trait so it is possible to simply alter the `Result` yielded to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108693,"byte_end":108764,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ closure and return it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108769,"byte_end":108795,"line_start":518,"line_end":518,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108800,"byte_end":108803,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108808,"byte_end":108879,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":108884,"byte_end":108910,"line_start":521,"line_end":521,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110275,"byte_end":110282,"line_start":563,"line_end":563,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::Stream::collect","value":"fn (self) -> Collect<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Collect all of the values of this stream into a vector, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Collect all of the values of this stream into a vector, returning a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109129,"byte_end":109200,"line_start":530,"line_end":530,"column_start":5,"column_end":76}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109205,"byte_end":109260,"line_start":531,"line_end":531,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109265,"byte_end":109268,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109273,"byte_end":109347,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ collect them into a `Vec<Self::Item>`. If an error happens then all","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109352,"byte_end":109423,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109428,"byte_end":109498,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109503,"byte_end":109506,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved whenever an error happens or when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109511,"byte_end":109585,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ the stream returns `Ok(None)`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109590,"byte_end":109624,"line_start":538,"line_end":538,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109629,"byte_end":109632,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109637,"byte_end":109705,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109710,"byte_end":109767,"line_start":541,"line_end":541,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109772,"byte_end":109775,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109780,"byte_end":109794,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109799,"byte_end":109802,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109807,"byte_end":109814,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109819,"byte_end":109839,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109844,"byte_end":109847,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109852,"byte_end":109880,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109885,"byte_end":109913,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109918,"byte_end":109921,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109926,"byte_end":109966,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109971,"byte_end":109974,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":109979,"byte_end":110001,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/     for i in (0..5).rev() {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110006,"byte_end":110037,"line_start":554,"line_end":554,"column_start":5,"column_end":36}},{"value":"/         tx = tx.send(i + 1).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110042,"byte_end":110090,"line_start":555,"line_end":555,"column_start":5,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110095,"byte_end":110104,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110109,"byte_end":110116,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110121,"byte_end":110124,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let mut result = rx.collect();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110129,"byte_end":110163,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.wait(), Ok(vec![5, 4, 3, 2, 1]));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110168,"byte_end":110223,"line_start":560,"line_end":560,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110228,"byte_end":110235,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110240,"byte_end":110267,"line_start":562,"line_end":562,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111487,"byte_end":111494,"line_start":599,"line_end":599,"column_start":8,"column_end":15},"name":"concat2","qualname":"::stream::Stream::concat2","value":"fn (self) -> Concat2<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Concatenate all results of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all results of a stream into a single extendable","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110376,"byte_end":110440,"line_start":569,"line_end":569,"column_start":5,"column_end":69}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110445,"byte_end":110509,"line_start":570,"line_end":570,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110514,"byte_end":110517,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110522,"byte_end":110586,"line_start":572,"line_end":572,"column_start":5,"column_end":69}},{"value":"/ of all the successful results of the stream. If the stream is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110591,"byte_end":110656,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned. If an error occurs,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110661,"byte_end":110727,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/ all the results will be dropped and the error will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110732,"byte_end":110799,"line_start":575,"line_end":575,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110804,"byte_end":110807,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ The name `concat2` is an intermediate measure until the release of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110812,"byte_end":110882,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ futures 0.2, at which point it will be renamed back to `concat`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110887,"byte_end":110955,"line_start":578,"line_end":578,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110960,"byte_end":110963,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110968,"byte_end":110982,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110987,"byte_end":110990,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":110995,"byte_end":111002,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111007,"byte_end":111027,"line_start":583,"line_end":583,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111032,"byte_end":111035,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111040,"byte_end":111068,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111073,"byte_end":111101,"line_start":586,"line_end":586,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111106,"byte_end":111109,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111114,"byte_end":111154,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111159,"byte_end":111162,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111167,"byte_end":111194,"line_start":590,"line_end":590,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111199,"byte_end":111230,"line_start":591,"line_end":591,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111235,"byte_end":111261,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/         tx = tx.send(vec![n + 1, n + 2, n + 3]).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111266,"byte_end":111334,"line_start":593,"line_end":593,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111339,"byte_end":111348,"line_start":594,"line_end":594,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111353,"byte_end":111360,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ let result = rx.concat2();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111365,"byte_end":111395,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(result.wait(), Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111400,"byte_end":111467,"line_start":597,"line_end":597,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111472,"byte_end":111479,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112853,"byte_end":112859,"line_start":639,"line_end":639,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::Stream::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Concatenate all results of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all results of a stream into a single extendable","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111696,"byte_end":111760,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111765,"byte_end":111829,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111834,"byte_end":111837,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111842,"byte_end":111906,"line_start":609,"line_end":609,"column_start":5,"column_end":69}},{"value":"/ of all the successful results of the stream. If an error occurs,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111911,"byte_end":111979,"line_start":610,"line_end":610,"column_start":5,"column_end":73}},{"value":"/ all the results will be dropped and the error will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":111984,"byte_end":112051,"line_start":611,"line_end":611,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112056,"byte_end":112059,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112064,"byte_end":112078,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112083,"byte_end":112086,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112091,"byte_end":112098,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112103,"byte_end":112123,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112128,"byte_end":112131,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112136,"byte_end":112164,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112169,"byte_end":112197,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112202,"byte_end":112205,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let (mut tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112210,"byte_end":112250,"line_start":621,"line_end":621,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112255,"byte_end":112258,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112263,"byte_end":112290,"line_start":623,"line_end":623,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112295,"byte_end":112326,"line_start":624,"line_end":624,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112331,"byte_end":112357,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/         tx = tx.send(vec![n + 1, n + 2, n + 3]).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112362,"byte_end":112430,"line_start":626,"line_end":626,"column_start":5,"column_end":73}},{"value":"/     }","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112435,"byte_end":112444,"line_start":627,"line_end":627,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112449,"byte_end":112456,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ let result = rx.concat();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112461,"byte_end":112490,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(result.wait(), Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112495,"byte_end":112562,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112567,"byte_end":112574,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112579,"byte_end":112582,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112587,"byte_end":112599,"line_start":633,"line_end":633,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112604,"byte_end":112607,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ It's important to note that this function will panic if the stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112612,"byte_end":112682,"line_start":635,"line_end":635,"column_start":5,"column_end":75}},{"value":"/ is empty, which is the reason for its deprecation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112687,"byte_end":112741,"line_start":636,"line_end":636,"column_start":5,"column_end":59}},{"value":"deprecated(since = \"0.1.14\", note = \"please use `Stream::concat2` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112746,"byte_end":112820,"line_start":637,"line_end":637,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":112825,"byte_end":112845,"line_start":638,"line_end":638,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113961,"byte_end":113965,"line_start":669,"line_end":669,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::Stream::fold","value":"fn <F, T, Fut> (self, init: T, f: F) -> Fold<Self, F, Fut, T>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Execute an accumulating computation over a stream, collecting all the\n values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating computation over a stream, collecting all the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113049,"byte_end":113122,"line_start":646,"line_end":646,"column_start":5,"column_end":78}},{"value":"/ values into one final result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113127,"byte_end":113160,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113165,"byte_end":113168,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113173,"byte_end":113243,"line_start":649,"line_end":649,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113248,"byte_end":113324,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113329,"byte_end":113405,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113410,"byte_end":113480,"line_start":652,"line_end":652,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113485,"byte_end":113511,"line_start":653,"line_end":653,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113516,"byte_end":113519,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ If an error happens then collected state will be dropped and the error","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113524,"byte_end":113598,"line_start":655,"line_end":655,"column_start":5,"column_end":79}},{"value":"/ will be returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113603,"byte_end":113624,"line_start":656,"line_end":656,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113629,"byte_end":113632,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113637,"byte_end":113651,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113656,"byte_end":113659,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113664,"byte_end":113671,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113676,"byte_end":113704,"line_start":661,"line_end":661,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113709,"byte_end":113733,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113738,"byte_end":113762,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113767,"byte_end":113770,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter_ok::<_, ()>(0..6);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113775,"byte_end":113830,"line_start":665,"line_end":665,"column_start":5,"column_end":60}},{"value":"/ let sum = number_stream.fold(0, |acc, x| future::ok(acc + x));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113835,"byte_end":113901,"line_start":666,"line_end":666,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(sum.wait(), Ok(15));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113906,"byte_end":113941,"line_start":667,"line_end":667,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":113946,"byte_end":113953,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115390,"byte_end":115397,"line_start":711,"line_end":711,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::Stream::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114231,"byte_end":114296,"line_start":678,"line_end":678,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114301,"byte_end":114304,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114309,"byte_end":114382,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114387,"byte_end":114460,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114465,"byte_end":114538,"line_start":682,"line_end":682,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114543,"byte_end":114613,"line_start":683,"line_end":683,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114618,"byte_end":114621,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114626,"byte_end":114633,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114638,"byte_end":114658,"line_start":686,"line_end":686,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114663,"byte_end":114666,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114671,"byte_end":114699,"line_start":688,"line_end":688,"column_start":5,"column_end":33}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114704,"byte_end":114732,"line_start":689,"line_end":689,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114737,"byte_end":114740,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114745,"byte_end":114790,"line_start":691,"line_end":691,"column_start":5,"column_end":50}},{"value":"/ let (tx2, rx2) = mpsc::channel::<i32>(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114795,"byte_end":114840,"line_start":692,"line_end":692,"column_start":5,"column_end":50}},{"value":"/ let (tx3, rx3) = mpsc::channel(1);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114845,"byte_end":114883,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114888,"byte_end":114891,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114896,"byte_end":114918,"line_start":695,"line_end":695,"column_start":5,"column_end":27}},{"value":"/     tx1.send(1).wait().unwrap()","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114923,"byte_end":114958,"line_start":696,"line_end":696,"column_start":5,"column_end":40}},{"value":"/        .send(2).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":114963,"byte_end":114999,"line_start":697,"line_end":697,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115004,"byte_end":115011,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115016,"byte_end":115038,"line_start":699,"line_end":699,"column_start":5,"column_end":27}},{"value":"/     tx2.send(3).wait().unwrap()","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115043,"byte_end":115078,"line_start":700,"line_end":700,"column_start":5,"column_end":40}},{"value":"/        .send(4).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115083,"byte_end":115119,"line_start":701,"line_end":701,"column_start":5,"column_end":41}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115124,"byte_end":115131,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115136,"byte_end":115158,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/     tx3.send(rx1).wait().unwrap()","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115163,"byte_end":115200,"line_start":704,"line_end":704,"column_start":5,"column_end":42}},{"value":"/        .send(rx2).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115205,"byte_end":115243,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115248,"byte_end":115255,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115260,"byte_end":115263,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let mut result = rx3.flatten().collect();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115268,"byte_end":115313,"line_start":708,"line_end":708,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(result.wait(), Ok(vec![1, 2, 3, 4]));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115318,"byte_end":115370,"line_start":709,"line_end":709,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115375,"byte_end":115382,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115942,"byte_end":115952,"line_start":726,"line_end":726,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::Stream::skip_while","value":"fn <P, R> (self, pred: P) -> SkipWhile<Self, P, R>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the predicate provided resolves to\n `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the predicate provided resolves to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115589,"byte_end":115662,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/ `true`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115667,"byte_end":115678,"line_start":720,"line_end":720,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115683,"byte_end":115686,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115691,"byte_end":115764,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ stream until the `predicate` resolves to `false`. Once one element","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115769,"byte_end":115839,"line_start":723,"line_end":723,"column_start":5,"column_end":75}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115844,"byte_end":115918,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":115923,"byte_end":115934,"line_start":725,"line_end":725,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116510,"byte_end":116520,"line_start":740,"line_end":740,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::Stream::take_while","value":"fn <P, R> (self, pred: P) -> TakeWhile<Self, P, R>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Take elements from this stream while the predicate provided resolves to\n `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the predicate provided resolves to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116179,"byte_end":116254,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ `true`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116259,"byte_end":116270,"line_start":735,"line_end":735,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116275,"byte_end":116278,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116283,"byte_end":116358,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ stream until the `predicate` resolves to `false`. Once one element","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116363,"byte_end":116433,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116438,"byte_end":116502,"line_start":739,"line_end":739,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117499,"byte_end":117507,"line_start":762,"line_end":762,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::Stream::for_each","value":"fn <F, U> (self, f: F) -> ForEach<Self, F, U>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided closure for each\n element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided closure for each","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116747,"byte_end":116822,"line_start":748,"line_end":748,"column_start":5,"column_end":80}},{"value":"/ element on the stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116827,"byte_end":116853,"line_start":749,"line_end":749,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116858,"byte_end":116861,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream resolves","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116866,"byte_end":116940,"line_start":751,"line_end":751,"column_start":5,"column_end":79}},{"value":"/ to successfully, producing a future. That future will then be executed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":116945,"byte_end":117019,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ to completion before moving on to the next item.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117024,"byte_end":117076,"line_start":753,"line_end":753,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117081,"byte_end":117084,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Item` type is `()` and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117089,"byte_end":117159,"line_start":755,"line_end":755,"column_start":5,"column_end":75}},{"value":"/ errors are otherwise threaded through. Any error on the stream or in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117164,"byte_end":117240,"line_start":756,"line_end":756,"column_start":5,"column_end":81}},{"value":"/ closure will cause iteration to be halted immediately and the future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117245,"byte_end":117317,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ will resolve to that error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117322,"byte_end":117353,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117358,"byte_end":117361,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117366,"byte_end":117439,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `and_then` instead.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117444,"byte_end":117491,"line_start":761,"line_end":761,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118266,"byte_end":118274,"line_start":781,"line_end":781,"column_start":8,"column_end":16},"name":"from_err","qualname":"::stream::Stream::from_err","value":"fn <E> (self) -> FromErr<Self, E>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Map this stream's error to any error implementing `From` for\n this stream's `Error`, returning a new stream.","sig":null,"attributes":[{"value":"/ Map this stream's error to any error implementing `From` for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117723,"byte_end":117787,"line_start":770,"line_end":770,"column_start":5,"column_end":69}},{"value":"/ this stream's `Error`, returning a new stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117792,"byte_end":117842,"line_start":771,"line_end":771,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117847,"byte_end":117850,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ This function does for streams what `try!` does for `Result`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117855,"byte_end":117920,"line_start":773,"line_end":773,"column_start":5,"column_end":70}},{"value":"/ by letting the compiler infer the type of the resulting error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117925,"byte_end":117991,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/ Just as `map_err` above, this is useful for example to ensure","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":117996,"byte_end":118061,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ that streams have the same error type when used with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118066,"byte_end":118122,"line_start":776,"line_end":776,"column_start":5,"column_end":61}},{"value":"/ combinators.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118127,"byte_end":118143,"line_start":777,"line_end":777,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118148,"byte_end":118151,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118156,"byte_end":118227,"line_start":779,"line_end":779,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118232,"byte_end":118258,"line_start":780,"line_end":780,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118821,"byte_end":118825,"line_start":797,"line_end":797,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::Stream::take","value":"fn (self, amt: u64) -> Take<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `amt` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `amt` items of the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118395,"byte_end":118468,"line_start":787,"line_end":787,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118473,"byte_end":118476,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Once `amt` items have been yielded from this stream then it will always","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118481,"byte_end":118556,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118561,"byte_end":118596,"line_start":790,"line_end":790,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118601,"byte_end":118604,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118609,"byte_end":118621,"line_start":792,"line_end":792,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118626,"byte_end":118629,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Any errors yielded from underlying stream, before the desired amount of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118634,"byte_end":118709,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ items is reached, are passed through and do not affect the total number","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118714,"byte_end":118789,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ of items taken.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118794,"byte_end":118813,"line_start":796,"line_end":796,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119312,"byte_end":119316,"line_start":812,"line_end":812,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::Stream::skip","value":"fn (self, amt: u64) -> Skip<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `amt` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `amt` items of the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":118928,"byte_end":119002,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119007,"byte_end":119010,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Once `amt` items have been skipped from this stream then it will always","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119015,"byte_end":119090,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119095,"byte_end":119141,"line_start":806,"line_end":806,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119146,"byte_end":119149,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119154,"byte_end":119166,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119171,"byte_end":119174,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ All errors yielded from underlying stream are passed through and do not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119179,"byte_end":119254,"line_start":810,"line_end":810,"column_start":5,"column_end":80}},{"value":"/ affect the total number of items skipped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119259,"byte_end":119304,"line_start":811,"line_end":811,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120185,"byte_end":120189,"line_start":833,"line_end":833,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::Stream::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Fuse a stream such that `poll` will never again be called once it has\n finished.","sig":null,"attributes":[{"value":"/ Fuse a stream such that `poll` will never again be called once it has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119419,"byte_end":119492,"line_start":818,"line_end":818,"column_start":5,"column_end":78}},{"value":"/ finished.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119497,"byte_end":119510,"line_start":819,"line_end":819,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119515,"byte_end":119518,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Currently once a stream has returned `None` from `poll` any further","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119523,"byte_end":119594,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/ calls could exhibit bad behavior such as block forever, panic, never","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119599,"byte_end":119671,"line_start":822,"line_end":822,"column_start":5,"column_end":77}},{"value":"/ return, etc. If it is known that `poll` may be called after stream has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119676,"byte_end":119750,"line_start":823,"line_end":823,"column_start":5,"column_end":79}},{"value":"/ already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119755,"byte_end":119827,"line_start":824,"line_end":824,"column_start":5,"column_end":77}},{"value":"/ defined semantics.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119832,"byte_end":119854,"line_start":825,"line_end":825,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119859,"byte_end":119862,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ Once a stream has been `fuse`d and it finishes, then it will forever","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119867,"byte_end":119939,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/ return `None` from `poll`. This, unlike for the traits `poll` method,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":119944,"byte_end":120017,"line_start":828,"line_end":828,"column_start":5,"column_end":78}},{"value":"/ is guaranteed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120022,"byte_end":120040,"line_start":829,"line_end":829,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120045,"byte_end":120048,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Also note that as soon as this stream returns `None` it will be dropped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120053,"byte_end":120128,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/ to reclaim resources associated with it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120133,"byte_end":120177,"line_start":832,"line_end":832,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120928,"byte_end":120934,"line_start":858,"line_end":858,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::Stream::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120277,"byte_end":120324,"line_start":839,"line_end":839,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120329,"byte_end":120332,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120337,"byte_end":120411,"line_start":841,"line_end":841,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120416,"byte_end":120453,"line_start":842,"line_end":842,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120458,"byte_end":120461,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120466,"byte_end":120473,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120478,"byte_end":120506,"line_start":845,"line_end":845,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120511,"byte_end":120535,"line_start":846,"line_end":846,"column_start":5,"column_end":29}},{"value":"/ use futures::future;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120540,"byte_end":120564,"line_start":847,"line_end":847,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120569,"byte_end":120572,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter_ok::<_, ()>(1..5);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120577,"byte_end":120629,"line_start":849,"line_end":849,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120634,"byte_end":120637,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref().take(2).fold(0, |a, b| future::ok(a + b)).wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120642,"byte_end":120721,"line_start":851,"line_end":851,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(sum, Ok(3));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120726,"byte_end":120753,"line_start":852,"line_end":852,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120758,"byte_end":120761,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120766,"byte_end":120801,"line_start":854,"line_end":854,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2).fold(0, |a, b| future::ok(a + b)).wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120806,"byte_end":120876,"line_start":855,"line_end":855,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(sum, Ok(7));","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120881,"byte_end":120908,"line_start":856,"line_end":856,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":120913,"byte_end":120920,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122563,"byte_end":122575,"line_start":898,"line_end":898,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::Stream::catch_unwind","value":"fn (self) -> CatchUnwind<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121015,"byte_end":121069,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121074,"byte_end":121077,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121082,"byte_end":121157,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121162,"byte_end":121165,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121170,"byte_end":121245,"line_start":868,"line_end":868,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121250,"byte_end":121324,"line_start":869,"line_end":869,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121329,"byte_end":121403,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121408,"byte_end":121457,"line_start":871,"line_end":871,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121462,"byte_end":121465,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121470,"byte_end":121545,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121550,"byte_end":121620,"line_start":874,"line_end":874,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121625,"byte_end":121692,"line_start":875,"line_end":875,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Stream` trait is also","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121697,"byte_end":121772,"line_start":876,"line_end":876,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<S>` where `S` implements `Stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121777,"byte_end":121849,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121854,"byte_end":121857,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121862,"byte_end":121930,"line_start":879,"line_end":879,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121935,"byte_end":121992,"line_start":880,"line_end":880,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":121997,"byte_end":122000,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122005,"byte_end":122019,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122024,"byte_end":122027,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122032,"byte_end":122043,"line_start":884,"line_end":884,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122048,"byte_end":122076,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122081,"byte_end":122105,"line_start":886,"line_end":886,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122110,"byte_end":122113,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter_ok::<_, bool>(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122118,"byte_end":122194,"line_start":888,"line_end":888,"column_start":5,"column_end":81}},{"value":"/ // panic on second element","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122199,"byte_end":122229,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122234,"byte_end":122288,"line_start":890,"line_end":890,"column_start":5,"column_end":59}},{"value":"/ let mut iter = stream_panicking.catch_unwind().wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122293,"byte_end":122351,"line_start":891,"line_end":891,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122356,"byte_end":122359,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ok(10), iter.next().unwrap().ok().unwrap());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122364,"byte_end":122423,"line_start":893,"line_end":893,"column_start":5,"column_end":64}},{"value":"/ assert!(iter.next().unwrap().is_err());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122428,"byte_end":122471,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122476,"byte_end":122511,"line_start":895,"line_end":895,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122516,"byte_end":122523,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122528,"byte_end":122555,"line_start":897,"line_end":897,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123457,"byte_end":123465,"line_start":918,"line_end":918,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::Stream::buffered","value":"fn (self, amt: usize) -> Buffered<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122703,"byte_end":122766,"line_start":904,"line_end":904,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122771,"byte_end":122774,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122779,"byte_end":122854,"line_start":906,"line_end":906,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `amt` futures and then return results in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122859,"byte_end":122933,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ same order as the underlying stream. No more than `amt` futures will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":122938,"byte_end":123013,"line_start":908,"line_end":908,"column_start":5,"column_end":80}},{"value":"/ buffered at any point in time, and less than `amt` may also be buffered","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123018,"byte_end":123093,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123098,"byte_end":123140,"line_start":910,"line_end":910,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123145,"byte_end":123148,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's result, with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123153,"byte_end":123223,"line_start":912,"line_end":912,"column_start":5,"column_end":75}},{"value":"/ errors passed through whenever they occur.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123228,"byte_end":123274,"line_start":913,"line_end":913,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123279,"byte_end":123282,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123287,"byte_end":123355,"line_start":915,"line_end":915,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123360,"byte_end":123417,"line_start":916,"line_end":916,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123422,"byte_end":123449,"line_start":917,"line_end":917,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124400,"byte_end":124416,"line_start":939,"line_end":939,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::Stream::buffer_unordered","value":"fn (self, amt: usize) -> BufferUnordered<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123649,"byte_end":123724,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123729,"byte_end":123732,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123737,"byte_end":123812,"line_start":927,"line_end":927,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `amt` futures and then return results in the order","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123817,"byte_end":123889,"line_start":928,"line_end":928,"column_start":5,"column_end":77}},{"value":"/ in which they complete. No more than `amt` futures will be buffered at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123894,"byte_end":123968,"line_start":929,"line_end":929,"column_start":5,"column_end":79}},{"value":"/ any point in time, and less than `amt` may also be buffered depending on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":123973,"byte_end":124049,"line_start":930,"line_end":930,"column_start":5,"column_end":81}},{"value":"/ the state of each future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124054,"byte_end":124083,"line_start":931,"line_end":931,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124088,"byte_end":124091,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's result, with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124096,"byte_end":124166,"line_start":933,"line_end":933,"column_start":5,"column_end":75}},{"value":"/ errors passed through whenever they occur.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124171,"byte_end":124217,"line_start":934,"line_end":934,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124222,"byte_end":124225,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124230,"byte_end":124298,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124303,"byte_end":124360,"line_start":937,"line_end":937,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124365,"byte_end":124392,"line_start":938,"line_end":938,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124972,"byte_end":124977,"line_start":953,"line_end":953,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::Stream::merge","value":"fn <S> (self, other: S) -> Merge<Self, S>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" An adapter for merging the output of two streams.","sig":null,"attributes":[{"value":"/ An adapter for merging the output of two streams.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124615,"byte_end":124668,"line_start":946,"line_end":946,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124673,"byte_end":124676,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ The merged stream produces items from one or both of the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124681,"byte_end":124752,"line_start":948,"line_end":948,"column_start":5,"column_end":76}},{"value":"/ streams as they become available. Errors, however, are not merged: you","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124757,"byte_end":124831,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ get at most one error at a time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124836,"byte_end":124872,"line_start":950,"line_end":950,"column_start":5,"column_end":41}},{"value":"deprecated(note = \"functionality provided by `select` now\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124877,"byte_end":124939,"line_start":951,"line_end":951,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":124944,"byte_end":124964,"line_start":952,"line_end":952,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125441,"byte_end":125444,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::Stream::zip","value":"fn <S> (self, other: S) -> Zip<Self, S>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125137,"byte_end":125185,"line_start":960,"line_end":960,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125190,"byte_end":125193,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125198,"byte_end":125271,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If an error happens, then that error will be returned","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125276,"byte_end":125352,"line_start":963,"line_end":963,"column_start":5,"column_end":81}},{"value":"/ immediately. If either stream ends then the zipped stream will also end.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125357,"byte_end":125433,"line_start":964,"line_end":964,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126354,"byte_end":126359,"line_start":991,"line_end":991,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::Stream::chain","value":"fn <S> (self, other: S) -> Chain<Self, S>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Adapter for chaining two stream.","sig":null,"attributes":[{"value":"/ Adapter for chaining two stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125600,"byte_end":125636,"line_start":972,"line_end":972,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125641,"byte_end":125644,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125649,"byte_end":125720,"line_start":974,"line_end":974,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125725,"byte_end":125801,"line_start":975,"line_end":975,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125806,"byte_end":125809,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125814,"byte_end":125825,"line_start":977,"line_end":977,"column_start":5,"column_end":16}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125830,"byte_end":125858,"line_start":978,"line_end":978,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125863,"byte_end":125887,"line_start":979,"line_end":979,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125892,"byte_end":125895,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter_result(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125900,"byte_end":125964,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/ let stream2 = stream::iter_result(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":125969,"byte_end":126032,"line_start":982,"line_end":982,"column_start":5,"column_end":68}},{"value":"/ let mut chain = stream1.chain(stream2).wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126037,"byte_end":126087,"line_start":983,"line_end":983,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126092,"byte_end":126095,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(Ok(10)), chain.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126100,"byte_end":126143,"line_start":985,"line_end":985,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(Err(false)), chain.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126148,"byte_end":126195,"line_start":986,"line_end":986,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(Err(true)), chain.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126200,"byte_end":126246,"line_start":987,"line_end":987,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some(Ok(20)), chain.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126251,"byte_end":126294,"line_start":988,"line_end":988,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, chain.next());","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126299,"byte_end":126334,"line_start":989,"line_end":989,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126339,"byte_end":126346,"line_start":990,"line_end":990,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126683,"byte_end":126691,"line_start":1001,"line_end":1001,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::Stream::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126537,"byte_end":126592,"line_start":998,"line_end":998,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126597,"byte_end":126600,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126605,"byte_end":126675,"line_start":1000,"line_end":1000,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127745,"byte_end":127751,"line_start":1028,"line_end":1028,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::Stream::chunks","value":"fn (self, capacity: usize) -> Chunks<Self>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126783,"byte_end":126850,"line_start":1007,"line_end":1007,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126855,"byte_end":126858,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126863,"byte_end":126937,"line_start":1009,"line_end":1009,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":126942,"byte_end":127014,"line_start":1010,"line_end":1010,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127019,"byte_end":127071,"line_start":1011,"line_end":1011,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127076,"byte_end":127079,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127084,"byte_end":127157,"line_start":1013,"line_end":1013,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127162,"byte_end":127236,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127241,"byte_end":127316,"line_start":1015,"line_end":1015,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127321,"byte_end":127393,"line_start":1016,"line_end":1016,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127398,"byte_end":127410,"line_start":1017,"line_end":1017,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127415,"byte_end":127418,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ Errors are passed through the stream unbuffered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127423,"byte_end":127475,"line_start":1019,"line_end":1019,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127480,"byte_end":127483,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127488,"byte_end":127556,"line_start":1021,"line_end":1021,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127561,"byte_end":127618,"line_start":1022,"line_end":1022,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127623,"byte_end":127626,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127631,"byte_end":127643,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127648,"byte_end":127651,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This method will panic of `capacity` is zero.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127656,"byte_end":127705,"line_start":1026,"line_end":1026,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127710,"byte_end":127737,"line_start":1027,"line_end":1027,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128429,"byte_end":128435,"line_start":1045,"line_end":1045,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::Stream::select","value":"fn <S> (self, other: S) -> Select<Self, S>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Creates a stream that selects the next element from either this stream\n or the provided one, whichever is ready first.","sig":null,"attributes":[{"value":"/ Creates a stream that selects the next element from either this stream","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127870,"byte_end":127944,"line_start":1034,"line_end":1034,"column_start":5,"column_end":79}},{"value":"/ or the provided one, whichever is ready first.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":127949,"byte_end":127999,"line_start":1035,"line_end":1035,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128004,"byte_end":128007,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from both streams. Each","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128012,"byte_end":128082,"line_start":1037,"line_end":1037,"column_start":5,"column_end":75}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128087,"byte_end":128163,"line_start":1038,"line_end":1038,"column_start":5,"column_end":81}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128168,"byte_end":128216,"line_start":1039,"line_end":1039,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128221,"byte_end":128224,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The `select` function is similar to `merge` except that it requires both","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128229,"byte_end":128305,"line_start":1041,"line_end":1041,"column_start":5,"column_end":81}},{"value":"/ streams to have the same item and error types.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128310,"byte_end":128360,"line_start":1042,"line_end":1042,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128365,"byte_end":128368,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ Error are passed through from either stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128373,"byte_end":128421,"line_start":1044,"line_end":1044,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129365,"byte_end":129372,"line_start":1066,"line_end":1066,"column_start":8,"column_end":15},"name":"forward","qualname":"::stream::Stream::forward","value":"fn <S> (self, sink: S) -> Forward<Self, S>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128616,"byte_end":128691,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128696,"byte_end":128734,"line_start":1053,"line_end":1053,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128739,"byte_end":128742,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128747,"byte_end":128820,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128825,"byte_end":128901,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, and the sink has fully processed received item,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128906,"byte_end":128978,"line_start":1057,"line_end":1057,"column_start":5,"column_end":77}},{"value":"/ flushed successfully, and closed successfully.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":128983,"byte_end":129033,"line_start":1058,"line_end":1058,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129038,"byte_end":129041,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ Doing `stream.forward(sink)` is roughly equivalent to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129046,"byte_end":129103,"line_start":1060,"line_end":1060,"column_start":5,"column_end":62}},{"value":"/ `sink.send_all(stream)`. The returned future will exhaust all items from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129108,"byte_end":129184,"line_start":1061,"line_end":1061,"column_start":5,"column_end":81}},{"value":"/ `self`, sending them all to `sink`. Furthermore the `sink` will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129189,"byte_end":129259,"line_start":1062,"line_end":1062,"column_start":5,"column_end":75}},{"value":"/ closed and flushed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129264,"byte_end":129287,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129292,"byte_end":129295,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ On completion, the pair `(stream, sink)` is returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129300,"byte_end":129357,"line_start":1065,"line_end":1065,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130032,"byte_end":130037,"line_start":1084,"line_end":1084,"column_start":8,"column_end":13},"name":"split","qualname":"::stream::Stream::split","value":"fn (self) -> (SplitSink<Self>, SplitStream<Self>)","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Splits this `Stream + Sink` object into separate `Stream` and `Sink`\n objects.","sig":null,"attributes":[{"value":"/ Splits this `Stream + Sink` object into separate `Stream` and `Sink`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129580,"byte_end":129652,"line_start":1074,"line_end":1074,"column_start":5,"column_end":77}},{"value":"/ objects.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129657,"byte_end":129669,"line_start":1075,"line_end":1075,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129674,"byte_end":129677,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ This can be useful when you want to split ownership between tasks, or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129682,"byte_end":129755,"line_start":1077,"line_end":1077,"column_start":5,"column_end":78}},{"value":"/ allow direct interaction between the two objects (e.g. via","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129760,"byte_end":129822,"line_start":1078,"line_end":1078,"column_start":5,"column_end":67}},{"value":"/ `Sink::send_all`).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129827,"byte_end":129849,"line_start":1079,"line_end":1079,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129854,"byte_end":129857,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129862,"byte_end":129930,"line_start":1081,"line_end":1081,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129935,"byte_end":129992,"line_start":1082,"line_end":1082,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":129997,"byte_end":130024,"line_start":1083,"line_end":1083,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130477,"byte_end":130484,"line_start":1095,"line_end":1095,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::Stream::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130174,"byte_end":130247,"line_start":1090,"line_end":1090,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130252,"byte_end":130255,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130260,"byte_end":130329,"line_start":1092,"line_end":1092,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130334,"byte_end":130403,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130408,"byte_end":130469,"line_start":1094,"line_end":1094,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130907,"byte_end":130918,"line_start":1107,"line_end":1107,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::Stream::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Do something with the error of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error of this stream, afterwards passing it on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130631,"byte_end":130704,"line_start":1102,"line_end":1102,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130709,"byte_end":130712,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::inspect` method where it allows","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130717,"byte_end":130784,"line_start":1104,"line_end":1104,"column_start":5,"column_end":72}},{"value":"/ easily inspecting the error as it passes through the stream, for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130789,"byte_end":130857,"line_start":1105,"line_end":1105,"column_start":5,"column_end":73}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":130862,"byte_end":130899,"line_start":1106,"line_end":1106,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131882,"byte_end":131899,"line_start":1135,"line_end":1135,"column_start":8,"column_end":25},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"fn <I> (futures: I) -> FuturesUnordered<<I::Item as IntoFuture>::Future>","parent":null,"children":[],"decl_id":null,"docs":" Converts a list of futures into a `Stream` of results from the futures.","sig":null,"attributes":[{"value":"/ Converts a list of futures into a `Stream` of results from the futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131275,"byte_end":131350,"line_start":1124,"line_end":1124,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131351,"byte_end":131354,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ This function will take an list of futures (e.g. a vector, an iterator,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131355,"byte_end":131430,"line_start":1126,"line_end":1126,"column_start":1,"column_end":76}},{"value":"/ etc), and return a stream. The stream will yield items as they become","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131431,"byte_end":131504,"line_start":1127,"line_end":1127,"column_start":1,"column_end":74}},{"value":"/ available on the futures internally, in the order that they become","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131505,"byte_end":131575,"line_start":1128,"line_end":1128,"column_start":1,"column_end":71}},{"value":"/ available. This function is similar to `buffer_unordered` in that it may","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131576,"byte_end":131652,"line_start":1129,"line_end":1129,"column_start":1,"column_end":77}},{"value":"/ return items in a different order than in the list specified.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131653,"byte_end":131718,"line_start":1130,"line_end":1130,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131719,"byte_end":131722,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131723,"byte_end":131795,"line_start":1132,"line_end":1132,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131796,"byte_end":131846,"line_start":1133,"line_end":1133,"column_start":1,"column_end":51}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":131847,"byte_end":131874,"line_start":1134,"line_end":1134,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sink","qualname":"::sink","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1563},{"krate":0,"index":1604},{"krate":0,"index":1622},{"krate":0,"index":1654},{"krate":0,"index":1674},{"krate":0,"index":1700},{"krate":0,"index":1733},{"krate":0,"index":4818},{"krate":0,"index":4848},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1811}],"decl_id":null,"docs":" Asynchronous sinks","sig":null,"attributes":[{"value":"! Asynchronous sinks","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207789,"byte_end":207811,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207812,"byte_end":207815,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the `Sink` trait, along with a number of adapter types","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207816,"byte_end":207895,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! for it. An overview is available in the documentation for the trait itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207896,"byte_end":207975,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207976,"byte_end":207979,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":207980,"byte_end":208048,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"! https://tokio.rs][online]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208049,"byte_end":208078,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208079,"byte_end":208082,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208083,"byte_end":208153,"line_start":9,"line_end":9,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227133,"byte_end":227137,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"With","qualname":"::sink::with::With","value":"With {  }","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714}],"decl_id":null,"docs":" Sink for the `Sink::with` combinator, chaining a computation to run *prior*\n to pushing a value into the underlying sink.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::with` combinator, chaining a computation to run *prior*","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":226922,"byte_end":227001,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ to pushing a value into the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227002,"byte_end":227050,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227075,"byte_end":227121,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228490,"byte_end":228497,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<With<S, U, F, Fut>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228433,"byte_end":228478,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228601,"byte_end":228608,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<With<S, U, F, Fut>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228543,"byte_end":228589,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228899,"byte_end":228909,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<With<S, U, F, Fut>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228666,"byte_end":228726,"line_start":84,"line_end":84,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228731,"byte_end":228734,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228739,"byte_end":228811,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228816,"byte_end":228887,"line_start":87,"line_end":87,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231279,"byte_end":231290,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"WithFlatMap","qualname":"::sink::with_flat_map::WithFlatMap","value":"WithFlatMap {  }","parent":null,"children":[{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755}],"decl_id":null,"docs":" Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator\n to run prior to pushing a value into the underlying sink\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::with_flat_map` combinator, chaining a computation that returns an iterator","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231044,"byte_end":231142,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ to run prior to pushing a value into the underlying sink","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231143,"byte_end":231203,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231221,"byte_end":231267,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232028,"byte_end":232035,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WithFlatMap<S, U, F, St>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231971,"byte_end":232016,"line_start":45,"line_end":45,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232139,"byte_end":232146,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WithFlatMap<S, U, F, St>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232081,"byte_end":232127,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232437,"byte_end":232447,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithFlatMap<S, U, F, St>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232204,"byte_end":232264,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232269,"byte_end":232272,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232277,"byte_end":232349,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":232354,"byte_end":232425,"line_start":58,"line_end":58,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4762},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234720,"byte_end":234725,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Flush","qualname":"::sink::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":4764}],"decl_id":null,"docs":" Future for the `Sink::flush` combinator, which polls the sink until all data\n has been flushed.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::flush` combinator, which polls the sink until all data","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234540,"byte_end":234620,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ has been flushed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234621,"byte_end":234642,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234660,"byte_end":234708,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234918,"byte_end":234925,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flush<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234861,"byte_end":234906,"line_start":17,"line_end":17,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235100,"byte_end":235107,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flush<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235042,"byte_end":235088,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235294,"byte_end":235304,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flush<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Flush` and return the inner sink.\n","sig":null,"attributes":[{"value":"/ Consume the `Flush` and return the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235232,"byte_end":235282,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4768},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236087,"byte_end":236098,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"SinkFromErr","qualname":"::sink::from_err::SinkFromErr","value":"SinkFromErr {  }","parent":null,"children":[{"krate":0,"index":4771},{"krate":0,"index":4772}],"decl_id":null,"docs":" A sink combinator to change the error type of a sink.","sig":null,"attributes":[{"value":"/ A sink combinator to change the error type of a sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":235889,"byte_end":235946,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":235947,"byte_end":235950,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Sink::from_err` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":235951,"byte_end":236002,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236027,"byte_end":236075,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236374,"byte_end":236381,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkFromErr<S, E>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236317,"byte_end":236362,"line_start":25,"line_end":25,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236485,"byte_end":236492,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkFromErr<S, E>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236427,"byte_end":236473,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236783,"byte_end":236793,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkFromErr<S, E>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236550,"byte_end":236610,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236615,"byte_end":236618,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236623,"byte_end":236695,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236700,"byte_end":236771,"line_start":38,"line_end":38,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":237860,"byte_end":237864,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Send","qualname":"::sink::send::Send","value":"Send {  }","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4784}],"decl_id":null,"docs":" Future for the `Sink::send` combinator, which sends a value to a sink and\n then waits until the sink has fully flushed.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::send` combinator, which sends a value to a sink and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":237656,"byte_end":237733,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ then waits until the sink has fully flushed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":237734,"byte_end":237782,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":237800,"byte_end":237848,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238149,"byte_end":238156,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Send<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238092,"byte_end":238137,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238326,"byte_end":238333,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Send<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238268,"byte_end":238314,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":4788},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":239656,"byte_end":239663,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"SendAll","qualname":"::sink::send_all::SendAll","value":"SendAll {  }","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793}],"decl_id":null,"docs":" Future for the `Sink::send_all` combinator, which sends a stream of values\n to a sink and then waits until the sink has fully flushed those values.\n","sig":null,"attributes":[{"value":"/ Future for the `Sink::send_all` combinator, which sends a stream of values","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":239424,"byte_end":239502,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to a sink and then waits until the sink has fully flushed those values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":239503,"byte_end":239578,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":239596,"byte_end":239644,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4798},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242255,"byte_end":242265,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"SinkMapErr","qualname":"::sink::map_err::SinkMapErr","value":"SinkMapErr {  }","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4802}],"decl_id":null,"docs":" Sink for the `Sink::sink_map_err` combinator.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::sink_map_err` combinator.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242124,"byte_end":242173,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242197,"byte_end":242243,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242492,"byte_end":242499,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SinkMapErr<S, E>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242435,"byte_end":242480,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242603,"byte_end":242610,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SinkMapErr<S, E>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242545,"byte_end":242591,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242901,"byte_end":242911,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SinkMapErr<S, E>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242668,"byte_end":242728,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242733,"byte_end":242736,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242741,"byte_end":242813,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242818,"byte_end":242889,"line_start":31,"line_end":31,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244243,"byte_end":244249,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Fanout","qualname":"::sink::fanout::Fanout","value":"Fanout {  }","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"decl_id":null,"docs":" Sink that clones incoming items and forwards them to two sinks at the same time.","sig":null,"attributes":[{"value":"/ Sink that clones incoming items and forwards them to two sinks at the same time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":243990,"byte_end":244074,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244075,"byte_end":244078,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Backpressure from any downstream sink propagates up, which means that this sink","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244079,"byte_end":244162,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ can only process items as fast as its _slowest_ downstream sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244163,"byte_end":244231,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244599,"byte_end":244609,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fanout<A, B>>::into_inner","value":"fn (self) -> (A, B)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sinks.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sinks.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244365,"byte_end":244426,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244431,"byte_end":244434,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244439,"byte_end":244508,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ so care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244513,"byte_end":244587,"line_start":19,"line_end":19,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8401996,"byte_end":8402002,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::sink::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881}],"decl_id":null,"docs":" Sink for the `Sink::buffer` combinator, which buffers up to some fixed\n number of values when the underlying sink is unable to accept them.\n","sig":null,"attributes":[{"value":"/ Sink for the `Sink::buffer` combinator, which buffers up to some fixed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8401774,"byte_end":8401848,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ number of values when the underlying sink is unable to accept them.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8401849,"byte_end":8401920,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8401938,"byte_end":8401984,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4832},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402403,"byte_end":8402410,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffer<S>>::get_ref","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402346,"byte_end":8402391,"line_start":29,"line_end":29,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402514,"byte_end":8402521,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffer<S>>::get_mut","value":"fn (&mut self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner sink.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402456,"byte_end":8402502,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402812,"byte_end":8402822,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffer<S>>::into_inner","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying sink.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402579,"byte_end":8402639,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402644,"byte_end":8402647,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402652,"byte_end":8402724,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402729,"byte_end":8402800,"line_start":42,"line_end":42,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4885},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404928,"byte_end":8404932,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Wait","qualname":"::sink::wait::Wait","value":"Wait {  }","parent":null,"children":[{"krate":0,"index":4887}],"decl_id":null,"docs":" A sink combinator which converts an asynchronous sink to a **blocking\n sink**.","sig":null,"attributes":[{"value":"/ A sink combinator which converts an asynchronous sink to a **blocking","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404557,"byte_end":8404630,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ sink**.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404631,"byte_end":8404642,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404643,"byte_end":8404646,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Created by the `Sink::wait` method, this function transforms any sink into a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404647,"byte_end":8404727,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ blocking version. This is implemented by blocking the current thread when a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404728,"byte_end":8404807,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ sink is otherwise unable to make progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404808,"byte_end":8404854,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"must_use = \"sinks do nothing unless used\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8404855,"byte_end":8404899,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405737,"byte_end":8405741,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"send","qualname":"<Wait<S>>::send","value":"fn (&mut self, value: S::SinkItem) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value to this sink, blocking the current thread until it's able\n to do so.","sig":null,"attributes":[{"value":"/ Sends a value to this sink, blocking the current thread until it's able","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405092,"byte_end":8405167,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ to do so.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405172,"byte_end":8405185,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405190,"byte_end":8405193,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This function will take the `value` provided and call the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405198,"byte_end":8405270,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ sink's `start_send` function until it's ready to accept the value. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405275,"byte_end":8405348,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ the function returns `NotReady` then the current thread is blocked","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405353,"byte_end":8405423,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ until it is otherwise ready to accept the value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405428,"byte_end":8405480,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405485,"byte_end":8405488,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405493,"byte_end":8405511,"line_start":31,"line_end":31,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405516,"byte_end":8405519,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ If `Ok(())` is returned then the `value` provided was successfully sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405524,"byte_end":8405599,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ along the sink, and if `Err(e)` is returned then an error occurred","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405604,"byte_end":8405674,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ which prevented the value from being sent.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405679,"byte_end":8405725,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406230,"byte_end":8406235,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"flush","qualname":"<Wait<S>>::flush","value":"fn (&mut self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Flushes any buffered data in this sink, blocking the current thread\n until it's entirely flushed.","sig":null,"attributes":[{"value":"/ Flushes any buffered data in this sink, blocking the current thread","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405849,"byte_end":8405920,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ until it's entirely flushed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405925,"byte_end":8405957,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405962,"byte_end":8405965,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `poll_complete` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405970,"byte_end":8406042,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ until it returns that it's ready to proceed. If the method returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406047,"byte_end":8406117,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ `NotReady` the current thread will be blocked until it's otherwise","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406122,"byte_end":8406192,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ ready to proceed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406197,"byte_end":8406218,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406632,"byte_end":8406637,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"close","qualname":"<Wait<S>>::close","value":"fn (&mut self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Close this sink, blocking the current thread until it's entirely closed.","sig":null,"attributes":[{"value":"/ Close this sink, blocking the current thread until it's entirely closed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406319,"byte_end":8406395,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406400,"byte_end":8406403,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `close` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406408,"byte_end":8406472,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ until it returns that it's closed. If the method returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406477,"byte_end":8406537,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/ `NotReady` the current thread will be blocked until it's otherwise closed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8406542,"byte_end":8406620,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209168,"byte_end":209175,"line_start":55,"line_end":55,"column_start":14,"column_end":21},"name":"BoxSink","qualname":"::sink::BoxSink","value":"::std::boxed::Box<Sink<SinkItem = T, SinkError = E> + ::core::marker::Send>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `Box<Sink + Send>`\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6399,"byte_end":6426,"line_start":168,"line_end":168,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211519,"byte_end":211523,"line_start":117,"line_end":117,"column_start":11,"column_end":15},"name":"Sink","qualname":"::sink::Sink","value":"Sink","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809}],"decl_id":null,"docs":" A `Sink` is a value into which other values can be sent, asynchronously.","sig":null,"attributes":[{"value":"/ A `Sink` is a value into which other values can be sent, asynchronously.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210099,"byte_end":210175,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210176,"byte_end":210179,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Basic examples of sinks include the sending side of:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210180,"byte_end":210236,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210237,"byte_end":210240,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ - Channels","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210241,"byte_end":210255,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/ - Sockets","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210256,"byte_end":210269,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/ - Pipes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210270,"byte_end":210281,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210282,"byte_end":210285,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ In addition to such \"primitive\" sinks, it's typical to layer additional","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210286,"byte_end":210361,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ functionality, such as buffering, on top of an existing sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210362,"byte_end":210427,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210428,"byte_end":210431,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Sending to a sink is \"asynchronous\" in the sense that the value may not be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210432,"byte_end":210510,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ sent in its entirety immediately. Instead, values are sent in a two-phase","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210511,"byte_end":210588,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ way: first by initiating a send, and then by polling for completion. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210589,"byte_end":210666,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ two-phase setup is analogous to buffered writing in synchronous code, where","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210667,"byte_end":210746,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ writes often succeed immediately, but internally are buffered and are","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210747,"byte_end":210820,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ *actually* written only upon flushing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210821,"byte_end":210863,"line_start":102,"line_end":102,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210864,"byte_end":210867,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ In addition, the `Sink` may be *full*, in which case it is not even possible","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210868,"byte_end":210948,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ to start the sending process.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210949,"byte_end":210982,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210983,"byte_end":210986,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ As with `Future` and `Stream`, the `Sink` trait is built from a few core","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":210987,"byte_end":211063,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ required methods, and a host of default methods for working in a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211064,"byte_end":211132,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/ higher-level way. The `Sink::send_all` combinator is of particular","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211133,"byte_end":211203,"line_start":109,"line_end":109,"column_start":1,"column_end":71}},{"value":"/ importance: you can use it to send an entire stream to a sink, which is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211204,"byte_end":211279,"line_start":110,"line_end":110,"column_start":1,"column_end":76}},{"value":"/ the simplest way to ultimately consume a sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211280,"byte_end":211330,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211331,"byte_end":211334,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ You can find more information/tutorials about streams [online at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211335,"byte_end":211403,"line_start":113,"line_end":113,"column_start":1,"column_end":69}},{"value":"/ https://tokio.rs][online]","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211404,"byte_end":211433,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211434,"byte_end":211437,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [online]: https://tokio.rs/docs/getting-started/streams-and-sinks/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211438,"byte_end":211508,"line_start":116,"line_end":116,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211584,"byte_end":211592,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"name":"SinkItem","qualname":"::sink::Sink::SinkItem","value":"type SinkItem;","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" The type of value that the sink accepts.\n","sig":null,"attributes":[{"value":"/ The type of value that the sink accepts.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211530,"byte_end":211574,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211673,"byte_end":211682,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"name":"SinkError","qualname":"::sink::Sink::SinkError","value":"type SinkError;","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" The type of value produced by the sink when an error occurs.\n","sig":null,"attributes":[{"value":"/ The type of value produced by the sink when an error occurs.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211599,"byte_end":211663,"line_start":121,"line_end":121,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213645,"byte_end":213655,"line_start":162,"line_end":162,"column_start":8,"column_end":18},"name":"start_send","qualname":"::sink::Sink::start_send","value":"fn (&mut self, item: Self::SinkItem) -> StartSend<Self::SinkItem, Self::SinkError>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Begin the process of sending a value to the sink.","sig":null,"attributes":[{"value":"/ Begin the process of sending a value to the sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211689,"byte_end":211742,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211747,"byte_end":211750,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ As the name suggests, this method only *begins* the process of sending","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211755,"byte_end":211829,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ the item. If the sink employs buffering, the item isn't fully processed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211834,"byte_end":211909,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ until the buffer is fully flushed. Since sinks are designed to work with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211914,"byte_end":211990,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ asynchronous I/O, the process of actually writing out the data to an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":211995,"byte_end":212067,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ underlying object takes place asynchronously. **You *must* use","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212072,"byte_end":212138,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/ `poll_complete` in order to drive completion of a send**. In particular,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212143,"byte_end":212219,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `start_send` does not begin the flushing process","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212224,"byte_end":212276,"line_start":132,"line_end":132,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212281,"byte_end":212284,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212289,"byte_end":212307,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212312,"byte_end":212315,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This method returns `AsyncSink::Ready` if the sink was able to start","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212320,"byte_end":212392,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ sending `item`. In that case, you *must* ensure that you call","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212397,"byte_end":212462,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/ `poll_complete` to process the sent item to completion. Note, however,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212467,"byte_end":212541,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ that several calls to `start_send` can be made prior to calling","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212546,"byte_end":212613,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ `poll_complete`, which will work on completing all pending items.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212618,"byte_end":212687,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212692,"byte_end":212695,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The method returns `AsyncSink::NotReady` if the sink was unable to begin","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212700,"byte_end":212776,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ sending, usually due to being full. The sink must have attempted to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212781,"byte_end":212852,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ complete processing any outstanding requests (equivalent to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212857,"byte_end":212920,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/ `poll_complete`) before yielding this result. The current task will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":212925,"byte_end":212999,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ automatically scheduled for notification when the sink may be ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213004,"byte_end":213078,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ receive new values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213083,"byte_end":213106,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213111,"byte_end":213114,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213119,"byte_end":213131,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213136,"byte_end":213139,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If the sink encounters an error other than being temporarily full, it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213144,"byte_end":213217,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ uses the `Err` variant to signal that error. In most cases, such errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213222,"byte_end":213297,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ mean that the sink will permanently be unable to receive items.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213302,"byte_end":213369,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213374,"byte_end":213377,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213382,"byte_end":213394,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213399,"byte_end":213402,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method may panic in a few situations, depending on the specific","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213407,"byte_end":213479,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ sink:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213484,"byte_end":213493,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213498,"byte_end":213501,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ - It is called outside of the context of a task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213506,"byte_end":213558,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/ - A previous call to `start_send` or `poll_complete` yielded an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213563,"byte_end":213637,"line_start":161,"line_end":161,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215984,"byte_end":215997,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::sink::Sink::poll_complete","value":"fn (&mut self) -> Poll<(), Self::SinkError>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Flush all output from this sink, if necessary.","sig":null,"attributes":[{"value":"/ Flush all output from this sink, if necessary.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213759,"byte_end":213809,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213814,"byte_end":213817,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Some sinks may buffer intermediate data as an optimization to improve","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213822,"byte_end":213895,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ throughput. In other words, if a sink has a corresponding receiver then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213900,"byte_end":213975,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ a successful `start_send` above may not guarantee that the value is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":213980,"byte_end":214051,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ actually ready to be received by the receiver. This function is intended","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214056,"byte_end":214132,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ to be used to ensure that values do indeed make their way to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214137,"byte_end":214205,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ receiver.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214210,"byte_end":214223,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214228,"byte_end":214231,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to process any pending requests on behalf of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214236,"byte_end":214311,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ the sink and drive it to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214316,"byte_end":214356,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214361,"byte_end":214364,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214369,"byte_end":214387,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214392,"byte_end":214395,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::Ready(()))` when no buffered items remain. If this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214400,"byte_end":214473,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ value is returned then it is guaranteed that all previous values sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214478,"byte_end":214551,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ via `start_send` will be guaranteed to be available to a listening","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214556,"byte_end":214626,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ receiver.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214631,"byte_end":214644,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214649,"byte_end":214652,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::NotReady)` if there is more work left to do, in which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214657,"byte_end":214733,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ case the current task is scheduled to wake up when more progress may be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214738,"byte_end":214813,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ possible.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214818,"byte_end":214831,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214836,"byte_end":214839,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214844,"byte_end":214856,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214861,"byte_end":214864,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` if the sink encounters an error while processing one of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214869,"byte_end":214942,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ its pending requests. Due to the buffered nature of requests, it is not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":214947,"byte_end":215022,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ generally possible to correlate the error with a particular request. As","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215027,"byte_end":215102,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ with `start_send`, these errors are generally \"fatal\" for continued use","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215107,"byte_end":215182,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ of the sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215187,"byte_end":215203,"line_start":194,"line_end":194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215208,"byte_end":215211,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215216,"byte_end":215228,"line_start":196,"line_end":196,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215233,"byte_end":215236,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This method may panic in a few situations, depending on the specific sink:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215241,"byte_end":215319,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215324,"byte_end":215327,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ - It is called outside of the context of a task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215332,"byte_end":215384,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ - A previous call to `start_send` or `poll_complete` yielded an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215389,"byte_end":215463,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215468,"byte_end":215471,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Compatibility nodes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215476,"byte_end":215501,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215506,"byte_end":215509,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The name of this method may be slightly misleading as the original","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215514,"byte_end":215584,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ intention was to have this method be more general than just flushing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215589,"byte_end":215661,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ requests. Over time though it was decided to trim back the ambitions of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215666,"byte_end":215741,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ this method to what it's always done, just flushing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215746,"byte_end":215802,"line_start":208,"line_end":208,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215807,"byte_end":215810,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ In the 0.2 release series of futures this method will be renamed to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215815,"byte_end":215886,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ `poll_flush`. For 0.1, however, the breaking change is not happening","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215891,"byte_end":215963,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ yet.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":215968,"byte_end":215976,"line_start":212,"line_end":212,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219376,"byte_end":219381,"line_start":281,"line_end":281,"column_start":8,"column_end":13},"name":"close","qualname":"::sink::Sink::close","value":"fn (&mut self) -> Poll<(), Self::SinkError>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" A method to indicate that no more values will ever be pushed into this\n sink.","sig":null,"attributes":[{"value":"/ A method to indicate that no more values will ever be pushed into this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216044,"byte_end":216118,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216123,"byte_end":216132,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216137,"byte_end":216140,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method is used to indicate that a sink will no longer even be given","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216145,"byte_end":216221,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ another value by the caller. That is, the `start_send` method above will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216226,"byte_end":216302,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ be called no longer (nor `poll_complete`). This method is intended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216307,"byte_end":216380,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/ model \"graceful shutdown\" in various protocols where the intent to shut","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216385,"byte_end":216460,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ down is followed by a little more blocking work.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216465,"byte_end":216517,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216522,"byte_end":216525,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Callers of this function should work it it in a similar fashion to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216530,"byte_end":216600,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ `poll_complete`. Once called it may return `NotReady` which indicates","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216605,"byte_end":216678,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ that more external work needs to happen to make progress. The current","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216683,"byte_end":216756,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ task will be scheduled to receive a notification in such an event,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216761,"byte_end":216831,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ however.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216836,"byte_end":216848,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216853,"byte_end":216856,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that this function will imply `poll_complete` above. That is, if a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216861,"byte_end":216936,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ sink has buffered data, then it'll be flushed out during a `close`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":216941,"byte_end":217011,"line_start":231,"line_end":231,"column_start":5,"column_end":75}},{"value":"/ operation. It is not necessary to have `poll_complete` return `Ready`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217016,"byte_end":217089,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ before a `close` is called. Once a `close` is called, though,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217094,"byte_end":217159,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ `poll_complete` cannot be called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217164,"byte_end":217201,"line_start":234,"line_end":234,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217206,"byte_end":217209,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217214,"byte_end":217232,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217237,"byte_end":217240,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function, like `poll_complete`, returns a `Poll`. The value is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217245,"byte_end":217316,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ `Ready` once the close operation has completed. At that point it should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217321,"byte_end":217396,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ be safe to drop the sink and deallocate associated resources.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217401,"byte_end":217466,"line_start":240,"line_end":240,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217471,"byte_end":217474,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If the value returned is `NotReady` then the sink is not yet closed and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217479,"byte_end":217554,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ work needs to be done to close it. The work has been scheduled and the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217559,"byte_end":217633,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/ current task will receive a notification when it's next ready to call","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217638,"byte_end":217711,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ this method again.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217716,"byte_end":217738,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217743,"byte_end":217746,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Finally, this function may also return an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217751,"byte_end":217803,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217808,"byte_end":217811,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217816,"byte_end":217828,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217833,"byte_end":217836,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This function will return an `Err` if any operation along the way during","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217841,"byte_end":217917,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ the close operation fails. An error typically is fatal for a sink and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":217922,"byte_end":217998,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ unable to be recovered from, but in specific situations this may not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218003,"byte_end":218075,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/ always be true.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218080,"byte_end":218099,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218104,"byte_end":218107,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Note that it's also typically an error to call `start_send` or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218112,"byte_end":218178,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/ `poll_complete` after the `close` function is called. This method will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218183,"byte_end":218257,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ *initiate* a close, and continuing to send values after that (or attempt","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218262,"byte_end":218338,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ to flush) may result in strange behavior, panics, errors, etc. Once this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218343,"byte_end":218419,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ method is called, it must be the only method called on this `Sink`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218424,"byte_end":218495,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218500,"byte_end":218503,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218508,"byte_end":218520,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218525,"byte_end":218528,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method may panic or cause panics if:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218533,"byte_end":218578,"line_start":264,"line_end":264,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218583,"byte_end":218586,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * It is called outside the context of a future's task","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218591,"byte_end":218648,"line_start":266,"line_end":266,"column_start":5,"column_end":62}},{"value":"/ * It is called and then `start_send` or `poll_complete` is called","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218653,"byte_end":218722,"line_start":267,"line_end":267,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218727,"byte_end":218730,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Compatibility notes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218735,"byte_end":218760,"line_start":269,"line_end":269,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218765,"byte_end":218768,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function is currently by default a provided function,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218773,"byte_end":218845,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ defaulted to calling `poll_complete` above. This function was added","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218850,"byte_end":218921,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ in the 0.1 series of the crate as a backwards-compatible addition. It","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":218926,"byte_end":218999,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ is intended that in the 0.2 series the method will no longer be a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219004,"byte_end":219073,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/ default method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219078,"byte_end":219097,"line_start":275,"line_end":275,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219102,"byte_end":219105,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ It is highly recommended to consider this method a required method and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219110,"byte_end":219184,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ to implement it whenever you implement `Sink` locally. It is especially","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219189,"byte_end":219264,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ crucial to be sure to close inner sinks, if applicable.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219269,"byte_end":219328,"line_start":279,"line_end":279,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219333,"byte_end":219368,"line_start":280,"line_end":280,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219983,"byte_end":219987,"line_start":296,"line_end":296,"column_start":8,"column_end":12},"name":"wait","qualname":"::sink::Sink::wait","value":"fn (self) -> Wait<Self>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Creates a new object which will produce a synchronous sink.","sig":null,"attributes":[{"value":"/ Creates a new object which will produce a synchronous sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219613,"byte_end":219676,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219681,"byte_end":219684,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The sink returned does **not** implement the `Sink` trait, and instead","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219689,"byte_end":219763,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ only has two methods: `send` and `flush`. These two methods correspond","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219768,"byte_end":219842,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ to `start_send` and `poll_complete` above except are executed in a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219847,"byte_end":219917,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ blocking fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219922,"byte_end":219943,"line_start":294,"line_end":294,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":219948,"byte_end":219975,"line_start":295,"line_end":295,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220642,"byte_end":220646,"line_start":313,"line_end":313,"column_start":8,"column_end":12},"name":"with","qualname":"::sink::Sink::with","value":"fn <U, F, Fut> (self, f: F) -> With<Self, U, F, Fut>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220075,"byte_end":220122,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220127,"byte_end":220130,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220135,"byte_end":220206,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220211,"byte_end":220262,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220267,"byte_end":220270,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *future*, which is then polled to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220275,"byte_end":220350,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ completion before passing its result down to the underlying sink. If the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220355,"byte_end":220431,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ future produces an error, that error is returned by the new sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220436,"byte_end":220505,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220510,"byte_end":220513,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220518,"byte_end":220590,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220595,"byte_end":220634,"line_start":312,"line_end":312,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221985,"byte_end":221998,"line_start":352,"line_end":352,"column_start":8,"column_end":21},"name":"with_flat_map","qualname":"::sink::Sink::with_flat_map","value":"fn <U, F, St> (self, f: F) -> WithFlatMap<Self, U, F, St>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Composes a function *in front of* the sink.","sig":null,"attributes":[{"value":"/ Composes a function *in front of* the sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220902,"byte_end":220949,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220954,"byte_end":220957,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This adapter produces a new sink that passes each value through the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":220962,"byte_end":221033,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ given function `f` before sending it to `self`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221038,"byte_end":221089,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221094,"byte_end":221097,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ To process each value, `f` produces a *stream*, of which each value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221102,"byte_end":221173,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ is passed to the underlying sink. A new value will not be accepted until","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221178,"byte_end":221254,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ the stream has been drained","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221259,"byte_end":221290,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221295,"byte_end":221298,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221303,"byte_end":221375,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::flat_map`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221380,"byte_end":221424,"line_start":332,"line_end":332,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221429,"byte_end":221432,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221437,"byte_end":221451,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/ ---","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221456,"byte_end":221463,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ Using this function with an iterator through use of the `stream::iter_ok()`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221468,"byte_end":221547,"line_start":336,"line_end":336,"column_start":5,"column_end":84}},{"value":"/ function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221552,"byte_end":221564,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221569,"byte_end":221572,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221577,"byte_end":221584,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221589,"byte_end":221617,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/ use futures::stream;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221622,"byte_end":221646,"line_start":341,"line_end":341,"column_start":5,"column_end":29}},{"value":"/ use futures::sync::mpsc;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221651,"byte_end":221679,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221684,"byte_end":221687,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::channel::<i32>(5);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221692,"byte_end":221735,"line_start":344,"line_end":344,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221740,"byte_end":221743,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let tx = tx.with_flat_map(|x| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221748,"byte_end":221783,"line_start":346,"line_end":346,"column_start":5,"column_end":40}},{"value":"/     stream::iter_ok(vec![42; x].into_iter().map(|y| y))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221788,"byte_end":221847,"line_start":347,"line_end":347,"column_start":5,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221852,"byte_end":221859,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ tx.send(5).wait().unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221864,"byte_end":221895,"line_start":349,"line_end":349,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rx.collect().wait(), Ok(vec![42, 42, 42, 42, 42]))","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221900,"byte_end":221965,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":221970,"byte_end":221977,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":222731,"byte_end":222743,"line_start":375,"line_end":375,"column_start":8,"column_end":20},"name":"sink_map_err","qualname":"::sink::Sink::sink_map_err","value":"fn <F, E> (self, f: F) -> SinkMapErr<Self, F>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Transforms the error returned by the sink.\n","sig":null,"attributes":[{"value":"/ Transforms the error returned by the sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":222677,"byte_end":222723,"line_start":374,"line_end":374,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223125,"byte_end":223138,"line_start":386,"line_end":386,"column_start":8,"column_end":21},"name":"sink_from_err","qualname":"::sink::Sink::sink_from_err","value":"fn <E> (self) -> from_err::SinkFromErr<Self, E>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Map this sink's error to any error implementing `From` for this sink's\n `Error`, returning a new sink.","sig":null,"attributes":[{"value":"/ Map this sink's error to any error implementing `From` for this sink's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":222906,"byte_end":222980,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ `Error`, returning a new sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":222985,"byte_end":223019,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223024,"byte_end":223027,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If wanting to map errors of a `Sink + Stream`, use `.sink_from_err().from_err()`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223032,"byte_end":223117,"line_start":385,"line_end":385,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223925,"byte_end":223931,"line_start":406,"line_end":406,"column_start":8,"column_end":14},"name":"buffer","qualname":"::sink::Sink::buffer","value":"fn (self, amt: usize) -> Buffer<Self>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Adds a fixed-size buffer to the current sink.","sig":null,"attributes":[{"value":"/ Adds a fixed-size buffer to the current sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223278,"byte_end":223327,"line_start":393,"line_end":393,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223332,"byte_end":223335,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The resulting sink will buffer up to `amt` items when the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223340,"byte_end":223412,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ sink is unwilling to accept additional items. Calling `poll_complete` on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223417,"byte_end":223493,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ the buffered sink will attempt to both empty the buffer and complete","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223498,"byte_end":223570,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ processing on the underlying sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223575,"byte_end":223613,"line_start":398,"line_end":398,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223618,"byte_end":223621,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the given sink, returning a wrapped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223626,"byte_end":223698,"line_start":400,"line_end":400,"column_start":5,"column_end":77}},{"value":"/ version, much like `Iterator::map`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223703,"byte_end":223742,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223747,"byte_end":223750,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `use_std` feature of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223755,"byte_end":223823,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223828,"byte_end":223885,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":223890,"byte_end":223917,"line_start":405,"line_end":405,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224219,"byte_end":224225,"line_start":416,"line_end":416,"column_start":8,"column_end":14},"name":"fanout","qualname":"::sink::Sink::fanout","value":"fn <S> (self, other: S) -> Fanout<Self, S>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" Fanout items to multiple sinks.","sig":null,"attributes":[{"value":"/ Fanout items to multiple sinks.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224040,"byte_end":224075,"line_start":412,"line_end":412,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224080,"byte_end":224083,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This adapter clones each incoming item and forwards it to both this as well as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224088,"byte_end":224170,"line_start":414,"line_end":414,"column_start":5,"column_end":87}},{"value":"/ the other sink at the same time.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224175,"byte_end":224211,"line_start":415,"line_end":415,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224763,"byte_end":224768,"line_start":430,"line_end":430,"column_start":8,"column_end":13},"name":"flush","qualname":"::sink::Sink::flush","value":"fn (self) -> Flush<Self>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" A future that completes when the sink has finished processing all\n pending requests.","sig":null,"attributes":[{"value":"/ A future that completes when the sink has finished processing all","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224452,"byte_end":224521,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/ pending requests.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224526,"byte_end":224547,"line_start":425,"line_end":425,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224552,"byte_end":224555,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The sink itself is returned after flushing is complete; this adapter is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224560,"byte_end":224635,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ intended to be used when you want to stop sending to the sink until","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224640,"byte_end":224711,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ all current requests are processed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224716,"byte_end":224755,"line_start":429,"line_end":429,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225228,"byte_end":225232,"line_start":444,"line_end":444,"column_start":8,"column_end":12},"name":"send","qualname":"::sink::Sink::send","value":"fn (self, item: Self::SinkItem) -> Send<Self>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" A future that completes after the given item has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given item has been fully processed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224858,"byte_end":224931,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224936,"byte_end":224974,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224979,"byte_end":224982,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Note that, **because of the flushing requirement, it is usually better","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":224987,"byte_end":225061,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ to batch together items to send via `send_all`, rather than flushing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225066,"byte_end":225138,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/ between each item.**","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225143,"byte_end":225167,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225172,"byte_end":225175,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ On completion, the sink is returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225180,"byte_end":225220,"line_start":443,"line_end":443,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":226089,"byte_end":226097,"line_start":464,"line_end":464,"column_start":8,"column_end":16},"name":"send_all","qualname":"::sink::Sink::send_all","value":"fn <S> (self, stream: S) -> SendAll<Self, S>","parent":{"krate":0,"index":1784},"children":[],"decl_id":null,"docs":" A future that completes after the given stream has been fully processed\n into the sink, including flushing.","sig":null,"attributes":[{"value":"/ A future that completes after the given stream has been fully processed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225348,"byte_end":225423,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ into the sink, including flushing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225428,"byte_end":225466,"line_start":451,"line_end":451,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225471,"byte_end":225474,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This future will drive the stream to keep producing items until it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225479,"byte_end":225552,"line_start":453,"line_end":453,"column_start":5,"column_end":78}},{"value":"/ exhausted, sending each item to the sink. It will complete once both the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225557,"byte_end":225633,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ stream is exhausted, the sink has received all items, the sink has been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225638,"byte_end":225713,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ flushed, and the sink has been closed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225718,"byte_end":225760,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225765,"byte_end":225768,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Doing `sink.send_all(stream)` is roughly equivalent to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225773,"byte_end":225831,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ `stream.forward(sink)`. The returned future will exhaust all items from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225836,"byte_end":225911,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ `stream` and send them to `self`, closing `self` when all items have been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225916,"byte_end":225993,"line_start":460,"line_end":460,"column_start":5,"column_end":82}},{"value":"/ received.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":225998,"byte_end":226011,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":226016,"byte_end":226019,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ On completion, the pair `(sink, source)` is returned.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":226024,"byte_end":226081,"line_start":463,"line_end":463,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281435,"byte_end":281445,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"AtomicTask","qualname":"::task_impl::atomic_task::AtomicTask","value":"AtomicTask {  }","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900}],"decl_id":null,"docs":" A synchronization primitive for task notification.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task notification.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280415,"byte_end":280469,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280470,"byte_end":280473,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `AtomicTask` will coordinate concurrent notifications with the consumer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280474,"byte_end":280549,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ potentially \"updating\" the underlying task to notify. This is useful in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280550,"byte_end":280625,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280626,"byte_end":280700,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280701,"byte_end":280781,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280782,"byte_end":280805,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280806,"byte_end":280809,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280810,"byte_end":280890,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `notify` after producing the computation (this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280891,"byte_end":280967,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":280968,"byte_end":281044,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `notify` to be called **before** `register`. This results in a no-op.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281045,"byte_end":281118,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281119,"byte_end":281122,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicTask` may be reused for any number of calls to `register` or","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281123,"byte_end":281203,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ `notify`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281204,"byte_end":281217,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281218,"byte_end":281221,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `AtomicTask` does not provide any memory ordering guarantees, as such the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281222,"byte_end":281299,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ user should use caution and use other synchronization primitives to guard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281300,"byte_end":281377,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ the result of the underlying computation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":281378,"byte_end":281423,"line_start":26,"line_end":26,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286618,"byte_end":286621,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"new","qualname":"<AtomicTask>::new","value":"fn () -> AtomicTask","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicTask` initialized with the given `Task`\n","sig":null,"attributes":[{"value":"/ Create an `AtomicTask` initialized with the given `Task`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286546,"byte_end":286606,"line_start":138,"line_end":138,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287042,"byte_end":287050,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicTask>::register","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers the current task to be notified on calls to `notify`.","sig":null,"attributes":[{"value":"/ Registers the current task to be notified on calls to `notify`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286879,"byte_end":286946,"line_start":150,"line_end":150,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286951,"byte_end":286954,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This is the same as calling `register_task` with `task::current()`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286959,"byte_end":287030,"line_start":152,"line_end":152,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":288003,"byte_end":288016,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"register_task","qualname":"<AtomicTask>::register_task","value":"fn (&self, task: Task) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers the provided task to be notified on calls to `notify`.","sig":null,"attributes":[{"value":"/ Registers the provided task to be notified on calls to `notify`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287117,"byte_end":287185,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287190,"byte_end":287193,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287198,"byte_end":287273,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `notify` that happen after","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287278,"byte_end":287354,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287359,"byte_end":287431,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287436,"byte_end":287476,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287481,"byte_end":287484,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287489,"byte_end":287563,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ calling `notify`. This will result in the `register` caller's current","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287568,"byte_end":287641,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ task being notified once.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287646,"byte_end":287675,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287680,"byte_end":287683,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287688,"byte_end":287763,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287768,"byte_end":287843,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287848,"byte_end":287924,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":287929,"byte_end":287991,"line_start":171,"line_end":171,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":290943,"byte_end":290949,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"notify","qualname":"<AtomicTask>::notify","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies the task that last called `register`.","sig":null,"attributes":[{"value":"/ Notifies the task that last called `register`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":290802,"byte_end":290852,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":290857,"byte_end":290860,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":290865,"byte_end":290931,"line_start":236,"line_end":236,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296701,"byte_end":296705,"line_start":134,"line_end":134,"column_start":15,"column_end":19},"name":"init","qualname":"::task_impl::core::init","value":"fn (get: fn() -> *mut u8, set: fn(*mut u8)) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Initialize the `futures` task system.","sig":null,"attributes":[{"value":"/ Initialize the `futures` task system.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294463,"byte_end":294504,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294505,"byte_end":294508,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This function is an unsafe low-level implementation detail typically only","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294509,"byte_end":294586,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ used by crates using `futures` in `no_std` context. Users of this crate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294587,"byte_end":294662,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ who also use the standard library never need to invoke this function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294663,"byte_end":294736,"line_start":98,"line_end":98,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294737,"byte_end":294740,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The task system in the `futures` crate relies on some notion of \"local","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294741,"byte_end":294815,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ storage\" for the running thread and/or context. The `task::current` function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294816,"byte_end":294896,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ can get invoked in any context, for example, and needs to be able to return","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294897,"byte_end":294976,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"/ a `Task`. Typically with the standard library this is supported with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294977,"byte_end":295049,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/ thread-local-storage, but this is not available in `no_std` contexts!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295050,"byte_end":295123,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295124,"byte_end":295127,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This function is provided to allow `no_std` contexts to continue to be able","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295128,"byte_end":295207,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ to use the standard task system in this crate. The functions provided here","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295208,"byte_end":295286,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ will be used as-if they were thread-local-storage getters/setters. The `get`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295287,"byte_end":295367,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ function provided is used to retrieve the current thread-local value of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295368,"byte_end":295447,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ task system's pointer, returning null if not initialized. The `set` function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295448,"byte_end":295528,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ updates the value of the pointer.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295529,"byte_end":295566,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295567,"byte_end":295570,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295571,"byte_end":295589,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295590,"byte_end":295593,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function will return whether initialization succeeded or not. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295594,"byte_end":295669,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ function can be called concurrently and only the first invocation will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295670,"byte_end":295744,"line_start":116,"line_end":116,"column_start":1,"column_end":75}},{"value":"/ succeed. If `false` is returned then the `get` and `set` pointers provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295745,"byte_end":295823,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ were *not* registered for use with the task system, but if `true` was","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295824,"byte_end":295897,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ provided then they will be called when the task system is used.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295898,"byte_end":295965,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295966,"byte_end":295969,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Note that while safe to call concurrently it's recommended to still perform","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":295970,"byte_end":296049,"line_start":121,"line_end":121,"column_start":1,"column_end":80}},{"value":"/ external synchronization when calling this function. This task system is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296050,"byte_end":296126,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ not guaranteed to be ready to go until a call to this function returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296127,"byte_end":296201,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ `true`. In other words, if you call this function and see `false`, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296202,"byte_end":296276,"line_start":124,"line_end":124,"column_start":1,"column_end":75}},{"value":"/ task system may not be ready to go as another thread may still be calling","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296277,"byte_end":296354,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `init`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296355,"byte_end":296366,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296367,"byte_end":296370,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296371,"byte_end":296385,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296386,"byte_end":296389,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe due to the requirements on the behavior of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296390,"byte_end":296464,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ `get` and `set` functions. The pointers returned from these functions must","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296465,"byte_end":296543,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ reflect the semantics specified above and must also be thread-local,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296544,"byte_end":296616,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ depending on the definition of a \"thread\" in the calling context.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":296617,"byte_end":296686,"line_start":133,"line_end":133,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4920},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327415,"byte_end":327423,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task_impl::std::data::LocalKey","value":"LocalKey { __key, __init }","parent":null,"children":[{"krate":0,"index":4922},{"krate":0,"index":4923}],"decl_id":null,"docs":" A key for task-local data stored in a future's task.","sig":null,"attributes":[{"value":"/ A key for task-local data stored in a future's task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326678,"byte_end":326734,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326735,"byte_end":326738,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro and performs very","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326739,"byte_end":326810,"line_start":47,"line_end":47,"column_start":1,"column_end":72}},{"value":"/ similarly to the `thread_local!` macro and `std::thread::LocalKey` types.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326811,"byte_end":326888,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ Data associated with a `LocalKey<T>` is stored inside of a future's task,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326889,"byte_end":326966,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ and the data is destroyed when the future is completed and the task is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326967,"byte_end":327041,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ destroyed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327042,"byte_end":327056,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327057,"byte_end":327060,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Task-local data can migrate between threads and hence requires a `Send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327061,"byte_end":327136,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ bound. Additionally, task-local data also requires the `'static` bound to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327137,"byte_end":327214,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ ensure it lives long enough. When a key is accessed for the first time the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327215,"byte_end":327293,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ task's data is initialized with the provided initialization expression to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327294,"byte_end":327371,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ the macro.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327372,"byte_end":327386,"line_start":57,"line_end":57,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":4922},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327615,"byte_end":327620,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"__key","qualname":"::task_impl::std::data::LocalKey::__key","value":"fn() -> core::any::TypeId","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327665,"byte_end":327671,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"__init","qualname":"::task_impl::std::data::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":4920},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":329064,"byte_end":329068,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Access this task-local key, running the provided closure with a\n reference to the value.","sig":null,"attributes":[{"value":"/ Access this task-local key, running the provided closure with a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328142,"byte_end":328209,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/ reference to the value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328214,"byte_end":328241,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328246,"byte_end":328249,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function will access this task-local key to retrieve the data","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328254,"byte_end":328324,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ associated with the current task and this key. If this is the first time","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328329,"byte_end":328405,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ this key has been accessed on this task, then the key will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328410,"byte_end":328475,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ initialized with the initialization expression provided at the time the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328480,"byte_end":328555,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ `task_local!` macro was called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328560,"byte_end":328595,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328600,"byte_end":328603,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be provided a shared reference to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328608,"byte_end":328675,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/ underlying data associated with this task-local-key. The data itself is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328680,"byte_end":328755,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ stored inside of the current task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328760,"byte_end":328798,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328803,"byte_end":328806,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328811,"byte_end":328823,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328828,"byte_end":328831,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function can possibly panic for a number of reasons:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328836,"byte_end":328897,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328902,"byte_end":328905,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * If there is not a current task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328910,"byte_end":328947,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ * If the initialization expression is run and it panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328952,"byte_end":329011,"line_start":112,"line_end":112,"column_start":5,"column_end":64}},{"value":"/ * If the closure provided panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":329016,"byte_end":329052,"line_start":113,"line_end":113,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4927},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333083,"byte_end":333089,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"TaskRc","qualname":"::task_impl::std::task_rc::TaskRc","value":"TaskRc {  }","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"decl_id":null,"docs":" A reference to a piece of data that's accessible only within a specific\n `Task`.","sig":null,"attributes":[{"value":"/ A reference to a piece of data that's accessible only within a specific","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332742,"byte_end":332817,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ `Task`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332818,"byte_end":332829,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332830,"byte_end":332833,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This data is `Send` even when `A` is not `Sync`, because the data stored","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332834,"byte_end":332910,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ within is accessed in a single-threaded way. The thread accessing it may","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332911,"byte_end":332987,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ change over time, if the task migrates, so `A` must be `Send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":332988,"byte_end":333054,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334043,"byte_end":334046,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<TaskRc<A>>::new","value":"fn (a: A) -> TaskRc<A>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new piece of task-local data into this task, returning a\n reference to it.","sig":null,"attributes":[{"value":"/ Inserts a new piece of task-local data into this task, returning a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333320,"byte_end":333390,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ reference to it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333395,"byte_end":333415,"line_start":77,"line_end":77,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333420,"byte_end":333423,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Ownership of the data will be transferred to the task, and the data will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333428,"byte_end":333504,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ be destroyed when the task itself is destroyed. The returned value can","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333509,"byte_end":333583,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ be passed to the `with` method to get a reference back to the original","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333588,"byte_end":333662,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333667,"byte_end":333676,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333681,"byte_end":333684,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that the returned handle is cloneable and copyable and can be sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333689,"byte_end":333764,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ to other futures which will be associated with the same task. All","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333769,"byte_end":333838,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ futures will then have access to this data when passed the reference","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333843,"byte_end":333915,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ back.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333920,"byte_end":333929,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333934,"byte_end":333937,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333942,"byte_end":333954,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333959,"byte_end":333962,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function will panic if a task is not currently running.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333967,"byte_end":334031,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334738,"byte_end":334742,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"with","qualname":"<TaskRc<A>>::with","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Operate with a reference to the underlying data.","sig":null,"attributes":[{"value":"/ Operate with a reference to the underlying data.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334190,"byte_end":334242,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334247,"byte_end":334250,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method should be passed a handle previously returned by","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334255,"byte_end":334319,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/ `Task::insert`. That handle, when passed back into this method, will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334324,"byte_end":334396,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ retrieve a reference to the original data.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334401,"byte_end":334447,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334452,"byte_end":334455,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334460,"byte_end":334472,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334477,"byte_end":334480,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method will panic if a task is not currently running or if `self`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334485,"byte_end":334559,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ does not belong to the task that is currently running. That is, if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334564,"byte_end":334634,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/ another task generated the `data` handle passed in, this method will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334639,"byte_end":334711,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ panic.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334716,"byte_end":334726,"line_start":110,"line_end":110,"column_start":5,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":298687,"byte_end":298697,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"is_in_task","qualname":"::task_impl::std::is_in_task","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the caller is running in a task (and so can use task_local!).\n","sig":null,"attributes":[{"value":"/ Return whether the caller is running in a task (and so can use task_local!).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":298599,"byte_end":298679,"line_start":30,"line_end":30,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303705,"byte_end":303716,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"poll_future","qualname":"<Spawn<F>>::poll_future","value":"fn (&mut self, unpark: Arc<Unpark>) -> Poll<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_future_notify` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303597,"byte_end":303668,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303673,"byte_end":303693,"line_start":221,"line_end":221,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304174,"byte_end":304185,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"wait_future","qualname":"<Spawn<F>>::wait_future","value":"fn (&mut self) -> Result<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the internal future to complete, blocking this thread's\n execution until it does.","sig":null,"attributes":[{"value":"/ Waits for the internal future to complete, blocking this thread's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303852,"byte_end":303921,"line_start":226,"line_end":226,"column_start":5,"column_end":74}},{"value":"/ execution until it does.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303926,"byte_end":303954,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303959,"byte_end":303962,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will call `poll_future` in a loop, waiting for the future","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303967,"byte_end":304042,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ to complete. When a future cannot make progress it will use","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304047,"byte_end":304110,"line_start":230,"line_end":230,"column_start":5,"column_end":68}},{"value":"/ `thread::park` to block the current thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304115,"byte_end":304162,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304585,"byte_end":304592,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"execute","qualname":"<Spawn<F>>::execute","value":"fn (self, exec: Arc<Executor>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304535,"byte_end":304548,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":304553,"byte_end":304573,"line_start":247,"line_end":247,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305358,"byte_end":305369,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"poll_stream","qualname":"<Spawn<S>>::poll_stream","value":"fn (&mut self, unpark: Arc<Unpark>) -> Poll<Option<S::Item>, S::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_stream_notify` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305231,"byte_end":305302,"line_start":266,"line_end":266,"column_start":5,"column_end":76}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305307,"byte_end":305327,"line_start":267,"line_end":267,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305654,"byte_end":305665,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"wait_stream","qualname":"<Spawn<S>>::wait_stream","value":"fn (&mut self) -> Option<Result<S::Item, S::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Like `wait_future`, except only waits for the next element to arrive on\n the underlying stream.\n","sig":null,"attributes":[{"value":"/ Like `wait_future`, except only waits for the next element to arrive on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305536,"byte_end":305611,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305616,"byte_end":305642,"line_start":275,"line_end":275,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306285,"byte_end":306295,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Spawn<S>>::start_send","value":"fn (&mut self, value: S::SinkItem, unpark: &Arc<Unpark>) -> StartSend<S::SinkItem, S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `start_send_notify` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306178,"byte_end":306248,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306253,"byte_end":306273,"line_start":294,"line_end":294,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306624,"byte_end":306634,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<Spawn<S>>::poll_flush","value":"fn (&mut self, unpark: &Arc<Unpark>) -> Poll<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"recommended to use `poll_flush_notify` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306498,"byte_end":306568,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306573,"byte_end":306593,"line_start":301,"line_end":301,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307112,"byte_end":307121,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"wait_send","qualname":"<Spawn<S>>::wait_send","value":"fn (&mut self, mut value: S::SinkItem) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to send `value` on this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to send `value` on this sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306801,"byte_end":306876,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306881,"byte_end":306884,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This function will send the `value` on the sink that this task wraps. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306889,"byte_end":306965,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ the sink is not ready to send the value yet then the current thread will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306970,"byte_end":307046,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ be blocked until it's able to send the value.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307051,"byte_end":307100,"line_start":312,"line_end":312,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307905,"byte_end":307915,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"wait_flush","qualname":"<Spawn<S>>::wait_flush","value":"fn (&mut self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to flush this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to flush this sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307538,"byte_end":307603,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307608,"byte_end":307611,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This function will call the underlying sink's `poll_complete` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307616,"byte_end":307688,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ until it returns that it's ready, proxying out errors upwards to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307693,"byte_end":307765,"line_start":330,"line_end":330,"column_start":5,"column_end":77}},{"value":"/ caller if one occurs.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307770,"byte_end":307795,"line_start":331,"line_end":331,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307800,"byte_end":307803,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The thread will be blocked until `poll_complete` returns that it's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307808,"byte_end":307878,"line_start":333,"line_end":333,"column_start":5,"column_end":75}},{"value":"/ ready.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":307883,"byte_end":307893,"line_start":334,"line_end":334,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308475,"byte_end":308485,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"wait_close","qualname":"<Spawn<S>>::wait_close","value":"fn (&mut self) -> Result<(), S::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until it's able to close this sink.","sig":null,"attributes":[{"value":"/ Blocks the current thread until it's able to close this sink.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308209,"byte_end":308274,"line_start":347,"line_end":347,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308279,"byte_end":308282,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function will close the sink that this task wraps. If the sink","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308287,"byte_end":308358,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/ is not ready to be close yet, then the current thread will be blocked","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308363,"byte_end":308436,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ until it's closed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308441,"byte_end":308463,"line_start":351,"line_end":351,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309200,"byte_end":309206,"line_start":373,"line_end":373,"column_start":11,"column_end":17},"name":"Unpark","qualname":"::task_impl::std::Unpark","value":"Unpark: Send + Sync","parent":null,"children":[{"krate":0,"index":2136}],"decl_id":null,"docs":" A trait which represents a sink of notifications that a future is ready to\n make progress.","sig":null,"attributes":[{"value":"/ A trait which represents a sink of notifications that a future is ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308772,"byte_end":308850,"line_start":365,"line_end":365,"column_start":1,"column_end":79}},{"value":"/ make progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308851,"byte_end":308869,"line_start":366,"line_end":366,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308870,"byte_end":308873,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ This trait is provided as an argument to the `Spawn::poll_future` and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308874,"byte_end":308947,"line_start":368,"line_end":368,"column_start":1,"column_end":74}},{"value":"/ `Spawn::poll_stream` functions. It's transitively used as part of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":308948,"byte_end":309021,"line_start":369,"line_end":369,"column_start":1,"column_end":74}},{"value":"/ `Task::unpark` method to internally deliver notifications of readiness of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309022,"byte_end":309101,"line_start":370,"line_end":370,"column_start":1,"column_end":80}},{"value":"/ future to move forward.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309102,"byte_end":309129,"line_start":371,"line_end":371,"column_start":1,"column_end":28}},{"value":"deprecated(note = \"recommended to use `Notify` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309130,"byte_end":309189,"line_start":372,"line_end":372,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309469,"byte_end":309475,"line_start":379,"line_end":379,"column_start":8,"column_end":14},"name":"unpark","qualname":"::task_impl::std::Unpark::unpark","value":"fn (&self) -> ()","parent":{"krate":0,"index":2135},"children":[],"decl_id":null,"docs":" Indicates that an associated future and/or task are ready to make\n progress.","sig":null,"attributes":[{"value":"/ Indicates that an associated future and/or task are ready to make","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309226,"byte_end":309295,"line_start":374,"line_end":374,"column_start":5,"column_end":74}},{"value":"/ progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309300,"byte_end":309313,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309318,"byte_end":309321,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Typically this means that the receiver of the notification should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309326,"byte_end":309395,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ arrange for the future to get poll'd in a prompt fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309400,"byte_end":309461,"line_start":378,"line_end":378,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310045,"byte_end":310053,"line_start":393,"line_end":393,"column_start":11,"column_end":19},"name":"Executor","qualname":"::task_impl::std::Executor","value":"Executor: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":2138}],"decl_id":null,"docs":" A trait representing requests to poll futures.","sig":null,"attributes":[{"value":"/ A trait representing requests to poll futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309487,"byte_end":309537,"line_start":382,"line_end":382,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309538,"byte_end":309541,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ This trait is an argument to the `Spawn::execute` which is used to run a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309542,"byte_end":309618,"line_start":384,"line_end":384,"column_start":1,"column_end":77}},{"value":"/ future to completion. An executor will receive requests to run a future and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309619,"byte_end":309698,"line_start":385,"line_end":385,"column_start":1,"column_end":80}},{"value":"/ an executor is responsible for ensuring that happens in a timely fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309699,"byte_end":309776,"line_start":386,"line_end":386,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309777,"byte_end":309780,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ Note that this trait is likely to be deprecated and/or renamed to avoid","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309781,"byte_end":309856,"line_start":388,"line_end":388,"column_start":1,"column_end":76}},{"value":"/ clashing with the `future::Executor` trait. If you've got a use case for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309857,"byte_end":309933,"line_start":389,"line_end":389,"column_start":1,"column_end":77}},{"value":"/ this or would like to comment on the name please let us know!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309934,"byte_end":309999,"line_start":390,"line_end":390,"column_start":1,"column_end":66}},{"value":"deprecated","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310000,"byte_end":310013,"line_start":391,"line_end":391,"column_start":1,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310014,"byte_end":310034,"line_start":392,"line_end":392,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310154,"byte_end":310161,"line_start":395,"line_end":395,"column_start":8,"column_end":15},"name":"execute","qualname":"::task_impl::std::Executor::execute","value":"fn (&self, r: Run) -> ()","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":" Requests that `Run` is executed soon on the given executor.\n","sig":null,"attributes":[{"value":"/ Requests that `Run` is executed soon on the given executor.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310083,"byte_end":310146,"line_start":394,"line_end":394,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310291,"byte_end":310294,"line_start":401,"line_end":401,"column_start":12,"column_end":15},"name":"Run","qualname":"::task_impl::std::Run","value":"Run {  }","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"decl_id":null,"docs":" Units of work submitted to an `Executor`, currently only created\n internally.\n","sig":null,"attributes":[{"value":"/ Units of work submitted to an `Executor`, currently only created","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310181,"byte_end":310249,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ internally.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310250,"byte_end":310265,"line_start":399,"line_end":399,"column_start":1,"column_end":16}},{"value":"deprecated","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310266,"byte_end":310279,"line_start":400,"line_end":400,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310619,"byte_end":310622,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"run","qualname":"<Run>::run","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Actually run the task (invoking `poll` on its future) on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Actually run the task (invoking `poll` on its future) on the current","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310519,"byte_end":310591,"line_start":414,"line_end":414,"column_start":5,"column_end":77}},{"value":"/ thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310596,"byte_end":310607,"line_start":415,"line_end":415,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315468,"byte_end":315485,"line_start":573,"line_end":573,"column_start":8,"column_end":25},"name":"with_unpark_event","qualname":"::task_impl::std::with_unpark_event","value":"fn <F, R> (event: UnparkEvent, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" For the duration of the given callback, add an \"unpark event\" to be\n triggered when the task handle is used to unpark the task.","sig":null,"attributes":[{"value":"/ For the duration of the given callback, add an \"unpark event\" to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314368,"byte_end":314439,"line_start":549,"line_end":549,"column_start":1,"column_end":72}},{"value":"/ triggered when the task handle is used to unpark the task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314440,"byte_end":314502,"line_start":550,"line_end":550,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314503,"byte_end":314506,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ Unpark events are used to pass information about what event caused a task to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314507,"byte_end":314587,"line_start":552,"line_end":552,"column_start":1,"column_end":81}},{"value":"/ be unparked. In some cases, tasks are waiting on a large number of possible","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314588,"byte_end":314667,"line_start":553,"line_end":553,"column_start":1,"column_end":80}},{"value":"/ events, and need precise information about the wakeup to avoid extraneous","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314668,"byte_end":314745,"line_start":554,"line_end":554,"column_start":1,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314746,"byte_end":314758,"line_start":555,"line_end":555,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314759,"byte_end":314762,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ Every `Task` handle comes with a set of unpark events which will fire when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314763,"byte_end":314841,"line_start":557,"line_end":557,"column_start":1,"column_end":79}},{"value":"/ `unpark` is called. When fired, these events insert an identifier into a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314842,"byte_end":314918,"line_start":558,"line_end":558,"column_start":1,"column_end":77}},{"value":"/ concurrent set, which the task can read from to determine what events","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314919,"byte_end":314992,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/ occurred.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":314993,"byte_end":315006,"line_start":560,"line_end":560,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315007,"byte_end":315010,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ This function immediately invokes the closure, `f`, but arranges things so","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315011,"byte_end":315089,"line_start":562,"line_end":562,"column_start":1,"column_end":79}},{"value":"/ that `task::park` will produce a `Task` handle that includes the given","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315090,"byte_end":315164,"line_start":563,"line_end":563,"column_start":1,"column_end":75}},{"value":"/ unpark event.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315165,"byte_end":315182,"line_start":564,"line_end":564,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315183,"byte_end":315186,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315187,"byte_end":315199,"line_start":566,"line_end":566,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315200,"byte_end":315203,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ This function will panic if a task is not currently being executed. That","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315204,"byte_end":315280,"line_start":568,"line_end":568,"column_start":1,"column_end":77}},{"value":"/ is, this method can be dangerous to call outside of an implementation of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315281,"byte_end":315357,"line_start":569,"line_end":569,"column_start":1,"column_end":77}},{"value":"/ `poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315358,"byte_end":315369,"line_start":570,"line_end":570,"column_start":1,"column_end":12}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315370,"byte_end":315439,"line_start":571,"line_end":571,"column_start":1,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315440,"byte_end":315460,"line_start":572,"line_end":572,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316228,"byte_end":316239,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"UnparkEvent","qualname":"::task_impl::std::UnparkEvent","value":"UnparkEvent {  }","parent":null,"children":[{"krate":0,"index":4989},{"krate":0,"index":4990}],"decl_id":null,"docs":" A set insertion to trigger upon `unpark`.","sig":null,"attributes":[{"value":"/ A set insertion to trigger upon `unpark`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315818,"byte_end":315863,"line_start":588,"line_end":588,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315864,"byte_end":315867,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ Unpark events are used to communicate information about *why* an unpark","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315868,"byte_end":315943,"line_start":590,"line_end":590,"column_start":1,"column_end":76}},{"value":"/ occurred, in particular populating sets with event identifiers so that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":315944,"byte_end":316022,"line_start":591,"line_end":591,"column_start":1,"column_end":79}},{"value":"/ unparked task can avoid extraneous polling. See `with_unpark_event` for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316023,"byte_end":316098,"line_start":592,"line_end":592,"column_start":1,"column_end":76}},{"value":"/ more.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316099,"byte_end":316108,"line_start":593,"line_end":593,"column_start":1,"column_end":10}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316126,"byte_end":316195,"line_start":595,"line_end":595,"column_start":1,"column_end":70}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316196,"byte_end":316216,"line_start":596,"line_end":596,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316502,"byte_end":316505,"line_start":607,"line_end":607,"column_start":12,"column_end":15},"name":"new","qualname":"<UnparkEvent>::new","value":"fn (set: Arc<EventSet>, id: usize) -> UnparkEvent","parent":null,"children":[],"decl_id":null,"docs":" Construct an unpark event that will insert `id` into `set` when\n triggered.\n","sig":null,"attributes":[{"value":"/ Construct an unpark event that will insert `id` into `set` when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316330,"byte_end":316397,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/ triggered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316402,"byte_end":316416,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"deprecated(note = \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316421,"byte_end":316490,"line_start":606,"line_end":606,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317285,"byte_end":317293,"line_start":634,"line_end":634,"column_start":11,"column_end":19},"name":"EventSet","qualname":"::task_impl::std::EventSet","value":"EventSet: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":2176}],"decl_id":null,"docs":" A concurrent set which allows for the insertion of `usize` values.","sig":null,"attributes":[{"value":"/ A concurrent set which allows for the insertion of `usize` values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316952,"byte_end":317022,"line_start":629,"line_end":629,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317023,"byte_end":317026,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ `EventSet`s are used to communicate precise information about the event(s)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317027,"byte_end":317105,"line_start":631,"line_end":631,"column_start":1,"column_end":79}},{"value":"/ that triggered a task notification. See `task::with_unpark_event` for details.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317106,"byte_end":317188,"line_start":632,"line_end":632,"column_start":1,"column_end":83}},{"value":"deprecated(since = \"0.1.18\", note =\n             \"recommended to use `FuturesUnordered` instead\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317189,"byte_end":317274,"line_start":633,"line_end":633,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317367,"byte_end":317373,"line_start":636,"line_end":636,"column_start":8,"column_end":14},"name":"insert","qualname":"::task_impl::std::EventSet::insert","value":"fn (&self, id: usize) -> ()","parent":{"krate":0,"index":2175},"children":[],"decl_id":null,"docs":" Insert the given ID into the set\n","sig":null,"attributes":[{"value":"/ Insert the given ID into the set","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317323,"byte_end":317359,"line_start":635,"line_end":635,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4993},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254145,"byte_end":254149,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Task","qualname":"::task_impl::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995},{"krate":0,"index":4996}],"decl_id":null,"docs":" A handle to a \"task\", which represents a single lightweight \"thread\" of\n execution driving a future to completion.","sig":null,"attributes":[{"value":"/ A handle to a \"task\", which represents a single lightweight \"thread\" of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252622,"byte_end":252697,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ execution driving a future to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252698,"byte_end":252743,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252744,"byte_end":252747,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ In general, futures are composed into large units of work, which are then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252748,"byte_end":252825,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ spawned as tasks onto an *executor*. The executor is responsible for polling","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252826,"byte_end":252906,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ the future as notifications arrive, until the future terminates.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252907,"byte_end":252975,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252976,"byte_end":252979,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This is obtained by the `task::current` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":252980,"byte_end":253033,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253034,"byte_end":253037,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # FAQ","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253038,"byte_end":253047,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253048,"byte_end":253051,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Why does `Task` not implement `Eq` and `Hash`?","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253052,"byte_end":253106,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253107,"byte_end":253110,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A valid use case for `Task` to implement these two traits has not been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253111,"byte_end":253185,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ encountered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253186,"byte_end":253202,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253203,"byte_end":253206,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Usually, this question is asked by someone who wants to store a `Task`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253207,"byte_end":253281,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ instance in a `HashSet`. This seems like an obvious way to implement a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253282,"byte_end":253356,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ future aware, multi-handle structure; e.g. a multi-producer channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253357,"byte_end":253429,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253430,"byte_end":253433,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ In this case, the idea is that whenever a `start_send` is called on one of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253434,"byte_end":253512,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ the channel's send handles, if the channel is at capacity, the current task","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253513,"byte_end":253592,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ is stored in a set. Then, when capacity is available, a task is removed from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253593,"byte_end":253673,"line_start":74,"line_end":74,"column_start":1,"column_end":81}},{"value":"/ the set and notified.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253674,"byte_end":253699,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253700,"byte_end":253703,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The problem with this strategy is that multiple `Sender` handles can be used","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253704,"byte_end":253784,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ on the same task. In this case, when the second handle is used and the task","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253785,"byte_end":253864,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/ is stored in a set, there already is an entry. Then, when the first","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253865,"byte_end":253936,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ handle is dropped, this entry is cleared, resulting in a dead lock.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":253937,"byte_end":254008,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254009,"byte_end":254012,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [here](https://github.com/rust-lang-nursery/futures-rs/issues/670) for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254013,"byte_end":254091,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ more discussion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254092,"byte_end":254112,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254113,"byte_end":254116,"line_start":84,"line_end":84,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255414,"byte_end":255421,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"current","qualname":"::task_impl::current","value":"fn () -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task to call `notify` at a later date.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task to call `notify` at a later date.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254275,"byte_end":254349,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254350,"byte_end":254353,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ The returned handle implements the `Send` and `'static` bounds and may also","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254354,"byte_end":254433,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ be cheaply cloned. This is useful for squirreling away the handle into a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254434,"byte_end":254510,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ location which is then later signaled that a future can make progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254511,"byte_end":254585,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254586,"byte_end":254589,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Implementations of the `Future` trait typically use this function if they","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254590,"byte_end":254667,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/ would otherwise perform a blocking operation. When something isn't ready","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254668,"byte_end":254744,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ yet, this `current` function is called to acquire a handle to the current","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254745,"byte_end":254822,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ task, and then the future arranges it such that when the blocking operation","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254823,"byte_end":254902,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/ otherwise finishes (perhaps in the background) it will `notify` the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254903,"byte_end":254974,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ returned handle.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254975,"byte_end":254995,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254996,"byte_end":254999,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ It's sometimes necessary to pass extra information to the task when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255000,"byte_end":255071,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ unparking it, so that the task knows something about *why* it was woken.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255072,"byte_end":255148,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ See the `FutureQueue` documentation for details on how to do this.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255149,"byte_end":255219,"line_start":110,"line_end":110,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255220,"byte_end":255223,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255224,"byte_end":255236,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255237,"byte_end":255240,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function will panic if a task is not currently being executed. That","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255241,"byte_end":255317,"line_start":114,"line_end":114,"column_start":1,"column_end":77}},{"value":"/ is, this method can be dangerous to call outside of an implementation of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255318,"byte_end":255394,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ `poll`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255395,"byte_end":255406,"line_start":116,"line_end":116,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255742,"byte_end":255746,"line_start":132,"line_end":132,"column_start":8,"column_end":12},"name":"park","qualname":"::task_impl::park","value":"fn () -> Task","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `current`\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255690,"byte_end":255734,"line_start":131,"line_end":131,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256268,"byte_end":256274,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"notify","qualname":"<Task>::notify","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Indicate that the task should attempt to poll its future in a timely\n fashion.","sig":null,"attributes":[{"value":"/ Indicate that the task should attempt to poll its future in a timely","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255792,"byte_end":255864,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255869,"byte_end":255881,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255886,"byte_end":255889,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ It's typically guaranteed that, after calling `notify`, `poll` will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255894,"byte_end":255965,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ be called at least once subsequently (unless the future has terminated).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255970,"byte_end":256046,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ If the task is currently polling its future when `notify` is called, it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256051,"byte_end":256126,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ must poll the future *again* afterwards, ensuring that all relevant","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256131,"byte_end":256202,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ events are eventually observed by the future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256207,"byte_end":256256,"line_start":144,"line_end":144,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256429,"byte_end":256435,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Task>::unpark","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `notify`\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256374,"byte_end":256417,"line_start":151,"line_end":151,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258591,"byte_end":258601,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"is_current","qualname":"<Task>::is_current","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` when called from within the context of the task.","sig":null,"attributes":[{"value":"/ Returns `true` when called from within the context of the task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256478,"byte_end":256545,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256550,"byte_end":256553,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ In other words, the task is currently running on the thread calling the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256558,"byte_end":256633,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ function. Note that this is currently, and has historically, been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256638,"byte_end":256707,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ implemented by tracking an `id` on every instance of `Spawn` created.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256712,"byte_end":256785,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ When a `Spawn` is being polled it stores in thread-local-storage the id","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256790,"byte_end":256865,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of the instance, and then `task::current` will return a `Task` that also","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256870,"byte_end":256946,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ stores this id.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256951,"byte_end":256970,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256975,"byte_end":256978,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The intention of this function was to answer questions like \"if I","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":256983,"byte_end":257052,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ `notify` this task, is it equivalent to `task::current().notify()`?\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257057,"byte_end":257129,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ The answer \"yes\" may be able to avoid some extra work to block the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257134,"byte_end":257204,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ current task, such as sending a task along a channel or updating a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257209,"byte_end":257279,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ stored `Task` somewhere. An answer of \"no\" typically results in doing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257284,"byte_end":257357,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ the work anyway.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257362,"byte_end":257382,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257387,"byte_end":257390,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Unfortunately this function has been somewhat buggy in the past and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257395,"byte_end":257469,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ not intended to be supported in the future. By simply matching `id` the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257474,"byte_end":257549,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ intended question above isn't accurately taking into account, for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257554,"byte_end":257623,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ example, unpark events (now deprecated, but still a feature). Thus many","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257628,"byte_end":257703,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ old users of this API weren't fully accounting for the question it was","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257708,"byte_end":257782,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ intended they were asking.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257787,"byte_end":257817,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257822,"byte_end":257825,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This API continues to be implemented but will in the future, e.g. in the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257830,"byte_end":257906,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ 0.1.x series of this crate, eventually return `false` unconditionally.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257911,"byte_end":257985,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ It is intended that this function will be removed in the next breaking","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":257990,"byte_end":258064,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ change of this crate. If you'd like to continue to be able to answer the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258069,"byte_end":258145,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ example question above, it's recommended you use the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258150,"byte_end":258206,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/ `will_notify_current` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258211,"byte_end":258244,"line_start":184,"line_end":184,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258249,"byte_end":258252,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If you've got questions about this though please let us know! We'd like","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258257,"byte_end":258332,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to learn about other use cases here that we did not consider.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258337,"byte_end":258402,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258407,"byte_end":258410,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258415,"byte_end":258427,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258432,"byte_end":258435,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function will panic if no current future is being polled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258440,"byte_end":258506,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"deprecated(note = \"intended to be removed, see docs for details\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258511,"byte_end":258579,"line_start":192,"line_end":192,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259674,"byte_end":259693,"line_start":216,"line_end":216,"column_start":12,"column_end":31},"name":"will_notify_current","qualname":"<Task>::will_notify_current","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This function is intended as a performance optimization for structures\n which store a `Task` internally.","sig":null,"attributes":[{"value":"/ This function is intended as a performance optimization for structures","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258676,"byte_end":258750,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ which store a `Task` internally.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258755,"byte_end":258791,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258796,"byte_end":258799,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The purpose of this function is to answer the question \"if I `notify`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258804,"byte_end":258877,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ this task is it equivalent to `task::current().notify()`\". An answer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258882,"byte_end":258954,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ \"yes\" may mean that you don't actually need to call `task::current()`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":258959,"byte_end":259032,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ and store it, but rather you can simply leave a stored task in place. An","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259037,"byte_end":259113,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ answer of \"no\" typically means that you need to call `task::current()`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259118,"byte_end":259192,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ and store it somewhere.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259197,"byte_end":259224,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259229,"byte_end":259232,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ As this is purely a performance optimization a valid implementation for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259237,"byte_end":259312,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ this function is to always return `false`. A best effort is done to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259317,"byte_end":259388,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ return `true` where possible, but false negatives may happen. Note that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259393,"byte_end":259468,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ this function will not return a false positive, however.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259473,"byte_end":259533,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259538,"byte_end":259541,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259546,"byte_end":259558,"line_start":212,"line_end":212,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259563,"byte_end":259566,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This function will panic if no current future is being polled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259571,"byte_end":259637,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"allow(deprecated)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259642,"byte_end":259662,"line_start":215,"line_end":215,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260571,"byte_end":260576,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"Spawn","qualname":"::task_impl::Spawn","value":"Spawn {  }","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"decl_id":null,"docs":" Representation of a spawned future/stream.","sig":null,"attributes":[{"value":"/ Representation of a spawned future/stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260014,"byte_end":260060,"line_start":231,"line_end":231,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260061,"byte_end":260064,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ This object is returned by the `spawn` function in this module. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260065,"byte_end":260137,"line_start":233,"line_end":233,"column_start":1,"column_end":73}},{"value":"/ represents a \"fused task and future\", storing all necessary pieces of a task","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260138,"byte_end":260218,"line_start":234,"line_end":234,"column_start":1,"column_end":81}},{"value":"/ and owning the top-level future that's being driven as well.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260219,"byte_end":260283,"line_start":235,"line_end":235,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260284,"byte_end":260287,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ A `Spawn` can be poll'd for completion or execution of the current thread","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260288,"byte_end":260365,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ can be blocked indefinitely until a notification arrives. This can be used","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260366,"byte_end":260444,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ with either futures or streams, with different methods being available on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260445,"byte_end":260522,"line_start":239,"line_end":239,"column_start":1,"column_end":78}},{"value":"/ `Spawn` depending which is used.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260523,"byte_end":260559,"line_start":240,"line_end":240,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261165,"byte_end":261170,"line_start":257,"line_end":257,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task_impl::spawn","value":"fn <T> (obj: T) -> Spawn<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future or stream, returning it and the new task responsible for\n running it to completion.","sig":null,"attributes":[{"value":"/ Spawns a future or stream, returning it and the new task responsible for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260640,"byte_end":260716,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ running it to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260717,"byte_end":260746,"line_start":248,"line_end":248,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260747,"byte_end":260750,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ This function is the termination endpoint for running futures. This method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260751,"byte_end":260829,"line_start":250,"line_end":250,"column_start":1,"column_end":79}},{"value":"/ will conceptually allocate a new task to run the given object, which is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260830,"byte_end":260905,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ normally either a `Future` or `Stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260906,"byte_end":260949,"line_start":252,"line_end":252,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260950,"byte_end":260953,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ This function is similar to the `thread::spawn` function but does not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":260954,"byte_end":261027,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/ attempt to run code in the background. The future will not make progress","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261028,"byte_end":261104,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ until the methods on `Spawn` are called in turn.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261105,"byte_end":261157,"line_start":256,"line_end":256,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261397,"byte_end":261404,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spawn<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a shared reference to the object the Spawn is wrapping.\n","sig":null,"attributes":[{"value":"/ Get a shared reference to the object the Spawn is wrapping.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261322,"byte_end":261385,"line_start":266,"line_end":266,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261525,"byte_end":261532,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spawn<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the object the Spawn is wrapping.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the object the Spawn is wrapping.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261449,"byte_end":261513,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261650,"byte_end":261660,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spawn<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consume the Spawn, returning its inner object\n","sig":null,"attributes":[{"value":"/ Consume the Spawn, returning its inner object","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261589,"byte_end":261638,"line_start":276,"line_end":276,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261830,"byte_end":261844,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"poll_fn_notify","qualname":"<Spawn<T>>::poll_fn_notify","value":"fn <N, F, R> (&mut self, notify: &N, id: usize, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Calls the provided closure, scheduling notifications to be sent to the\n `notify` argument.\n","sig":null,"attributes":[{"value":"/ Calls the provided closure, scheduling notifications to be sent to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261717,"byte_end":261791,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/ `notify` argument.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261796,"byte_end":261818,"line_start":282,"line_end":282,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263780,"byte_end":263798,"line_start":323,"line_end":323,"column_start":12,"column_end":30},"name":"poll_future_notify","qualname":"<Spawn<T>>::poll_future_notify","value":"fn <N> (&mut self, notify: &N, id: usize) -> Poll<T::Item, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Polls the internal future, scheduling notifications to be sent to the\n `notify` argument.","sig":null,"attributes":[{"value":"/ Polls the internal future, scheduling notifications to be sent to the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262181,"byte_end":262254,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/ `notify` argument.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262259,"byte_end":262281,"line_start":295,"line_end":295,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262286,"byte_end":262289,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ This method will poll the internal future, testing if it's completed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262294,"byte_end":262366,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ yet. The `notify` argument is used as a sink for notifications sent to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262371,"byte_end":262445,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ this future. That is, while the future is being polled, any call to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262450,"byte_end":262521,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ `task::current()` will return a handle that contains the `notify`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262526,"byte_end":262595,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ specified.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262600,"byte_end":262614,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262619,"byte_end":262622,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ If this function returns `NotReady`, then the `notify` should have been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262627,"byte_end":262702,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ scheduled to receive a notification when poll can be called again.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262707,"byte_end":262777,"line_start":304,"line_end":304,"column_start":5,"column_end":75}},{"value":"/ Otherwise if `Ready` or `Err` is returned, the `Spawn` task can be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262782,"byte_end":262852,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ safely destroyed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262857,"byte_end":262878,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262883,"byte_end":262886,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Note that `notify` itself is passed as a shared reference, and is itself","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262891,"byte_end":262967,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ not required to be a `NotifyHandle`. The `Clone` and `Into` trait bounds","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":262972,"byte_end":263048,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ will be used to convert this `notify` to a `NotifyHandle` if necessary.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263053,"byte_end":263128,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ This construction can avoid an unnecessary atomic reference count bump","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263133,"byte_end":263207,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ in some situations.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263212,"byte_end":263235,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263240,"byte_end":263243,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ## Unsafety and `id`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263248,"byte_end":263272,"line_start":314,"line_end":314,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263277,"byte_end":263280,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This function and all other `*_notify` functions on this type will treat","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263285,"byte_end":263361,"line_start":316,"line_end":316,"column_start":5,"column_end":81}},{"value":"/ the `id` specified very carefully, explicitly calling functions like the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263366,"byte_end":263442,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ `notify` argument's `clone_id` and `drop_id` functions. It should be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263447,"byte_end":263519,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ safe to encode a pointer itself into the `id` specified, such as an","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263524,"byte_end":263595,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/ `Arc<N>` or a `Box<N>`. The `clone_id` and `drop_id` functions are then","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263600,"byte_end":263675,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ intended to be sufficient for the memory management related to that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263680,"byte_end":263751,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/ pointer.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":263756,"byte_end":263768,"line_start":322,"line_end":322,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264148,"byte_end":264166,"line_start":333,"line_end":333,"column_start":12,"column_end":30},"name":"poll_stream_notify","qualname":"<Spawn<T>>::poll_stream_notify","value":"fn <N> (&mut self, notify: &N, id: usize) -> Poll<Option<T::Item>, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Like `poll_future_notify`, except polls the underlying stream.\n","sig":null,"attributes":[{"value":"/ Like `poll_future_notify`, except polls the underlying stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264070,"byte_end":264136,"line_start":332,"line_end":332,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264754,"byte_end":264771,"line_start":348,"line_end":348,"column_start":12,"column_end":29},"name":"start_send_notify","qualname":"<Spawn<T>>::start_send_notify","value":"fn <N> (&mut self, value: T::SinkItem, notify: &N, id: usize) -> StartSend<T::SinkItem, T::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `start_send` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `start_send` method with this task in place.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264479,"byte_end":264550,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264555,"byte_end":264558,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264563,"byte_end":264637,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264642,"byte_end":264717,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":264722,"byte_end":264742,"line_start":347,"line_end":347,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265424,"byte_end":265441,"line_start":364,"line_end":364,"column_start":12,"column_end":29},"name":"poll_flush_notify","qualname":"<Spawn<T>>::poll_flush_notify","value":"fn <N> (&mut self, notify: &N, id: usize) -> Poll<(), T::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `poll_complete` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `poll_complete` method with this task in place.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265146,"byte_end":265220,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265225,"byte_end":265228,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265233,"byte_end":265307,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265312,"byte_end":265387,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265392,"byte_end":265412,"line_start":363,"line_end":363,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266019,"byte_end":266031,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"close_notify","qualname":"<Spawn<T>>::close_notify","value":"fn <N> (&mut self, notify: &N, id: usize) -> Poll<(), T::SinkError>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying `close` method with this task in place.","sig":null,"attributes":[{"value":"/ Invokes the underlying `close` method with this task in place.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265749,"byte_end":265815,"line_start":374,"line_end":374,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265820,"byte_end":265823,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ If the underlying operation returns `NotReady` then the `notify` value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265828,"byte_end":265902,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ passed in will receive a notification when the operation is ready to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265907,"byte_end":265982,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ attempted again.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":265987,"byte_end":266007,"line_start":378,"line_end":378,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267730,"byte_end":267736,"line_start":426,"line_end":426,"column_start":11,"column_end":17},"name":"Notify","qualname":"::task_impl::Notify","value":"Notify: Send + Sync","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265}],"decl_id":null,"docs":" A trait which represents a sink of notifications that a future is ready to\n make progress.","sig":null,"attributes":[{"value":"/ A trait which represents a sink of notifications that a future is ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266879,"byte_end":266957,"line_start":411,"line_end":411,"column_start":1,"column_end":79}},{"value":"/ make progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266958,"byte_end":266976,"line_start":412,"line_end":412,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266977,"byte_end":266980,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ This trait is provided as an argument to the `Spawn::*_notify` family of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266981,"byte_end":267057,"line_start":414,"line_end":414,"column_start":1,"column_end":77}},{"value":"/ functions. It's transitively used as part of the `Task::notify` method to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267058,"byte_end":267135,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ internally deliver notifications of readiness of a future to move forward.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267136,"byte_end":267214,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267215,"byte_end":267218,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ An instance of `Notify` has one primary method, `notify`, which is given a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267219,"byte_end":267297,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/ contextual argument as to what's being notified. This contextual argument is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267298,"byte_end":267378,"line_start":419,"line_end":419,"column_start":1,"column_end":81}},{"value":"/ *also* provided to the `Spawn::*_notify` family of functions and can be used","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267379,"byte_end":267459,"line_start":420,"line_end":420,"column_start":1,"column_end":81}},{"value":"/ to reuse an instance of `Notify` across many futures.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267460,"byte_end":267517,"line_start":421,"line_end":421,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267518,"byte_end":267521,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Instances of `Notify` must be safe to share across threads, and the methods","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267522,"byte_end":267601,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/ be invoked concurrently. They must also live for the `'static` lifetime,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267602,"byte_end":267678,"line_start":424,"line_end":424,"column_start":1,"column_end":77}},{"value":"/ not containing any stack references.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267679,"byte_end":267719,"line_start":425,"line_end":425,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268622,"byte_end":268628,"line_start":444,"line_end":444,"column_start":8,"column_end":14},"name":"notify","qualname":"::task_impl::Notify::notify","value":"fn (&self, id: usize) -> ()","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Indicates that an associated future and/or task are ready to make\n progress.","sig":null,"attributes":[{"value":"/ Indicates that an associated future and/or task are ready to make","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267756,"byte_end":267825,"line_start":427,"line_end":427,"column_start":5,"column_end":74}},{"value":"/ progress.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267830,"byte_end":267843,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267848,"byte_end":267851,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Typically this means that the receiver of the notification should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267856,"byte_end":267925,"line_start":430,"line_end":430,"column_start":5,"column_end":74}},{"value":"/ arrange for the future to get poll'd in a prompt fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267930,"byte_end":267991,"line_start":431,"line_end":431,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267996,"byte_end":267999,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This method takes an `id` as an argument which was transitively passed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268004,"byte_end":268078,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ in from the original call to `Spawn::*_notify`. This id can be used to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268083,"byte_end":268157,"line_start":434,"line_end":434,"column_start":5,"column_end":79}},{"value":"/ disambiguate which precise future became ready for polling.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268162,"byte_end":268225,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268230,"byte_end":268233,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268238,"byte_end":268250,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268255,"byte_end":268258,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Since `unpark` may be invoked from arbitrary contexts, it should","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268263,"byte_end":268331,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ endeavor not to panic and to do as little work as possible. However, it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268336,"byte_end":268411,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ is not guaranteed not to panic, and callers should be wary. If a panic","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268416,"byte_end":268490,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ occurs, that panic may or may not be propagated to the end-user of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268495,"byte_end":268569,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ future that you'd otherwise wake up.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268574,"byte_end":268614,"line_start":443,"line_end":443,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269777,"byte_end":269785,"line_start":466,"line_end":466,"column_start":8,"column_end":16},"name":"clone_id","qualname":"::task_impl::Notify::clone_id","value":"fn (&self, id: usize) -> usize","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" This function is called whenever a new copy of `id` is needed.","sig":null,"attributes":[{"value":"/ This function is called whenever a new copy of `id` is needed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268653,"byte_end":268719,"line_start":446,"line_end":446,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268724,"byte_end":268727,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This is called in one of two situations:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268732,"byte_end":268776,"line_start":448,"line_end":448,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268781,"byte_end":268784,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ * A `Task` is being created through `task::current` while a future is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268789,"byte_end":268862,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/   being polled. In that case the instance of `Notify` passed in to one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268867,"byte_end":268941,"line_start":451,"line_end":451,"column_start":5,"column_end":79}},{"value":"/   of the `poll_*` functions is called with the `id` passed into the same","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":268946,"byte_end":269022,"line_start":452,"line_end":452,"column_start":5,"column_end":81}},{"value":"/   `poll_*` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269027,"byte_end":269051,"line_start":453,"line_end":453,"column_start":5,"column_end":29}},{"value":"/ * A `Task` is itself being cloned. Each `Task` contains its own id and a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269056,"byte_end":269132,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/   handle to the `Notify` behind it, and the task's `Notify` is used to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269137,"byte_end":269211,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/   clone the internal `id` to assign to the new task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269216,"byte_end":269272,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269277,"byte_end":269280,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ The `id` returned here will be stored in the `Task`-to-be and used later","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269285,"byte_end":269361,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ to pass to `notify` when the `Task::notify` function is called on that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269366,"byte_end":269440,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ `Task`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269445,"byte_end":269456,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269461,"byte_end":269464,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Note that typically this is just the identity function, passing through","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269469,"byte_end":269544,"line_start":462,"line_end":462,"column_start":5,"column_end":80}},{"value":"/ the identifier. For more unsafe situations, however, if `id` is itself a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269549,"byte_end":269625,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ pointer of some kind this can be used as a hook to \"clone\" the pointer,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269630,"byte_end":269705,"line_start":464,"line_end":464,"column_start":5,"column_end":80}},{"value":"/ depending on what that means for the specified pointer.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269710,"byte_end":269769,"line_start":465,"line_end":465,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270287,"byte_end":270294,"line_start":477,"line_end":477,"column_start":8,"column_end":15},"name":"drop_id","qualname":"::task_impl::Notify::drop_id","value":"fn (&self, id: usize) -> ()","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" All instances of `Task` store an `id` that they're going to internally\n notify with, and this function is called when the `Task` is dropped.","sig":null,"attributes":[{"value":"/ All instances of `Task` store an `id` that they're going to internally","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269837,"byte_end":269911,"line_start":470,"line_end":470,"column_start":5,"column_end":79}},{"value":"/ notify with, and this function is called when the `Task` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269916,"byte_end":269988,"line_start":471,"line_end":471,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":269993,"byte_end":269996,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ This function provides a hook for schemes which encode pointers in this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270001,"byte_end":270076,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/ `id` argument to deallocate resources associated with the pointer. It's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270081,"byte_end":270156,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ guaranteed that after this function is called the `Task` containing this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270161,"byte_end":270237,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ `id` will no longer use the `id`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270242,"byte_end":270279,"line_start":476,"line_end":476,"column_start":5,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271475,"byte_end":271486,"line_start":503,"line_end":503,"column_start":8,"column_end":19},"name":"with_notify","qualname":"::task_impl::with_notify","value":"fn <F, T, R> (notify: &T, id: usize, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets the `NotifyHandle` of the current task for the duration of the provided\n closure.","sig":null,"attributes":[{"value":"/ Sets the `NotifyHandle` of the current task for the duration of the provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270342,"byte_end":270422,"line_start":482,"line_end":482,"column_start":1,"column_end":81}},{"value":"/ closure.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270423,"byte_end":270435,"line_start":483,"line_end":483,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270436,"byte_end":270439,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ This function takes a type that can be converted into a notify handle,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270440,"byte_end":270514,"line_start":485,"line_end":485,"column_start":1,"column_end":75}},{"value":"/ `notify` and `id`, and a closure `f`. The closure `f` will be executed such","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270515,"byte_end":270594,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/ that calls to `task::current()` will store a reference to the notify handle","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270595,"byte_end":270674,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/ provided, not the one previously in the environment.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270675,"byte_end":270731,"line_start":488,"line_end":488,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270732,"byte_end":270735,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `task::current()` in the closure provided *will not* be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270736,"byte_end":270814,"line_start":490,"line_end":490,"column_start":1,"column_end":79}},{"value":"/ equivalent to `task::current()` before this method is called. The two tasks","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270815,"byte_end":270894,"line_start":491,"line_end":491,"column_start":1,"column_end":80}},{"value":"/ returned will notify different handles, and the task handles pulled out","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270895,"byte_end":270970,"line_start":492,"line_end":492,"column_start":1,"column_end":76}},{"value":"/ during the duration of this closure will not notify the previous task. It's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":270971,"byte_end":271050,"line_start":493,"line_end":493,"column_start":1,"column_end":80}},{"value":"/ recommended that you call `task::current()` in some capacity before calling","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271051,"byte_end":271130,"line_start":494,"line_end":494,"column_start":1,"column_end":80}},{"value":"/ this function to ensure that calls to `task::current()` inside of this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271131,"byte_end":271205,"line_start":495,"line_end":495,"column_start":1,"column_end":75}},{"value":"/ closure can transitively wake up the outer task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271206,"byte_end":271258,"line_start":496,"line_end":496,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271259,"byte_end":271262,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271263,"byte_end":271275,"line_start":498,"line_end":498,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271276,"byte_end":271279,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ This function will panic if it is called outside the context of a future's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271280,"byte_end":271358,"line_start":500,"line_end":500,"column_start":1,"column_end":79}},{"value":"/ task. This is only valid to call once you've already entered a future via","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271359,"byte_end":271436,"line_start":501,"line_end":501,"column_start":1,"column_end":78}},{"value":"/ `Spawn::poll_*` functions.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271437,"byte_end":271467,"line_start":502,"line_end":502,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274445,"byte_end":274457,"line_start":566,"line_end":566,"column_start":18,"column_end":30},"name":"UnsafeNotify","qualname":"::task_impl::UnsafeNotify","value":"UnsafeNotify: Notify","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274}],"decl_id":null,"docs":" An unsafe trait for implementing custom forms of memory management behind a\n `Task`.","sig":null,"attributes":[{"value":"/ An unsafe trait for implementing custom forms of memory management behind a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271883,"byte_end":271962,"line_start":520,"line_end":520,"column_start":1,"column_end":80}},{"value":"/ `Task`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271963,"byte_end":271974,"line_start":521,"line_end":521,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271975,"byte_end":271978,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/ The `futures` critically relies on \"notification handles\" to extract for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":271979,"byte_end":272055,"line_start":523,"line_end":523,"column_start":1,"column_end":77}},{"value":"/ futures to contain and then later inform that they're ready to make","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272056,"byte_end":272127,"line_start":524,"line_end":524,"column_start":1,"column_end":72}},{"value":"/ progress. These handles, however, must be cheap to create and cheap","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272128,"byte_end":272199,"line_start":525,"line_end":525,"column_start":1,"column_end":72}},{"value":"/ to clone to ensure that this operation is efficient throughout the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272200,"byte_end":272270,"line_start":526,"line_end":526,"column_start":1,"column_end":71}},{"value":"/ execution of a program.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272271,"byte_end":272298,"line_start":527,"line_end":527,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272299,"byte_end":272302,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Typically this sort of memory management is done in the standard library","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272303,"byte_end":272379,"line_start":529,"line_end":529,"column_start":1,"column_end":77}},{"value":"/ with the `Arc` type. An `Arc` is relatively cheap to allocate an is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272380,"byte_end":272451,"line_start":530,"line_end":530,"column_start":1,"column_end":72}},{"value":"/ quite cheap to clone and pass around. Plus, it's 100% safe!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272452,"byte_end":272515,"line_start":531,"line_end":531,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272516,"byte_end":272519,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ When working outside the standard library, however, you don't always have","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272520,"byte_end":272597,"line_start":533,"line_end":533,"column_start":1,"column_end":78}},{"value":"/ and `Arc` type available to you. This trait, `UnsafeNotify`, is intended","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272598,"byte_end":272674,"line_start":534,"line_end":534,"column_start":1,"column_end":77}},{"value":"/ to be the \"unsafe version\" of the `Notify` trait. This trait encodes the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272675,"byte_end":272751,"line_start":535,"line_end":535,"column_start":1,"column_end":77}},{"value":"/ memory management operations of a `Task`'s notification handle, allowing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272752,"byte_end":272828,"line_start":536,"line_end":536,"column_start":1,"column_end":77}},{"value":"/ custom implementations for the memory management of a notification handle.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272829,"byte_end":272907,"line_start":537,"line_end":537,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272908,"byte_end":272911,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ Put another way, the core notification type in this library,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272912,"byte_end":272976,"line_start":539,"line_end":539,"column_start":1,"column_end":65}},{"value":"/ `NotifyHandle`, simply internally contains an instance of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":272977,"byte_end":273038,"line_start":540,"line_end":540,"column_start":1,"column_end":62}},{"value":"/ `*mut UnsafeNotify`. This \"unsafe trait object\" is then used exclusively","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273039,"byte_end":273115,"line_start":541,"line_end":541,"column_start":1,"column_end":77}},{"value":"/ to operate with, dynamically dispatching calls to clone, drop, and notify.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273116,"byte_end":273194,"line_start":542,"line_end":542,"column_start":1,"column_end":79}},{"value":"/ Critically though as a raw pointer it doesn't require a particular form","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273195,"byte_end":273270,"line_start":543,"line_end":543,"column_start":1,"column_end":76}},{"value":"/ of memory management, allowing external implementations.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273271,"byte_end":273331,"line_start":544,"line_end":544,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273332,"byte_end":273335,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ A default implementation of the `UnsafeNotify` trait is provided for the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273336,"byte_end":273412,"line_start":546,"line_end":546,"column_start":1,"column_end":77}},{"value":"/ `Arc` type in the standard library. If the `use_std` feature of this crate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273413,"byte_end":273491,"line_start":547,"line_end":547,"column_start":1,"column_end":79}},{"value":"/ is not available however, you'll be required to implement your own","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273492,"byte_end":273562,"line_start":548,"line_end":548,"column_start":1,"column_end":71}},{"value":"/ instance of this trait to pass it into `NotifyHandle::new`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273563,"byte_end":273626,"line_start":549,"line_end":549,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273627,"byte_end":273630,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ # Unsafety","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273631,"byte_end":273645,"line_start":551,"line_end":551,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273646,"byte_end":273649,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ This trait is manually encoding the memory management of the underlying","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273650,"byte_end":273725,"line_start":553,"line_end":553,"column_start":1,"column_end":76}},{"value":"/ handle, and as a result is quite unsafe to implement! Implementors of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273726,"byte_end":273799,"line_start":554,"line_end":554,"column_start":1,"column_end":74}},{"value":"/ this trait must guarantee:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273800,"byte_end":273830,"line_start":555,"line_end":555,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273831,"byte_end":273834,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ * Calls to `clone_raw` produce uniquely owned handles. It should be safe","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273835,"byte_end":273911,"line_start":557,"line_end":557,"column_start":1,"column_end":77}},{"value":"/   to drop the current handle and have the returned handle still be valid.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273912,"byte_end":273989,"line_start":558,"line_end":558,"column_start":1,"column_end":78}},{"value":"/ * Calls to `drop_raw` work with `self` as a raw pointer, deallocating","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":273990,"byte_end":274063,"line_start":559,"line_end":559,"column_start":1,"column_end":74}},{"value":"/   resources associated with it. This is a pretty unsafe operation as it's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274064,"byte_end":274141,"line_start":560,"line_end":560,"column_start":1,"column_end":78}},{"value":"/   invalidating the `self` pointer, so extreme care needs to be taken.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274142,"byte_end":274215,"line_start":561,"line_end":561,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274216,"byte_end":274219,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ In general it's recommended to review the trait documentation as well as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274220,"byte_end":274296,"line_start":563,"line_end":563,"column_start":1,"column_end":77}},{"value":"/ the implementation for `Arc` in this crate. When in doubt ping the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274297,"byte_end":274367,"line_start":564,"line_end":564,"column_start":1,"column_end":71}},{"value":"/ `futures` authors to clarify an unsafety question here.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274368,"byte_end":274427,"line_start":565,"line_end":565,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275272,"byte_end":275281,"line_start":582,"line_end":582,"column_start":15,"column_end":24},"name":"clone_raw","qualname":"::task_impl::UnsafeNotify::clone_raw","value":"fn (&self) -> NotifyHandle","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.","sig":null,"attributes":[{"value":"/ Creates a new `NotifyHandle` from this instance of `UnsafeNotify`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274472,"byte_end":274542,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274547,"byte_end":274550,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This function will create a new uniquely owned handle that under the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274555,"byte_end":274627,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ hood references the same notification instance. In other words calls","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274632,"byte_end":274704,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ to `notify` on the returned handle should be equivalent to calls to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274709,"byte_end":274780,"line_start":571,"line_end":571,"column_start":5,"column_end":76}},{"value":"/ `notify` on this handle.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274785,"byte_end":274813,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274818,"byte_end":274821,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274826,"byte_end":274840,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274845,"byte_end":274848,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This trait is unsafe to implement, as are all these methods. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274853,"byte_end":274922,"line_start":576,"line_end":576,"column_start":5,"column_end":74}},{"value":"/ method is also unsafe to call as it's asserting the `UnsafeNotify`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274927,"byte_end":274997,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ value is in a consistent state. In general it's recommended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275002,"byte_end":275068,"line_start":578,"line_end":578,"column_start":5,"column_end":71}},{"value":"/ review the trait documentation as well as the implementation for `Arc`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275073,"byte_end":275147,"line_start":579,"line_end":579,"column_start":5,"column_end":79}},{"value":"/ in this crate. When in doubt ping the `futures` authors to clarify","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275152,"byte_end":275222,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ an unsafety question here.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275227,"byte_end":275257,"line_start":581,"line_end":581,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276338,"byte_end":276346,"line_start":607,"line_end":607,"column_start":15,"column_end":23},"name":"drop_raw","qualname":"::task_impl::UnsafeNotify::drop_raw","value":"fn (&self) -> ()","parent":{"krate":0,"index":2272},"children":[],"decl_id":null,"docs":" Drops this instance of `UnsafeNotify`, deallocating resources\n associated with it.","sig":null,"attributes":[{"value":"/ Drops this instance of `UnsafeNotify`, deallocating resources","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275311,"byte_end":275376,"line_start":584,"line_end":584,"column_start":5,"column_end":70}},{"value":"/ associated with it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275381,"byte_end":275404,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275409,"byte_end":275412,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have a signature such as:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275417,"byte_end":275473,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275478,"byte_end":275481,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275486,"byte_end":275499,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/ fn drop_raw(self: *mut Self);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275504,"byte_end":275537,"line_start":590,"line_end":590,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275542,"byte_end":275549,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275554,"byte_end":275557,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Unfortunately in Rust today that signature is not object safe.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275562,"byte_end":275628,"line_start":593,"line_end":593,"column_start":5,"column_end":71}},{"value":"/ Nevertheless it's recommended to implement this function *as if* that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275633,"byte_end":275706,"line_start":594,"line_end":594,"column_start":5,"column_end":78}},{"value":"/ were its signature. As such it is not safe to call on an invalid","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275711,"byte_end":275779,"line_start":595,"line_end":595,"column_start":5,"column_end":73}},{"value":"/ pointer, nor is the validity of the pointer guaranteed after this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275784,"byte_end":275853,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ function returns.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275858,"byte_end":275879,"line_start":597,"line_end":597,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275884,"byte_end":275887,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275892,"byte_end":275906,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275911,"byte_end":275914,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ This trait is unsafe to implement, as are all these methods. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275919,"byte_end":275988,"line_start":601,"line_end":601,"column_start":5,"column_end":74}},{"value":"/ method is also unsafe to call as it's asserting the `UnsafeNotify`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":275993,"byte_end":276063,"line_start":602,"line_end":602,"column_start":5,"column_end":75}},{"value":"/ value is in a consistent state. In general it's recommended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276068,"byte_end":276134,"line_start":603,"line_end":603,"column_start":5,"column_end":71}},{"value":"/ review the trait documentation as well as the implementation for `Arc`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276139,"byte_end":276213,"line_start":604,"line_end":604,"column_start":5,"column_end":79}},{"value":"/ in this crate. When in doubt ping the `futures` authors to clarify","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276218,"byte_end":276288,"line_start":605,"line_end":605,"column_start":5,"column_end":75}},{"value":"/ an unsafety question here.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276293,"byte_end":276323,"line_start":606,"line_end":606,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277654,"byte_end":277666,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"NotifyHandle","qualname":"::task_impl::NotifyHandle","value":"NotifyHandle {  }","parent":null,"children":[{"krate":0,"index":2276}],"decl_id":null,"docs":" A `NotifyHandle` is the core value through which notifications are routed\n in the `futures` crate.","sig":null,"attributes":[{"value":"/ A `NotifyHandle` is the core value through which notifications are routed","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276358,"byte_end":276435,"line_start":610,"line_end":610,"column_start":1,"column_end":78}},{"value":"/ in the `futures` crate.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276436,"byte_end":276463,"line_start":611,"line_end":611,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276464,"byte_end":276467,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ All instances of `Task` will contain a `NotifyHandle` handle internally.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276468,"byte_end":276544,"line_start":613,"line_end":613,"column_start":1,"column_end":77}},{"value":"/ This handle itself contains a trait object pointing to an instance of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276545,"byte_end":276622,"line_start":614,"line_end":614,"column_start":1,"column_end":78}},{"value":"/ `Notify` trait, allowing notifications to get routed through it.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276623,"byte_end":276691,"line_start":615,"line_end":615,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276692,"byte_end":276695,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ The `NotifyHandle` type internally does not codify any particular memory","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276696,"byte_end":276772,"line_start":617,"line_end":617,"column_start":1,"column_end":77}},{"value":"/ management strategy. Internally it contains an instance of `*mut","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276773,"byte_end":276841,"line_start":618,"line_end":618,"column_start":1,"column_end":69}},{"value":"/ UnsafeNotify`, and more details about that trait can be found on its own","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276842,"byte_end":276918,"line_start":619,"line_end":619,"column_start":1,"column_end":77}},{"value":"/ documentation. Consequently, though, the one constructor of this type,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276919,"byte_end":276993,"line_start":620,"line_end":620,"column_start":1,"column_end":75}},{"value":"/ `NotifyHandle::new`, is `unsafe` to call. It is not recommended to call","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":276994,"byte_end":277069,"line_start":621,"line_end":621,"column_start":1,"column_end":76}},{"value":"/ this constructor directly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277070,"byte_end":277100,"line_start":622,"line_end":622,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277101,"byte_end":277104,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ If you're working with the standard library then it's recommended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277105,"byte_end":277177,"line_start":624,"line_end":624,"column_start":1,"column_end":73}},{"value":"/ work with the `Arc` type. If you have a struct, `T`, which implements the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277178,"byte_end":277255,"line_start":625,"line_end":625,"column_start":1,"column_end":78}},{"value":"/ `Notify` trait, then you can construct this with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277256,"byte_end":277308,"line_start":626,"line_end":626,"column_start":1,"column_end":53}},{"value":"/ `NotifyHandle::from(t: Arc<T>)`. The coercion to `UnsafeNotify` will","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277309,"byte_end":277381,"line_start":627,"line_end":627,"column_start":1,"column_end":73}},{"value":"/ happen automatically and safely for you.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277382,"byte_end":277426,"line_start":628,"line_end":628,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277427,"byte_end":277430,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ When working externally from the standard library it's recommended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277431,"byte_end":277504,"line_start":630,"line_end":630,"column_start":1,"column_end":74}},{"value":"/ provide a similar safe constructor for your custom type as opposed to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277505,"byte_end":277578,"line_start":631,"line_end":631,"column_start":1,"column_end":74}},{"value":"/ recommending an invocation of `NotifyHandle::new` directly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277579,"byte_end":277642,"line_start":632,"line_end":632,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278308,"byte_end":278311,"line_start":651,"line_end":651,"column_start":19,"column_end":22},"name":"new","qualname":"<NotifyHandle>::new","value":"fn (inner: *mut UnsafeNotify) -> NotifyHandle","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `NotifyHandle` directly.","sig":null,"attributes":[{"value":"/ Constructs a new `NotifyHandle` directly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277801,"byte_end":277846,"line_start":641,"line_end":641,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277851,"byte_end":277854,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Note that most code will not need to call this. Implementers of the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277859,"byte_end":277930,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/ `UnsafeNotify` trait will typically provide a wrapper that calls this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277935,"byte_end":278008,"line_start":644,"line_end":644,"column_start":5,"column_end":78}},{"value":"/ but you otherwise shouldn't call it directly.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278013,"byte_end":278062,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278067,"byte_end":278070,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ If you're working with the standard library then it's recommended to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278075,"byte_end":278147,"line_start":647,"line_end":647,"column_start":5,"column_end":77}},{"value":"/ use the `NotifyHandle::from` function instead which works with the safe","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278152,"byte_end":278227,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"/ `Arc` type and the safe `Notify` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278232,"byte_end":278275,"line_start":649,"line_end":649,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278280,"byte_end":278289,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278488,"byte_end":278494,"line_start":656,"line_end":656,"column_start":12,"column_end":18},"name":"notify","qualname":"<NotifyHandle>::notify","value":"fn (&self, id: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invokes the underlying instance of `Notify` with the provided `id`.\n","sig":null,"attributes":[{"value":"/ Invokes the underlying instance of `Notify` with the provided `id`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278405,"byte_end":278476,"line_start":655,"line_end":655,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2329},{"krate":0,"index":2335},{"krate":0,"index":2340}],"decl_id":null,"docs":" Tasks used to drive a future computation","sig":null,"attributes":[{"value":"! Tasks used to drive a future computation","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336528,"byte_end":336572,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336573,"byte_end":336576,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! It's intended over time a particular operation (such as servicing an HTTP","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336577,"byte_end":336654,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! request) will involve many futures. This entire operation, however, can be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336655,"byte_end":336733,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! thought of as one unit, as the entire result is essentially just moving","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336734,"byte_end":336809,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! through one large state machine.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336810,"byte_end":336846,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336847,"byte_end":336850,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! A \"task\" is the unit of abstraction for what is driving this state machine","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336851,"byte_end":336929,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"! and tree of futures forward. A task is used to poll futures and schedule","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":336930,"byte_end":337006,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! futures with, and has utilities for sharing data between tasks and handles","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337007,"byte_end":337085,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"! for notifying when a future is ready. Each task also has its own set of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337086,"byte_end":337161,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! task-local data generated by `task_local!`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337162,"byte_end":337209,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337210,"byte_end":337213,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Note that libraries typically should not manage tasks themselves, but rather","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337214,"byte_end":337294,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! leave that to event loops and other \"executors\" (see the `executor` module),","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337295,"byte_end":337375,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"! or by using the `wait` method to create and execute a task directly on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337376,"byte_end":337454,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"! current thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337455,"byte_end":337474,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337475,"byte_end":337478,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! More information about the task model can be found [online at tokio.rs].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337479,"byte_end":337555,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337556,"byte_end":337559,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! [online at tokio.rs]: https://tokio.rs/docs/going-deeper-futures/futures-model/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337560,"byte_end":337643,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337644,"byte_end":337647,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337648,"byte_end":337664,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337665,"byte_end":337668,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! There is an important bare function in this module: `current`. The","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337669,"byte_end":337739,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"! `current` function returns a handle to the currently running task, panicking","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337740,"byte_end":337820,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"! if one isn't present. This handle is then used to later notify the task that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337821,"byte_end":337901,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"! it's ready to make progress through the `Task::notify` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task.rs","byte_start":337902,"byte_end":337968,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2346},{"krate":0,"index":2351}],"decl_id":null,"docs":" Executors","sig":null,"attributes":[{"value":"! Executors","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338617,"byte_end":338630,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338631,"byte_end":338634,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains tools for managing the raw execution of futures,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338635,"byte_end":338708,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! which is needed when building *executors* (places where futures can run).","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338709,"byte_end":338786,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338787,"byte_end":338790,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! More information about executors can be [found online at tokio.rs][online].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338791,"byte_end":338870,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338871,"byte_end":338874,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [online]: https://tokio.rs/docs/going-deeper-futures/tasks/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/executor.rs","byte_start":338875,"byte_end":338938,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2460},{"krate":0,"index":2691},{"krate":0,"index":2773}],"decl_id":null,"docs":" Future-aware synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7277,"byte_end":7304,"line_start":208,"line_end":208,"column_start":1,"column_end":28}},{"value":"! Future-aware synchronization","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339156,"byte_end":339188,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339189,"byte_end":339192,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module, which is modeled after `std::sync`, contains user-space","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339193,"byte_end":339265,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! synchronization tools that work with futures, streams and sinks. In","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339266,"byte_end":339337,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"! particular, these synchronizers do *not* block physical OS threads, but","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339338,"byte_end":339413,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! instead work at the task level.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339414,"byte_end":339449,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339450,"byte_end":339453,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! More information and examples of how to use these synchronization primitives","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339454,"byte_end":339534,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! can be found [online at tokio.rs].","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339535,"byte_end":339573,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339574,"byte_end":339577,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [online at tokio.rs]: https://tokio.rs/docs/going-deeper-futures/synchronization/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339578,"byte_end":339663,"line_start":11,"line_end":11,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2365},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5026},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2387},{"krate":0,"index":2393},{"krate":0,"index":5029},{"krate":0,"index":5040},{"krate":0,"index":5039},{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5031},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2404},{"krate":0,"index":2409},{"krate":0,"index":2412},{"krate":0,"index":2416},{"krate":0,"index":2420},{"krate":0,"index":2424},{"krate":0,"index":2427},{"krate":0,"index":2431},{"krate":0,"index":2435},{"krate":0,"index":2441},{"krate":0,"index":2445},{"krate":0,"index":2449},{"krate":0,"index":2454},{"krate":0,"index":2457}],"decl_id":null,"docs":" A one-shot, futures-aware channel\n","sig":null,"attributes":[{"value":"! A one-shot, futures-aware channel","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":339786,"byte_end":339823,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":5008},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340305,"byte_end":340313,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5010}],"decl_id":null,"docs":" A future representing the completion of a computation happening elsewhere in\n memory.","sig":null,"attributes":[{"value":"/ A future representing the completion of a computation happening elsewhere in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340075,"byte_end":340155,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ memory.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340156,"byte_end":340167,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340168,"byte_end":340171,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the `oneshot::channel` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340172,"byte_end":340227,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340228,"byte_end":340276,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5014},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340543,"byte_end":340549,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5016}],"decl_id":null,"docs":" Represents the completion half of a oneshot through which the result of a\n computation is signaled.","sig":null,"attributes":[{"value":"/ Represents the completion half of a oneshot through which the result of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340348,"byte_end":340425,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ computation is signaled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340426,"byte_end":340454,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340455,"byte_end":340458,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This is created by the `oneshot::channel` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":340459,"byte_end":340514,"line_start":27,"line_end":27,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2374},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343116,"byte_end":343123,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware, one-shot channel.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware, one-shot channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342328,"byte_end":342378,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342379,"byte_end":342382,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channels found in the standard library.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342383,"byte_end":342461,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Two halves are returned, the first of which is a `Sender` handle, used to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342462,"byte_end":342539,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ signal the end of a computation and provide its value. The second half is a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342540,"byte_end":342619,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ `Receiver` which implements the `Future` trait, resolving to the value that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342620,"byte_end":342699,"line_start":75,"line_end":75,"column_start":1,"column_end":80}},{"value":"/ was given to the `Sender` handle.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342700,"byte_end":342737,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342738,"byte_end":342741,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across threads/tasks.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342742,"byte_end":342810,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342811,"byte_end":342814,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342815,"byte_end":342829,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342830,"byte_end":342833,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342834,"byte_end":342841,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342842,"byte_end":342862,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ use futures::sync::oneshot;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342863,"byte_end":342894,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ use futures::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342895,"byte_end":342914,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342915,"byte_end":342918,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let (p, c) = oneshot::channel::<i32>();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342919,"byte_end":342962,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342963,"byte_end":342966,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342967,"byte_end":342989,"line_start":89,"line_end":89,"column_start":1,"column_end":23}},{"value":"/     c.map(|i| {","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":342990,"byte_end":343009,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/         println!(\"got: {}\", i);","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343010,"byte_end":343045,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/     }).wait();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343046,"byte_end":343064,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/ });","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343065,"byte_end":343072,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343073,"byte_end":343076,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ p.send(3).unwrap();","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343077,"byte_end":343100,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343101,"byte_end":343108,"line_start":96,"line_end":96,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":351969,"byte_end":351977,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"complete","qualname":"<Sender<T>>::complete","value":"fn (self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `send`\", since = \"0.1.11\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":351839,"byte_end":351898,"line_start":323,"line_end":323,"column_start":5,"column_end":64}},{"value":"cfg(feature = \"with-deprecated\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":351922,"byte_end":351957,"line_start":325,"line_end":325,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352545,"byte_end":352549,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352031,"byte_end":352083,"line_start":330,"line_end":330,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352088,"byte_end":352091,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352096,"byte_end":352168,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ `Receiver`, that the value provided is the result of the computation this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352173,"byte_end":352250,"line_start":333,"line_end":333,"column_start":5,"column_end":82}},{"value":"/ represents.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352255,"byte_end":352270,"line_start":334,"line_end":334,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352275,"byte_end":352278,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352283,"byte_end":352355,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was deallocated before","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352360,"byte_end":352434,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ this function was called, however, then `Err` is returned with the value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352439,"byte_end":352515,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ provided.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352520,"byte_end":352533,"line_start":339,"line_end":339,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353908,"byte_end":353919,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"poll_cancel","qualname":"<Sender<T>>::poll_cancel","value":"fn (&mut self) -> Poll<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether the `Receiver` this has\n paired with has gone away.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether the `Receiver` this has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352619,"byte_end":352689,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ paired with has gone away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352694,"byte_end":352724,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352729,"byte_end":352732,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352737,"byte_end":352812,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352817,"byte_end":352890,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352895,"byte_end":352911,"line_start":349,"line_end":349,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352916,"byte_end":352919,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If `Ready` is returned then it means that the `Receiver` has disappeared","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":352924,"byte_end":353000,"line_start":351,"line_end":351,"column_start":5,"column_end":81}},{"value":"/ and the result this `Sender` would otherwise produce should no longer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353005,"byte_end":353078,"line_start":352,"line_end":352,"column_start":5,"column_end":78}},{"value":"/ be produced.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353083,"byte_end":353099,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353104,"byte_end":353107,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then the `Receiver` is still alive and may be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353112,"byte_end":353187,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ able to receive a message if sent. The current task, however, is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353192,"byte_end":353260,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a notification if the corresponding `Receiver` goes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353265,"byte_end":353341,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353346,"byte_end":353355,"line_start":358,"line_end":358,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353360,"byte_end":353363,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353368,"byte_end":353380,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353385,"byte_end":353388,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Like `Future::poll`, this function will panic if it's not called from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353393,"byte_end":353466,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ within the context of a task. In other words, this should only ever be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353471,"byte_end":353545,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ called from inside another future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353550,"byte_end":353588,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353593,"byte_end":353596,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ If `Ok(Ready)` is returned then the associated `Receiver` has been","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353601,"byte_end":353671,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353676,"byte_end":353750,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353755,"byte_end":353758,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If you're calling this function from a context that does not have a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353763,"byte_end":353834,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ task, then you can use the `is_canceled` API instead.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353839,"byte_end":353896,"line_start":370,"line_end":370,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354708,"byte_end":354719,"line_start":388,"line_end":388,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has gone away.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":353993,"byte_end":354058,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/ has gone away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354063,"byte_end":354081,"line_start":376,"line_end":376,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354086,"byte_end":354089,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354094,"byte_end":354169,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354174,"byte_end":354247,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354252,"byte_end":354268,"line_start":380,"line_end":380,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354273,"byte_end":354276,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this function is intended to *not* be used in the context of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354281,"byte_end":354357,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ future. If you're implementing a future you probably want to call the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354362,"byte_end":354435,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ `poll_cancel` function which will block the current task if the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354440,"byte_end":354507,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ cancellation hasn't happened yet. This can be useful when working on a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354512,"byte_end":354586,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ non-futures related thread, though, which would otherwise panic if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354591,"byte_end":354661,"line_start":386,"line_end":386,"column_start":5,"column_end":75}},{"value":"/ `poll_cancel` were called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354666,"byte_end":354696,"line_start":387,"line_end":387,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5029},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355022,"byte_end":355030,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::sync::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>`\n is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a `Receiver<T>` whenever the corresponding `Sender<T>`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354871,"byte_end":354949,"line_start":399,"line_end":399,"column_start":1,"column_end":79}},{"value":"/ is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354950,"byte_end":354965,"line_start":400,"line_end":400,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355696,"byte_end":355701,"line_start":423,"line_end":423,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing sending any future messages.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing sending any future messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355300,"byte_end":355375,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355380,"byte_end":355383,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355388,"byte_end":355455,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. Once this method is called the normal `poll` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355460,"byte_end":355535,"line_start":420,"line_end":420,"column_start":5,"column_end":80}},{"value":"/ can be used to determine whether a message was actually sent or not. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355540,"byte_end":355615,"line_start":421,"line_end":421,"column_start":5,"column_end":80}},{"value":"/ `Canceled` is returned from `poll` then no message was sent.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355620,"byte_end":355684,"line_start":422,"line_end":422,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356240,"byte_end":356248,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355756,"byte_end":355823,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355828,"byte_end":355831,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Useful when a [`Context`](Context) is not available such as within a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355836,"byte_end":355908,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ `Drop` impl.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355913,"byte_end":355929,"line_start":430,"line_end":430,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355934,"byte_end":355937,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355942,"byte_end":356009,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356014,"byte_end":356017,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356022,"byte_end":356095,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ date) unless [`::close`](Receiver::close) has been called first.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356100,"byte_end":356168,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356173,"byte_end":356176,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356181,"byte_end":356228,"line_start":437,"line_end":437,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357120,"byte_end":357131,"line_start":468,"line_end":468,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::sync::oneshot::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":2415}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356587,"byte_end":356633,"line_start":458,"line_end":458,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356634,"byte_end":356637,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ This handle is a future representing the completion of a different future on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356638,"byte_end":356718,"line_start":460,"line_end":460,"column_start":1,"column_end":81}},{"value":"/ a separate executor. Created through the `oneshot::spawn` function this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356719,"byte_end":356794,"line_start":461,"line_end":461,"column_start":1,"column_end":76}},{"value":"/ handle will resolve when the future provided to `spawn` resolves on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356795,"byte_end":356870,"line_start":462,"line_end":462,"column_start":1,"column_end":76}},{"value":"/ `Executor` instance provided to that function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356871,"byte_end":356921,"line_start":463,"line_end":463,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356922,"byte_end":356925,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped then the future will automatically no longer be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356926,"byte_end":357003,"line_start":465,"line_end":465,"column_start":1,"column_end":78}},{"value":"/ polled and is scheduled to be dropped. This can be canceled with the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357004,"byte_end":357076,"line_start":466,"line_end":466,"column_start":1,"column_end":73}},{"value":"/ `forget` function, however.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357077,"byte_end":357108,"line_start":467,"line_end":467,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357348,"byte_end":357355,"line_start":478,"line_end":478,"column_start":12,"column_end":19},"name":"Execute","qualname":"::sync::oneshot::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":2422},{"krate":0,"index":2423}],"decl_id":null,"docs":" Type of future which `Execute` instances below must be able to spawn.\n","sig":null,"attributes":[{"value":"/ Type of future which `Execute` instances below must be able to spawn.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357263,"byte_end":357336,"line_start":477,"line_end":477,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358738,"byte_end":358743,"line_start":509,"line_end":509,"column_start":8,"column_end":13},"name":"spawn","qualname":"::sync::oneshot::spawn","value":"fn <F, E> (future: F, executor: &E) -> SpawnHandle<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `future` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the completion of the future.","sig":null,"attributes":[{"value":"/ Spawns a `future` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357441,"byte_end":357516,"line_start":483,"line_end":483,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the completion of the future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357517,"byte_end":357582,"line_start":484,"line_end":484,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357583,"byte_end":357586,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a future that is a proxy for `future` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357587,"byte_end":357666,"line_start":486,"line_end":486,"column_start":1,"column_end":80}},{"value":"/ When `future` completes on `executor` then the `SpawnHandle` will itself be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357667,"byte_end":357746,"line_start":487,"line_end":487,"column_start":1,"column_end":80}},{"value":"/ resolved.  Internally `SpawnHandle` contains a `oneshot` channel and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357747,"byte_end":357822,"line_start":488,"line_end":488,"column_start":1,"column_end":76}},{"value":"/ thus safe to send across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357823,"byte_end":357860,"line_start":489,"line_end":489,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357861,"byte_end":357864,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ The `future` will be canceled if the `SpawnHandle` is dropped. If this is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357865,"byte_end":357942,"line_start":491,"line_end":491,"column_start":1,"column_end":78}},{"value":"/ not desired then the `SpawnHandle::forget` function can be used to continue","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":357943,"byte_end":358022,"line_start":492,"line_end":492,"column_start":1,"column_end":80}},{"value":"/ running the future to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358023,"byte_end":358060,"line_start":493,"line_end":493,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358061,"byte_end":358064,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358065,"byte_end":358077,"line_start":495,"line_end":495,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358078,"byte_end":358081,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the instance of `Spawn` provided is unable to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358082,"byte_end":358159,"line_start":497,"line_end":497,"column_start":1,"column_end":78}},{"value":"/ spawn the `future` provided.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358160,"byte_end":358192,"line_start":498,"line_end":498,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358193,"byte_end":358196,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ If the provided instance of `Spawn` does not actually run `future` to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358197,"byte_end":358270,"line_start":500,"line_end":500,"column_start":1,"column_end":74}},{"value":"/ completion, then the returned handle may panic when polled. Typically this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358271,"byte_end":358349,"line_start":501,"line_end":501,"column_start":1,"column_end":79}},{"value":"/ is not a problem, though, as most instances of `Spawn` will run futures to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358350,"byte_end":358428,"line_start":502,"line_end":502,"column_start":1,"column_end":79}},{"value":"/ completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358429,"byte_end":358444,"line_start":503,"line_end":503,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358445,"byte_end":358448,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ Note that the returned future will likely panic if the `futures` provided","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358449,"byte_end":358526,"line_start":505,"line_end":505,"column_start":1,"column_end":78}},{"value":"/ panics. If a future running on an executor panics that typically means that","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358527,"byte_end":358606,"line_start":506,"line_end":506,"column_start":1,"column_end":80}},{"value":"/ the executor drops the future, which falls into the above case of not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358607,"byte_end":358680,"line_start":507,"line_end":507,"column_start":1,"column_end":74}},{"value":"/ running the future to completion essentially.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":358681,"byte_end":358730,"line_start":508,"line_end":508,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359457,"byte_end":359465,"line_start":529,"line_end":529,"column_start":8,"column_end":16},"name":"spawn_fn","qualname":"::sync::oneshot::spawn_fn","value":"fn <F, R, E> (f: F, executor: &E) -> SpawnHandle<R::Item, R::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a function `f` onto the `Spawn` instance provided `s`.","sig":null,"attributes":[{"value":"/ Spawns a function `f` onto the `Spawn` instance provided `s`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359143,"byte_end":359208,"line_start":524,"line_end":524,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359209,"byte_end":359212,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ For more information see the `spawn` function in this module. This function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359213,"byte_end":359292,"line_start":526,"line_end":526,"column_start":1,"column_end":80}},{"value":"/ is just a thin wrapper around `spawn` which will execute the closure on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359293,"byte_end":359372,"line_start":527,"line_end":527,"column_start":1,"column_end":80}},{"value":"/ executor provided and then complete the future that the closure returns.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359373,"byte_end":359449,"line_start":528,"line_end":528,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360007,"byte_end":360013,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"forget","qualname":"<SpawnHandle<T, E>>::forget","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop this future without canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drop this future without canceling the underlying future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359695,"byte_end":359756,"line_start":538,"line_end":538,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359761,"byte_end":359764,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ When `SpawnHandle` is dropped, the spawned future will be canceled as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359769,"byte_end":359842,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ well if the future hasn't already resolved. This function can be used","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359847,"byte_end":359920,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ when to drop this future but keep executing the underlying future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359925,"byte_end":359995,"line_start":542,"line_end":542,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2483},{"krate":0,"index":2491},{"krate":0,"index":5056},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":5068},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5077},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5099},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5088},{"krate":0,"index":5090},{"krate":0,"index":5102},{"krate":0,"index":5116},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5105},{"krate":0,"index":5107},{"krate":0,"index":5119},{"krate":0,"index":5138},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5127},{"krate":0,"index":5129},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":5141},{"krate":0,"index":5149},{"krate":0,"index":5152},{"krate":0,"index":5158},{"krate":0,"index":5156},{"krate":0,"index":5155},{"krate":0,"index":5160},{"krate":0,"index":5163},{"krate":0,"index":2554},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":5165},{"krate":0,"index":5168},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2587},{"krate":0,"index":2595},{"krate":0,"index":2600},{"krate":0,"index":2607},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2631},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2647},{"krate":0,"index":2652},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2662},{"krate":0,"index":2668},{"krate":0,"index":2672},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2687},{"krate":0,"index":2689},{"krate":0,"index":2690}],"decl_id":null,"docs":" A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.","sig":null,"attributes":[{"value":"! A multi-producer, single-consumer, futures-aware, FIFO queue with back pressure.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":361828,"byte_end":361912,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":361913,"byte_end":361916,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A channel can be used as a communication primitive between tasks running on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":361917,"byte_end":361996,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! `futures-rs` executors. Channel creation provides `Receiver` and `Sender`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":361997,"byte_end":362074,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! handles. `Receiver` implements `Stream` and allows a task to read values","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362075,"byte_end":362151,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! out of the channel. If there is no message to read from the channel, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362152,"byte_end":362228,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! current task will be notified when a new value is sent. `Sender` implements","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362229,"byte_end":362308,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! the `Sink` trait and allows a task to send messages into the channel. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362309,"byte_end":362385,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"! the channel is at capacity, then send will be rejected and the task will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362386,"byte_end":362465,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! notified when additional capacity is available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362466,"byte_end":362517,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362518,"byte_end":362521,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362522,"byte_end":362541,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362542,"byte_end":362545,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! When all `Sender` handles have been dropped, it is no longer possible to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362546,"byte_end":362622,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"! send values into the channel. This is considered the termination event of","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362623,"byte_end":362700,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! the stream. As such, `Sender::poll` will return `Ok(Ready(None))`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362701,"byte_end":362771,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362772,"byte_end":362775,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! If the receiver handle is dropped, then messages can no longer be read out","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362776,"byte_end":362854,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"! of the channel. In this case, a `send` will result in an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362855,"byte_end":362922,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362923,"byte_end":362926,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362927,"byte_end":362947,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362948,"byte_end":362951,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! If the `Receiver` is simply dropped, then it is possible for there to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":362952,"byte_end":363028,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! messages still in the channel that will not be processed. As such, it is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":363029,"byte_end":363105,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"! usually desirable to perform a \"clean\" shutdown. To do this, the receiver","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":363106,"byte_end":363183,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! will first call `close`, which will prevent any further messages to be sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":363184,"byte_end":363263,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"! into the channel. Then, the receiver consumes the channel to completion, at","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":363264,"byte_end":363343,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"! which point the receiver can be dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":363344,"byte_end":363388,"line_start":28,"line_end":28,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5056},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366013,"byte_end":366019,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060}],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":365868,"byte_end":365935,"line_start":89,"line_end":89,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":365936,"byte_end":365939,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":365940,"byte_end":365984,"line_start":91,"line_end":91,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5064},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366628,"byte_end":366643,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a channel which is used to send values.","sig":null,"attributes":[{"value":"/ The transmission end of a channel which is used to send values.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366481,"byte_end":366548,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366549,"byte_end":366552,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366553,"byte_end":366599,"line_start":109,"line_end":109,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5071},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367028,"byte_end":367036,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5073}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366749,"byte_end":366820,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366821,"byte_end":366824,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366825,"byte_end":366905,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366906,"byte_end":366977,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ `channel` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366978,"byte_end":366999,"line_start":121,"line_end":121,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5077},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367352,"byte_end":367369,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::UnboundedReceiver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367071,"byte_end":367142,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367143,"byte_end":367146,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This is a concrete implementation of a stream which can be used to represent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367147,"byte_end":367227,"line_start":129,"line_end":129,"column_start":1,"column_end":81}},{"value":"/ a stream of values being computed elsewhere. This is created by the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367228,"byte_end":367299,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/ `unbounded` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367300,"byte_end":367323,"line_start":131,"line_end":131,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5084},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367515,"byte_end":367524,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of a channel is\n dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of a channel is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367388,"byte_end":367459,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ dropped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367460,"byte_end":367471,"line_start":136,"line_end":136,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5102},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367616,"byte_end":367628,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::sync::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":5104}],"decl_id":null,"docs":" Error type returned from `try_send`\n","sig":null,"attributes":[{"value":"/ Error type returned from `try_send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367533,"byte_end":367572,"line_start":140,"line_end":140,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368362,"byte_end":368372,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368285,"byte_end":368350,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369257,"byte_end":369264,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the channel being full\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the channel being full","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369177,"byte_end":369245,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369506,"byte_end":369521,"line_start":220,"line_end":220,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this error is a result of the receiver being dropped\n","sig":null,"attributes":[{"value":"/ Returns true if this error is a result of the receiver being dropped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369422,"byte_end":369494,"line_start":219,"line_end":219,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369764,"byte_end":369774,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369687,"byte_end":369752,"line_start":229,"line_end":229,"column_start":5,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372781,"byte_end":372788,"line_start":335,"line_end":335,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n bounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372008,"byte_end":372082,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/ bounded capacity.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372083,"byte_end":372104,"line_start":323,"line_end":323,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372105,"byte_end":372108,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372109,"byte_end":372186,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. This","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372187,"byte_end":372261,"line_start":326,"line_end":326,"column_start":1,"column_end":75}},{"value":"/ channel is unique in that it implements back pressure to ensure that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372262,"byte_end":372338,"line_start":327,"line_end":327,"column_start":1,"column_end":77}},{"value":"/ sender never outpaces the receiver. The channel capacity is equal to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372339,"byte_end":372411,"line_start":328,"line_end":328,"column_start":1,"column_end":73}},{"value":"/ `buffer + num-senders`. In other words, each sender gets a guaranteed slot","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372412,"byte_end":372490,"line_start":329,"line_end":329,"column_start":1,"column_end":79}},{"value":"/ in the channel capacity, and on top of that there are `buffer` \"first come,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372491,"byte_end":372570,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ first serve\" slots available to all senders.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372571,"byte_end":372619,"line_start":331,"line_end":331,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372620,"byte_end":372623,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ The `Receiver` returned implements the `Stream` trait and has access to any","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372624,"byte_end":372703,"line_start":333,"line_end":333,"column_start":1,"column_end":80}},{"value":"/ number of the associated combinators for transforming the result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":372704,"byte_end":372773,"line_start":334,"line_end":334,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373722,"byte_end":373731,"line_start":354,"line_end":354,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::sync::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an in-memory channel implementation of the `Stream` trait with\n unbounded capacity.","sig":null,"attributes":[{"value":"/ Creates an in-memory channel implementation of the `Stream` trait with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373052,"byte_end":373126,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ unbounded capacity.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373127,"byte_end":373150,"line_start":343,"line_end":343,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373151,"byte_end":373154,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ This method creates a concrete implementation of the `Stream` trait which","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373155,"byte_end":373232,"line_start":345,"line_end":345,"column_start":1,"column_end":78}},{"value":"/ can be used to send values across threads in a streaming fashion. A `send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373233,"byte_end":373311,"line_start":346,"line_end":346,"column_start":1,"column_end":79}},{"value":"/ on this channel will always succeed as long as the receive half has not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373312,"byte_end":373387,"line_start":347,"line_end":347,"column_start":1,"column_end":76}},{"value":"/ been closed. If the receiver falls behind, messages will be buffered","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373388,"byte_end":373460,"line_start":348,"line_end":348,"column_start":1,"column_end":73}},{"value":"/ internally.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373461,"byte_end":373476,"line_start":349,"line_end":349,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373477,"byte_end":373480,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373481,"byte_end":373560,"line_start":351,"line_end":351,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373561,"byte_end":373637,"line_start":352,"line_end":352,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":373638,"byte_end":373714,"line_start":353,"line_end":353,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":375093,"byte_end":375101,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender<T>` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender<T>` without blocking.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374562,"byte_end":374630,"line_start":392,"line_end":392,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374635,"byte_end":374638,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This function, unlike `start_send`, is safe to call whether it's being","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374643,"byte_end":374717,"line_start":394,"line_end":394,"column_start":5,"column_end":79}},{"value":"/ called on a task or not. Note that this function, however, will *not*","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374722,"byte_end":374795,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ attempt to block the current task if the message cannot be sent.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374800,"byte_end":374868,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374873,"byte_end":374876,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374881,"byte_end":374953,"line_start":398,"line_end":398,"column_start":5,"column_end":77}},{"value":"/ only from an external thread where you've otherwise arranged to be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374958,"byte_end":375028,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ notified when the channel is no longer full.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":375033,"byte_end":375081,"line_start":400,"line_end":400,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381928,"byte_end":381938,"line_start":594,"line_end":594,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self) -> Poll<(), SendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed to be capacity to send at least one\n item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed to be capacity to send at least one","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381432,"byte_end":381525,"line_start":584,"line_end":584,"column_start":5,"column_end":98}},{"value":"/ item without waiting.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381530,"byte_end":381555,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381560,"byte_end":381563,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Async::Ready(_))` if there is sufficient capacity, or returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381568,"byte_end":381645,"line_start":587,"line_end":587,"column_start":5,"column_end":82}},{"value":"/ `Ok(Async::NotReady)` if the channel is not guaranteed to have capacity. Returns","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381650,"byte_end":381734,"line_start":588,"line_end":588,"column_start":5,"column_end":89}},{"value":"/ `Err(SendError(_))` if the receiver has been dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381739,"byte_end":381796,"line_start":589,"line_end":589,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381801,"byte_end":381804,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381809,"byte_end":381821,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381826,"byte_end":381829,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This method will panic if called from outside the context of a task or future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":381834,"byte_end":381916,"line_start":593,"line_end":593,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":382251,"byte_end":382260,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":382170,"byte_end":382239,"line_start":603,"line_end":603,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384556,"byte_end":384565,"line_start":674,"line_end":674,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384475,"byte_end":384544,"line_start":673,"line_end":673,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384953,"byte_end":384957,"line_start":685,"line_end":685,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, msg: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384621,"byte_end":384671,"line_start":678,"line_end":678,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384676,"byte_end":384679,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384684,"byte_end":384759,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384764,"byte_end":384840,"line_start":681,"line_end":681,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384845,"byte_end":384866,"line_start":682,"line_end":682,"column_start":5,"column_end":26}},{"value":"deprecated(note = \"renamed to `unbounded_send`\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384871,"byte_end":384922,"line_start":683,"line_end":683,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385304,"byte_end":385318,"line_start":694,"line_end":694,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385047,"byte_end":385097,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385102,"byte_end":385105,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385110,"byte_end":385185,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385190,"byte_end":385266,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385271,"byte_end":385292,"line_start":693,"line_end":693,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":388090,"byte_end":388095,"line_start":796,"line_end":796,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387888,"byte_end":387917,"line_start":792,"line_end":792,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387922,"byte_end":387925,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387930,"byte_end":388005,"line_start":794,"line_end":794,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":388010,"byte_end":388078,"line_start":795,"line_end":795,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395028,"byte_end":395033,"line_start":994,"line_end":994,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394826,"byte_end":394855,"line_start":990,"line_end":990,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394860,"byte_end":394863,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394868,"byte_end":394943,"line_start":992,"line_end":992,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394948,"byte_end":395016,"line_start":993,"line_end":993,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395721,"byte_end":395732,"line_start":1017,"line_end":1017,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::sync::mpsc::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395242,"byte_end":395288,"line_start":1008,"line_end":1008,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395289,"byte_end":395292,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ This handle is a stream that proxies a stream on a separate `Executor`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395293,"byte_end":395368,"line_start":1010,"line_end":1010,"column_start":1,"column_end":76}},{"value":"/ Created through the `mpsc::spawn` function, this handle will produce","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395369,"byte_end":395441,"line_start":1011,"line_end":1011,"column_start":1,"column_end":73}},{"value":"/ the same values as the proxied stream, as they are produced in the executor,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395442,"byte_end":395522,"line_start":1012,"line_end":1012,"column_start":1,"column_end":81}},{"value":"/ and uses a limited buffer to exert back-pressure on the remote stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395523,"byte_end":395597,"line_start":1013,"line_end":1013,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395598,"byte_end":395601,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped, then the stream will no longer be polled and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395602,"byte_end":395680,"line_start":1015,"line_end":1015,"column_start":1,"column_end":79}},{"value":"/ scheduled to be dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395681,"byte_end":395709,"line_start":1016,"line_end":1016,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395921,"byte_end":395928,"line_start":1023,"line_end":1023,"column_start":12,"column_end":19},"name":"Execute","qualname":"::sync::mpsc::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":2654},{"krate":0,"index":2655}],"decl_id":null,"docs":" Type of future which `Executor` instances must be able to execute for `spawn`.\n","sig":null,"attributes":[{"value":"/ Type of future which `Executor` instances must be able to execute for `spawn`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395827,"byte_end":395909,"line_start":1022,"line_end":1022,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396865,"byte_end":396870,"line_start":1045,"line_end":1045,"column_start":8,"column_end":13},"name":"spawn","qualname":"::sync::mpsc::spawn","value":"fn <S, E> (stream: S, executor: &E, buffer: usize) -> SpawnHandle<S::Item, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396088,"byte_end":396163,"line_start":1028,"line_end":1028,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396164,"byte_end":396218,"line_start":1029,"line_end":1029,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396219,"byte_end":396222,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396223,"byte_end":396289,"line_start":1031,"line_end":1031,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396290,"byte_end":396293,"line_start":1032,"line_end":1032,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396294,"byte_end":396373,"line_start":1033,"line_end":1033,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396374,"byte_end":396446,"line_start":1034,"line_end":1034,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396447,"byte_end":396488,"line_start":1035,"line_end":1035,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396489,"byte_end":396492,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ At most `buffer + 1` elements will be buffered at a time. If the buffer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396493,"byte_end":396568,"line_start":1037,"line_end":1037,"column_start":1,"column_end":76}},{"value":"/ is full, then `stream` will stop progressing until more space is available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396569,"byte_end":396648,"line_start":1038,"line_end":1038,"column_start":1,"column_end":80}},{"value":"/ This allows the `SpawnHandle` to exert backpressure on the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396649,"byte_end":396721,"line_start":1039,"line_end":1039,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396722,"byte_end":396725,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396726,"byte_end":396738,"line_start":1041,"line_end":1041,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396739,"byte_end":396742,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396743,"byte_end":396823,"line_start":1043,"line_end":1043,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":396824,"byte_end":396857,"line_start":1044,"line_end":1044,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398175,"byte_end":398190,"line_start":1079,"line_end":1079,"column_start":8,"column_end":23},"name":"spawn_unbounded","qualname":"::sync::mpsc::spawn_unbounded","value":"fn <S, E> (stream: S, executor: &E) -> SpawnHandle<S::Item, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream, with unbounded buffering.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397328,"byte_end":397403,"line_start":1061,"line_end":1061,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream, with unbounded buffering.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397404,"byte_end":397484,"line_start":1062,"line_end":1062,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397485,"byte_end":397488,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397489,"byte_end":397555,"line_start":1064,"line_end":1064,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397556,"byte_end":397559,"line_start":1065,"line_end":1065,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397560,"byte_end":397639,"line_start":1066,"line_end":1066,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397640,"byte_end":397712,"line_start":1067,"line_end":1067,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397713,"byte_end":397754,"line_start":1068,"line_end":1068,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397755,"byte_end":397758,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ An unbounded buffer is used, which means that values will be buffered as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397759,"byte_end":397835,"line_start":1070,"line_end":1070,"column_start":1,"column_end":77}},{"value":"/ fast as `stream` can produce them, without any backpressure. Therefore, if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397836,"byte_end":397914,"line_start":1071,"line_end":1071,"column_start":1,"column_end":79}},{"value":"/ `stream` is an infinite stream, it can use an unbounded amount of memory, and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397915,"byte_end":397996,"line_start":1072,"line_end":1072,"column_start":1,"column_end":82}},{"value":"/ potentially hog CPU resources.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":397997,"byte_end":398031,"line_start":1073,"line_end":1073,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398032,"byte_end":398035,"line_start":1074,"line_end":1074,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398036,"byte_end":398048,"line_start":1075,"line_end":1075,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398049,"byte_end":398052,"line_start":1076,"line_end":1076,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398053,"byte_end":398133,"line_start":1077,"line_end":1077,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398134,"byte_end":398167,"line_start":1078,"line_end":1078,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5170},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407766,"byte_end":407772,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"BiLock","qualname":"::sync::bilock::BiLock","value":"BiLock {  }","parent":null,"children":[{"krate":0,"index":5172}],"decl_id":null,"docs":" A type of futures-powered synchronization primitive which is a mutex between\n two possible owners.","sig":null,"attributes":[{"value":"/ A type of futures-powered synchronization primitive which is a mutex between","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406715,"byte_end":406795,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ two possible owners.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406796,"byte_end":406820,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406821,"byte_end":406824,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This primitive is not as generic as a full-blown mutex but is sufficient for","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406825,"byte_end":406905,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ many use cases where there are only two possible owners of a resource. The","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406906,"byte_end":406984,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ implementation of `BiLock` can be more optimized for just the two possible","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":406985,"byte_end":407063,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ owners.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407064,"byte_end":407075,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407076,"byte_end":407079,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that it's possible to use this lock through a poll-style interface with","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407080,"byte_end":407160,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ the `poll_lock` method but you can also use it as a future with the `lock`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407161,"byte_end":407239,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ method that consumes a `BiLock` and returns a future that will resolve when","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407240,"byte_end":407319,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ it's locked.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407320,"byte_end":407336,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407337,"byte_end":407340,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A `BiLock` is typically used for \"split\" operations where data which serves","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407341,"byte_end":407420,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ two purposes wants to be split into two to be worked with separately. For","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407421,"byte_end":407498,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ example a TCP stream could be both a reader and a writer or a framing layer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407499,"byte_end":407578,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ could be both a stream and a sink for messages. A `BiLock` enables splitting","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407579,"byte_end":407659,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ these two and then using each independently in a futures-powered fashion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407660,"byte_end":407737,"line_start":32,"line_end":32,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408288,"byte_end":408291,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<BiLock<T>>::new","value":"fn (t: T) -> (BiLock<T>, BiLock<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BiLock` protecting the provided data.","sig":null,"attributes":[{"value":"/ Creates a new `BiLock` protecting the provided data.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408012,"byte_end":408068,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408073,"byte_end":408076,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Two handles to the lock are returned, and these are the only two handles","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408081,"byte_end":408157,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ that will ever be available to the lock. These can then be sent to separate","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408162,"byte_end":408241,"line_start":51,"line_end":51,"column_start":5,"column_end":84}},{"value":"/ tasks to be managed there.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408246,"byte_end":408276,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409396,"byte_end":409405,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"poll_lock","qualname":"<BiLock<T>>::poll_lock","value":"fn (&self) -> Async<BiLockGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire this lock, returning `NotReady` if it can't be\n acquired.","sig":null,"attributes":[{"value":"/ Attempt to acquire this lock, returning `NotReady` if it can't be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408539,"byte_end":408608,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408613,"byte_end":408626,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408631,"byte_end":408634,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function will acquire the lock in a nonblocking fashion, returning","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408639,"byte_end":408714,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ immediately if the lock is already held. If the lock is successfully","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408719,"byte_end":408791,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ acquired then `Async::Ready` is returned with a value that represents","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408796,"byte_end":408869,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ the locked value (and can be used to access the protected data). The","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408874,"byte_end":408946,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ lock is unlocked when the returned `BiLockGuard` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":408951,"byte_end":409015,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409020,"byte_end":409023,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If the lock is already held then this function will return","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409028,"byte_end":409090,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ `Async::NotReady`. In this case the current task will also be scheduled","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409095,"byte_end":409170,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ to receive a notification when the lock would otherwise become","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409175,"byte_end":409241,"line_start":73,"line_end":73,"column_start":5,"column_end":71}},{"value":"/ available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409246,"byte_end":409260,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409265,"byte_end":409268,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409273,"byte_end":409285,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409290,"byte_end":409293,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called outside the context of a future's","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409298,"byte_end":409370,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ task.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":409375,"byte_end":409384,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411672,"byte_end":411676,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"lock","qualname":"<BiLock<T>>::lock","value":"fn (self) -> BiLockAcquire<T>","parent":null,"children":[],"decl_id":null,"docs":" Perform a \"blocking lock\" of this lock, consuming this lock handle and\n returning a future to the acquired lock.","sig":null,"attributes":[{"value":"/ Perform a \"blocking lock\" of this lock, consuming this lock handle and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411211,"byte_end":411285,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ returning a future to the acquired lock.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411290,"byte_end":411334,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411339,"byte_end":411342,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function consumes the `BiLock<T>` and returns a sentinel future,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411347,"byte_end":411420,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ `BiLockAcquire<T>`. The returned future will resolve to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411425,"byte_end":411484,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/ `BiLockAcquired<T>` which represents a locked lock similarly to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411489,"byte_end":411556,"line_start":127,"line_end":127,"column_start":5,"column_end":72}},{"value":"/ `BiLockGuard<T>`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411561,"byte_end":411582,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411587,"byte_end":411590,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that the returned future will never resolve to an error.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411595,"byte_end":411660,"line_start":130,"line_end":130,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411994,"byte_end":412001,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"reunite","qualname":"<BiLock<T>>::reunite","value":"fn (self, other: Self) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `BiLock<T>` back together and\n recover the original value. Succeeds only if the two `BiLock<T>`s\n originated from the same call to `BiLock::new`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `BiLock<T>` back together and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411781,"byte_end":411852,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/ recover the original value. Succeeds only if the two `BiLock<T>`s","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411857,"byte_end":411926,"line_start":138,"line_end":138,"column_start":5,"column_end":74}},{"value":"/ originated from the same call to `BiLock::new`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":411931,"byte_end":411982,"line_start":139,"line_end":139,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413338,"byte_end":413350,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::sync::bilock::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two `BiLock<T>`s were not two halves of a whole, and\n thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two `BiLock<T>`s were not two halves of a whole, and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413219,"byte_end":413292,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/ thus could not be `reunite`d.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413293,"byte_end":413326,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":5183},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414177,"byte_end":414188,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"BiLockGuard","qualname":"::sync::bilock::BiLockGuard","value":"BiLockGuard {  }","parent":null,"children":[{"krate":0,"index":5186}],"decl_id":null,"docs":" Returned RAII guard from the `poll_lock` method.","sig":null,"attributes":[{"value":"/ Returned RAII guard from the `poll_lock` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413922,"byte_end":413974,"line_start":206,"line_end":206,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413975,"byte_end":413978,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ This structure acts as a sentinel to the data in the `BiLock<T>` itself,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413979,"byte_end":414055,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ implementing `Deref` and `DerefMut` to `T`. When dropped, the lock will be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414056,"byte_end":414134,"line_start":209,"line_end":209,"column_start":1,"column_end":79}},{"value":"/ unlocked.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414135,"byte_end":414148,"line_start":210,"line_end":210,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5191},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414788,"byte_end":414801,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"BiLockAcquire","qualname":"::sync::bilock::BiLockAcquire","value":"BiLockAcquire {  }","parent":null,"children":[{"krate":0,"index":5193}],"decl_id":null,"docs":" Future returned by `BiLock::lock` which will resolve when the lock is\n acquired.\n","sig":null,"attributes":[{"value":"/ Future returned by `BiLock::lock` which will resolve when the lock is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414672,"byte_end":414745,"line_start":235,"line_end":235,"column_start":1,"column_end":74}},{"value":"/ acquired.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414746,"byte_end":414759,"line_start":236,"line_end":236,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5197},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415637,"byte_end":415651,"line_start":264,"line_end":264,"column_start":12,"column_end":26},"name":"BiLockAcquired","qualname":"::sync::bilock::BiLockAcquired","value":"BiLockAcquired {  }","parent":null,"children":[{"krate":0,"index":5199}],"decl_id":null,"docs":" Resolved value of the `BiLockAcquire<T>` future.","sig":null,"attributes":[{"value":"/ Resolved value of the `BiLockAcquire<T>` future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415300,"byte_end":415352,"line_start":257,"line_end":257,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415353,"byte_end":415356,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ This value, like `BiLockGuard<T>`, is a sentinel to the value `T` through","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415357,"byte_end":415434,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ implementations of `Deref` and `DerefMut`. When dropped will unlock the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415435,"byte_end":415510,"line_start":260,"line_end":260,"column_start":1,"column_end":76}},{"value":"/ lock, and the original unlocked `BiLock<T>` can be recovered through the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415511,"byte_end":415587,"line_start":261,"line_end":261,"column_start":1,"column_end":77}},{"value":"/ `unlock` method.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415588,"byte_end":415608,"line_start":262,"line_end":262,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415793,"byte_end":415799,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"unlock","qualname":"<BiLockAcquired<T>>::unlock","value":"fn (mut self) -> BiLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Recovers the original `BiLock<T>`, unlocking this lock.\n","sig":null,"attributes":[{"value":"/ Recovers the original `BiLock<T>`, unlocking this lock.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415722,"byte_end":415781,"line_start":269,"line_end":269,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unsync","qualname":"::unsync","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2918}],"decl_id":null,"docs":" Future-aware single-threaded synchronization","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7319,"byte_end":7346,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"! Future-aware single-threaded synchronization","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416449,"byte_end":416497,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416498,"byte_end":416501,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains similar abstractions to `sync`, for communications","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416502,"byte_end":416577,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! between tasks on the same thread only.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416578,"byte_end":416620,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::unsync::mpsc","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":5203},{"krate":0,"index":5209},{"krate":0,"index":5212},{"krate":0,"index":5215},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2823},{"krate":0,"index":5218},{"krate":0,"index":5221},{"krate":0,"index":5224},{"krate":0,"index":5232},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2834},{"krate":0,"index":5235},{"krate":0,"index":5239},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2847},{"krate":0,"index":2855},{"krate":0,"index":5242},{"krate":0,"index":5246},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2890},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2906},{"krate":0,"index":2910},{"krate":0,"index":2915}],"decl_id":null,"docs":" A multi-producer, single-consumer, futures-aware, FIFO queue with back\n pressure, for use communicating between tasks on the same thread.","sig":null,"attributes":[{"value":"! A multi-producer, single-consumer, futures-aware, FIFO queue with back","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":416654,"byte_end":416728,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"! pressure, for use communicating between tasks on the same thread.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":416729,"byte_end":416798,"line_start":2,"line_end":2,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":416799,"byte_end":416802,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! These queues are the same as those in `futures::sync`, except they're not","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":416803,"byte_end":416880,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! intended to be sent across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":416881,"byte_end":416920,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417638,"byte_end":417645,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"channel","qualname":"::unsync::mpsc::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded in-memory channel with buffered storage.","sig":null,"attributes":[{"value":"/ Creates a bounded in-memory channel with buffered storage.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417259,"byte_end":417321,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417322,"byte_end":417325,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This method creates concrete implementations of the `Stream` and `Sink`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417326,"byte_end":417401,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ traits which can be used to communicate a stream of values between tasks","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417402,"byte_end":417478,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ with backpressure. The channel capacity is exactly `buffer`. On average,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417479,"byte_end":417555,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ sending a message through this channel performs no dynamic allocation.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":417556,"byte_end":417630,"line_start":27,"line_end":27,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":5212},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418403,"byte_end":418409,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"Sender","qualname":"::unsync::mpsc::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5214}],"decl_id":null,"docs":" The transmission end of a channel.","sig":null,"attributes":[{"value":"/ The transmission end of a channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418285,"byte_end":418323,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418324,"byte_end":418327,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418328,"byte_end":418374,"line_start":54,"line_end":54,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":5218},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420609,"byte_end":420617,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::unsync::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5220}],"decl_id":null,"docs":" The receiving end of a channel which implements the `Stream` trait.","sig":null,"attributes":[{"value":"/ The receiving end of a channel which implements the `Stream` trait.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420458,"byte_end":420529,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420530,"byte_end":420533,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This is created by the `channel` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420534,"byte_end":420580,"line_start":128,"line_end":128,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":421120,"byte_end":421125,"line_start":147,"line_end":147,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420918,"byte_end":420947,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420952,"byte_end":420955,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420960,"byte_end":421035,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":421040,"byte_end":421108,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422880,"byte_end":422895,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::unsync::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422749,"byte_end":422798,"line_start":202,"line_end":202,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422799,"byte_end":422802,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422803,"byte_end":422851,"line_start":204,"line_end":204,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424178,"byte_end":424182,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, msg: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423846,"byte_end":423896,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423901,"byte_end":423904,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423909,"byte_end":423984,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423989,"byte_end":424065,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424070,"byte_end":424091,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"deprecated(note = \"renamed to `unbounded_send`\")","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424096,"byte_end":424147,"line_start":252,"line_end":252,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424529,"byte_end":424543,"line_start":263,"line_end":263,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"fn (&self, msg: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends the provided message along this channel.","sig":null,"attributes":[{"value":"/ Sends the provided message along this channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424272,"byte_end":424322,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424327,"byte_end":424330,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424335,"byte_end":424410,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424415,"byte_end":424491,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424496,"byte_end":424517,"line_start":262,"line_end":262,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5242},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425093,"byte_end":425110,"line_start":282,"line_end":282,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::unsync::mpsc::UnboundedReceiver","value":"","parent":null,"children":[],"decl_id":null,"docs":" The receiving end of an unbounded channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":424965,"byte_end":425011,"line_start":278,"line_end":278,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425012,"byte_end":425015,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unbounded` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425016,"byte_end":425064,"line_start":280,"line_end":280,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425366,"byte_end":425371,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half","sig":null,"attributes":[{"value":"/ Closes the receiving half","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425164,"byte_end":425193,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425198,"byte_end":425201,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425206,"byte_end":425281,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425286,"byte_end":425354,"line_start":288,"line_end":288,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425750,"byte_end":425759,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::unsync::mpsc::unbounded","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded in-memory channel with buffered storage.","sig":null,"attributes":[{"value":"/ Creates an unbounded in-memory channel with buffered storage.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425598,"byte_end":425663,"line_start":303,"line_end":303,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425664,"byte_end":425667,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Identical semantics to `channel`, except with no limit to buffer size.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425668,"byte_end":425742,"line_start":305,"line_end":305,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426003,"byte_end":426012,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"SendError","qualname":"::unsync::mpsc::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type for sending, used when the receiving end of a channel is\n dropped\n","sig":null,"attributes":[{"value":"/ Error type for sending, used when the receiving end of a channel is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425908,"byte_end":425979,"line_start":311,"line_end":311,"column_start":1,"column_end":72}},{"value":"/ dropped","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425980,"byte_end":425991,"line_start":312,"line_end":312,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426619,"byte_end":426629,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SendError<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426542,"byte_end":426607,"line_start":336,"line_end":336,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427146,"byte_end":427157,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::unsync::mpsc::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":2888},{"krate":0,"index":2889}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426667,"byte_end":426713,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426714,"byte_end":426717,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ This handle is a stream that proxies a stream on a separate `Executor`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426718,"byte_end":426793,"line_start":344,"line_end":344,"column_start":1,"column_end":76}},{"value":"/ Created through the `mpsc::spawn` function, this handle will produce","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426794,"byte_end":426866,"line_start":345,"line_end":345,"column_start":1,"column_end":73}},{"value":"/ the same values as the proxied stream, as they are produced in the executor,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426867,"byte_end":426947,"line_start":346,"line_end":346,"column_start":1,"column_end":81}},{"value":"/ and uses a limited buffer to exert back-pressure on the remote stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426948,"byte_end":427022,"line_start":347,"line_end":347,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427023,"byte_end":427026,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped, then the stream will no longer be polled and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427027,"byte_end":427105,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/ scheduled to be dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427106,"byte_end":427134,"line_start":350,"line_end":350,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427349,"byte_end":427356,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"Execute","qualname":"::unsync::mpsc::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"decl_id":null,"docs":" Type of future which `Executor` instances must be able to execute for `spawn`.\n","sig":null,"attributes":[{"value":"/ Type of future which `Executor` instances must be able to execute for `spawn`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427255,"byte_end":427337,"line_start":356,"line_end":356,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":2894},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428293,"byte_end":428298,"line_start":379,"line_end":379,"column_start":8,"column_end":13},"name":"spawn","qualname":"::unsync::mpsc::spawn","value":"fn <S, E> (stream: S, executor: &E, buffer: usize) -> SpawnHandle<S::Item, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427516,"byte_end":427591,"line_start":362,"line_end":362,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427592,"byte_end":427646,"line_start":363,"line_end":363,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427647,"byte_end":427650,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427651,"byte_end":427717,"line_start":365,"line_end":365,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427718,"byte_end":427721,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427722,"byte_end":427801,"line_start":367,"line_end":367,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427802,"byte_end":427874,"line_start":368,"line_end":368,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427875,"byte_end":427916,"line_start":369,"line_end":369,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427917,"byte_end":427920,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ At most `buffer + 1` elements will be buffered at a time. If the buffer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427921,"byte_end":427996,"line_start":371,"line_end":371,"column_start":1,"column_end":76}},{"value":"/ is full, then `stream` will stop progressing until more space is available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":427997,"byte_end":428076,"line_start":372,"line_end":372,"column_start":1,"column_end":80}},{"value":"/ This allows the `SpawnHandle` to exert backpressure on the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428077,"byte_end":428149,"line_start":373,"line_end":373,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428150,"byte_end":428153,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428154,"byte_end":428166,"line_start":375,"line_end":375,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428167,"byte_end":428170,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428171,"byte_end":428251,"line_start":377,"line_end":377,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428252,"byte_end":428285,"line_start":378,"line_end":378,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429758,"byte_end":429773,"line_start":415,"line_end":415,"column_start":8,"column_end":23},"name":"spawn_unbounded","qualname":"::unsync::mpsc::spawn_unbounded","value":"fn <S, E> (stream: S, executor: &E) -> SpawnHandle<S::Item, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `stream` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the remote stream, with unbounded buffering.","sig":null,"attributes":[{"value":"/ Spawns a `stream` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428759,"byte_end":428834,"line_start":395,"line_end":395,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the remote stream, with unbounded buffering.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428835,"byte_end":428915,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428916,"byte_end":428919,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ The `stream` will be canceled if the `SpawnHandle` is dropped.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428920,"byte_end":428986,"line_start":398,"line_end":398,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428987,"byte_end":428990,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a stream that is a proxy for `stream` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":428991,"byte_end":429070,"line_start":400,"line_end":400,"column_start":1,"column_end":80}},{"value":"/ When `stream` has additional items available, then the `SpawnHandle`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429071,"byte_end":429143,"line_start":401,"line_end":401,"column_start":1,"column_end":73}},{"value":"/ will have those same items available.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429144,"byte_end":429185,"line_start":402,"line_end":402,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429186,"byte_end":429189,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ An unbounded buffer is used, which means that values will be buffered as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429190,"byte_end":429266,"line_start":404,"line_end":404,"column_start":1,"column_end":77}},{"value":"/ fast as `stream` can produce them, without any backpressure. Therefore, if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429267,"byte_end":429345,"line_start":405,"line_end":405,"column_start":1,"column_end":79}},{"value":"/ `stream` is an infinite stream, it can use an unbounded amount of memory, and","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429346,"byte_end":429427,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ potentially hog CPU resources. In particular, if `stream` is infinite","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429428,"byte_end":429501,"line_start":407,"line_end":407,"column_start":1,"column_end":74}},{"value":"/ and doesn't ever yield (by returning `Async::NotReady` from `poll`), it","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429502,"byte_end":429577,"line_start":408,"line_end":408,"column_start":1,"column_end":76}},{"value":"/ will result in an infinite loop.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429578,"byte_end":429614,"line_start":409,"line_end":409,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429615,"byte_end":429618,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429619,"byte_end":429631,"line_start":411,"line_end":411,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429632,"byte_end":429635,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ This function will panic if `executor` is unable spawn a `Future` containing","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429636,"byte_end":429716,"line_start":413,"line_end":413,"column_start":1,"column_end":81}},{"value":"/ the entirety of the `stream`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":429717,"byte_end":429750,"line_start":414,"line_end":414,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::unsync::oneshot","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2926},{"krate":0,"index":2930},{"krate":0,"index":2935},{"krate":0,"index":2938},{"krate":0,"index":5249},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5258},{"krate":0,"index":5261},{"krate":0,"index":5269},{"krate":0,"index":2940},{"krate":0,"index":5272},{"krate":0,"index":5277},{"krate":0,"index":2941},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2965},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2977},{"krate":0,"index":2981},{"krate":0,"index":2987},{"krate":0,"index":2991},{"krate":0,"index":2996}],"decl_id":null,"docs":" A one-shot, futures-aware channel","sig":null,"attributes":[{"value":"! A one-shot, futures-aware channel","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431470,"byte_end":431507,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431508,"byte_end":431511,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This channel is similar to that in `sync::oneshot` but cannot be sent across","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431512,"byte_end":431592,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431593,"byte_end":431605,"line_start":4,"line_end":4,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431966,"byte_end":431973,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"channel","qualname":"::unsync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware, one-shot channel.","sig":null,"attributes":[{"value":"/ Creates a new futures-aware, one-shot channel.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431779,"byte_end":431829,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431830,"byte_end":431833,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is the same as `sync::oneshot::channel` except that the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431834,"byte_end":431907,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ returned values cannot be sent across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":431908,"byte_end":431958,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5249},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432597,"byte_end":432603,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Sender","qualname":"::unsync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5251}],"decl_id":null,"docs":" Represents the completion half of a oneshot through which the result of a\n computation is signaled.","sig":null,"attributes":[{"value":"/ Represents the completion half of a oneshot through which the result of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432279,"byte_end":432356,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ computation is signaled.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432357,"byte_end":432385,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432386,"byte_end":432389,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unsync::oneshot::channel` function and is equivalent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432390,"byte_end":432470,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ in functionality to `sync::oneshot::Sender` except that it cannot be sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432471,"byte_end":432548,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432549,"byte_end":432568,"line_start":38,"line_end":38,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433003,"byte_end":433011,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::unsync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5257}],"decl_id":null,"docs":" A future representing the completion of a computation happening elsewhere in\n memory.","sig":null,"attributes":[{"value":"/ A future representing the completion of a computation happening elsewhere in","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432648,"byte_end":432728,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ memory.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432729,"byte_end":432740,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432741,"byte_end":432744,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This is created by the `unsync::oneshot::channel` function and is equivalent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432745,"byte_end":432825,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ in functionality to `sync::oneshot::Receiver` except that it cannot be sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432826,"byte_end":432905,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432906,"byte_end":432925,"line_start":49,"line_end":49,"column_start":1,"column_end":20}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":432943,"byte_end":432991,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433819,"byte_end":433823,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (self, val: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433305,"byte_end":433357,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433362,"byte_end":433365,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433370,"byte_end":433442,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ `Receiver`, that the error provided is the result of the computation this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433447,"byte_end":433524,"line_start":75,"line_end":75,"column_start":5,"column_end":82}},{"value":"/ represents.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433529,"byte_end":433544,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433549,"byte_end":433552,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433557,"byte_end":433629,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was deallocated before","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433634,"byte_end":433708,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ this function was called, however, then `Err` is returned with the value","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433713,"byte_end":433789,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ provided.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433794,"byte_end":433807,"line_start":81,"line_end":81,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434997,"byte_end":435008,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"poll_cancel","qualname":"<Sender<T>>::poll_cancel","value":"fn (&mut self) -> Poll<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether the `Receiver` this has\n paired with has gone away.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether the `Receiver` this has","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434037,"byte_end":434107,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ paired with has gone away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434112,"byte_end":434142,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434147,"byte_end":434150,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434155,"byte_end":434230,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434235,"byte_end":434308,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ from `complete`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434313,"byte_end":434333,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434338,"byte_end":434341,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Like `Future::poll`, this function will panic if it's not called from","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434346,"byte_end":434419,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ within the context of a task. In other words, this should only ever be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434424,"byte_end":434498,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ called from inside another future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434503,"byte_end":434541,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434546,"byte_end":434549,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If `Ready` is returned then it means that the `Receiver` has disappeared","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434554,"byte_end":434630,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ and the result this `Sender` would otherwise produce should no longer","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434635,"byte_end":434708,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ be produced.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434713,"byte_end":434729,"line_start":104,"line_end":104,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434734,"byte_end":434737,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If `NotReady` is returned then the `Receiver` is still alive and may be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434742,"byte_end":434817,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ able to receive a message if sent. The current task, however, is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434822,"byte_end":434890,"line_start":107,"line_end":107,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a notification if the corresponding `Receiver` goes","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434895,"byte_end":434971,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":434976,"byte_end":434985,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435993,"byte_end":436004,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has gone away.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435278,"byte_end":435343,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"/ has gone away.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435348,"byte_end":435366,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435371,"byte_end":435374,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can be used to learn about when the `Receiver` (consumer)","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435379,"byte_end":435454,"line_start":123,"line_end":123,"column_start":5,"column_end":80}},{"value":"/ half has gone away and nothing will be able to receive a message sent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435459,"byte_end":435532,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ from `send`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435537,"byte_end":435553,"line_start":125,"line_end":125,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435558,"byte_end":435561,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function is intended to *not* be used in the context of a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435566,"byte_end":435642,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ future. If you're implementing a future you probably want to call the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435647,"byte_end":435720,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ `poll_cancel` function which will block the current task if the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435725,"byte_end":435792,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ cancellation hasn't happened yet. This can be useful when working on a","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435797,"byte_end":435871,"line_start":130,"line_end":130,"column_start":5,"column_end":79}},{"value":"/ non-futures related thread, though, which would otherwise panic if","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435876,"byte_end":435946,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ `poll_cancel` were called.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":435951,"byte_end":435981,"line_start":132,"line_end":132,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436906,"byte_end":436911,"line_start":162,"line_end":162,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing sending any future messages.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing sending any future messages.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436510,"byte_end":436585,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436590,"byte_end":436593,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436598,"byte_end":436665,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. Once this method is called the normal `poll` method","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436670,"byte_end":436745,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ can be used to determine whether a message was actually sent or not. If","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436750,"byte_end":436825,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ `Canceled` is returned from `poll` then no message was sent.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436830,"byte_end":436894,"line_start":161,"line_end":161,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439022,"byte_end":439033,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"SpawnHandle","qualname":"::unsync::oneshot::SpawnHandle","value":"SpawnHandle {  }","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":" Handle returned from the `spawn` function.","sig":null,"attributes":[{"value":"/ Handle returned from the `spawn` function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438489,"byte_end":438535,"line_start":216,"line_end":216,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438536,"byte_end":438539,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This handle is a future representing the completion of a different future on","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438540,"byte_end":438620,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/ a separate executor. Created through the `oneshot::spawn` function this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438621,"byte_end":438696,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"/ handle will resolve when the future provided to `spawn` resolves on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438697,"byte_end":438772,"line_start":220,"line_end":220,"column_start":1,"column_end":76}},{"value":"/ `Executor` instance provided to that function.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438773,"byte_end":438823,"line_start":221,"line_end":221,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438824,"byte_end":438827,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ If this handle is dropped then the future will automatically no longer be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438828,"byte_end":438905,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ polled and is scheduled to be dropped. This can be canceled with the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438906,"byte_end":438978,"line_start":224,"line_end":224,"column_start":1,"column_end":73}},{"value":"/ `forget` function, however.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438979,"byte_end":439010,"line_start":225,"line_end":225,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439194,"byte_end":439201,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"Execute","qualname":"::unsync::oneshot::Execute","value":"Execute {  }","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969}],"decl_id":null,"docs":" Type of future which `Spawn` instances below must be able to spawn.\n","sig":null,"attributes":[{"value":"/ Type of future which `Spawn` instances below must be able to spawn.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439111,"byte_end":439182,"line_start":231,"line_end":231,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440333,"byte_end":440338,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"spawn","qualname":"::unsync::oneshot::spawn","value":"fn <F, E> (future: F, executor: &E) -> SpawnHandle<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `future` onto the instance of `Executor` provided, `executor`,\n returning a handle representing the completion of the future.","sig":null,"attributes":[{"value":"/ Spawns a `future` onto the instance of `Executor` provided, `executor`,","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439318,"byte_end":439393,"line_start":238,"line_end":238,"column_start":1,"column_end":76}},{"value":"/ returning a handle representing the completion of the future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439394,"byte_end":439459,"line_start":239,"line_end":239,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439460,"byte_end":439463,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ The `SpawnHandle` returned is a future that is a proxy for `future` itself.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439464,"byte_end":439543,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/ When `future` completes on `executor` then the `SpawnHandle` will itself be","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439544,"byte_end":439623,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/ resolved.  Internally `SpawnHandle` contains a `oneshot` channel and is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439624,"byte_end":439699,"line_start":243,"line_end":243,"column_start":1,"column_end":76}},{"value":"/ thus not safe to send across threads.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439700,"byte_end":439741,"line_start":244,"line_end":244,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439742,"byte_end":439745,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The `future` will be canceled if the `SpawnHandle` is dropped. If this is","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439746,"byte_end":439823,"line_start":246,"line_end":246,"column_start":1,"column_end":78}},{"value":"/ not desired then the `SpawnHandle::forget` function can be used to continue","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439824,"byte_end":439903,"line_start":247,"line_end":247,"column_start":1,"column_end":80}},{"value":"/ running the future to completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439904,"byte_end":439941,"line_start":248,"line_end":248,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439942,"byte_end":439945,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439946,"byte_end":439958,"line_start":250,"line_end":250,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439959,"byte_end":439962,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the instance of `Spawn` provided is unable to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":439963,"byte_end":440040,"line_start":252,"line_end":252,"column_start":1,"column_end":78}},{"value":"/ spawn the `future` provided.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440041,"byte_end":440073,"line_start":253,"line_end":253,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440074,"byte_end":440077,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If the provided instance of `Spawn` does not actually run `future` to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440078,"byte_end":440151,"line_start":255,"line_end":255,"column_start":1,"column_end":74}},{"value":"/ completion, then the returned handle may panic when polled. Typically this","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440152,"byte_end":440230,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"/ is not a problem, though, as most instances of `Spawn` will run futures to","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440231,"byte_end":440309,"line_start":257,"line_end":257,"column_start":1,"column_end":79}},{"value":"/ completion.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440310,"byte_end":440325,"line_start":258,"line_end":258,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441073,"byte_end":441081,"line_start":281,"line_end":281,"column_start":8,"column_end":16},"name":"spawn_fn","qualname":"::unsync::oneshot::spawn_fn","value":"fn <F, R, E> (f: F, executor: &E) -> SpawnHandle<R::Item, R::Error>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a function `f` onto the `Spawn` instance provided `s`.","sig":null,"attributes":[{"value":"/ Spawns a function `f` onto the `Spawn` instance provided `s`.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440759,"byte_end":440824,"line_start":276,"line_end":276,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440825,"byte_end":440828,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ For more information see the `spawn` function in this module. This function","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440829,"byte_end":440908,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ is just a thin wrapper around `spawn` which will execute the closure on the","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440909,"byte_end":440988,"line_start":279,"line_end":279,"column_start":1,"column_end":80}},{"value":"/ executor provided and then complete the future that the closure returns.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":440989,"byte_end":441065,"line_start":280,"line_end":280,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441623,"byte_end":441629,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"forget","qualname":"<SpawnHandle<T, E>>::forget","value":"fn (self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drop this future without canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drop this future without canceling the underlying future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441311,"byte_end":441372,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441377,"byte_end":441380,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When `SpawnHandle` is dropped, the spawned future will be canceled as","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441385,"byte_end":441458,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ well if the future hasn't already resolved. This function can be used","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441463,"byte_end":441536,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ when to drop this future but keep executing the underlying future.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441541,"byte_end":441611,"line_start":294,"line_end":294,"column_start":5,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9117,"byte_end":9124,"line_start":260,"line_end":260,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3008}],"decl_id":null,"docs":" A \"prelude\" for crates using the `futures` crate.","sig":null,"attributes":[{"value":"/ A \"prelude\" for crates using the `futures` crate.","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8566,"byte_end":8619,"line_start":247,"line_end":247,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8620,"byte_end":8623,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8624,"byte_end":8700,"line_start":249,"line_end":249,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8701,"byte_end":8778,"line_start":250,"line_end":250,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually. An example of using this is:","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8779,"byte_end":8860,"line_start":251,"line_end":251,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8861,"byte_end":8864,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8865,"byte_end":8872,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8873,"byte_end":8901,"line_start":254,"line_end":254,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8902,"byte_end":8909,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8910,"byte_end":8913,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ We may add items to this over time as they become ubiquitous as well, but","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8914,"byte_end":8991,"line_start":257,"line_end":257,"column_start":1,"column_end":78}},{"value":"/ otherwise this should help cut down on futures-related imports when you're","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":8992,"byte_end":9070,"line_start":258,"line_end":258,"column_start":1,"column_end":79}},{"value":"/ working with the `futures` crate!","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":9071,"byte_end":9108,"line_start":259,"line_end":259,"column_start":1,"column_end":38}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10346,"byte_end":10351,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10995,"byte_end":11000,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11613,"byte_end":11622,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56763,"byte_end":56768,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":58105,"byte_end":58109,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":58771,"byte_end":58775,"line_start":74,"line_end":74,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59791,"byte_end":59797,"line_start":36,"line_end":36,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61784,"byte_end":61796,"line_start":68,"line_end":68,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":62006,"byte_end":62018,"line_start":77,"line_end":77,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64420,"byte_end":64426,"line_start":84,"line_end":84,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/option.rs","byte_start":64966,"byte_end":64972,"line_start":5,"line_end":5,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65855,"byte_end":65862,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66663,"byte_end":66670,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":67155,"byte_end":67162,"line_start":35,"line_end":35,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":68073,"byte_end":68086,"line_start":17,"line_end":17,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":68913,"byte_end":68926,"line_start":52,"line_end":52,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71180,"byte_end":71184,"line_start":22,"line_end":22,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71596,"byte_end":71600,"line_start":34,"line_end":34,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/into_stream.rs","byte_start":72424,"byte_end":72434,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":77255,"byte_end":77264,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78353,"byte_end":78356,"line_start":22,"line_end":22,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":79271,"byte_end":79277,"line_start":22,"line_end":22,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":80183,"byte_end":80190,"line_start":24,"line_end":24,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":81076,"byte_end":81082,"line_start":23,"line_end":23,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":82467,"byte_end":82473,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":83674,"byte_end":83684,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84520,"byte_end":84527,"line_start":20,"line_end":20,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85892,"byte_end":85896,"line_start":23,"line_end":23,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86477,"byte_end":86483,"line_start":13,"line_end":13,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86889,"byte_end":86895,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":87239,"byte_end":87245,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":88058,"byte_end":88065,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/chain.rs","byte_start":88694,"byte_end":88699,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8327187,"byte_end":8327198,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8327823,"byte_end":8327839,"line_start":44,"line_end":44,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328639,"byte_end":8328646,"line_start":29,"line_end":29,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330284,"byte_end":8330291,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8333101,"byte_end":8333110,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8335363,"byte_end":8335371,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337781,"byte_end":8337787,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3568}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8338991,"byte_end":8338997,"line_start":81,"line_end":81,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8340503,"byte_end":8340509,"line_start":123,"line_end":123,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8341431,"byte_end":8341436,"line_start":152,"line_end":152,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343248,"byte_end":8343254,"line_start":208,"line_end":208,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3607}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343509,"byte_end":8343515,"line_start":219,"line_end":219,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343696,"byte_end":8343704,"line_start":226,"line_end":226,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344186,"byte_end":8344191,"line_start":241,"line_end":241,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344316,"byte_end":8344321,"line_start":247,"line_end":247,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344445,"byte_end":8344450,"line_start":253,"line_end":253,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344876,"byte_end":8344886,"line_start":271,"line_end":271,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345179,"byte_end":8345190,"line_start":286,"line_end":286,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345309,"byte_end":8345320,"line_start":294,"line_end":294,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345472,"byte_end":8345483,"line_start":302,"line_end":302,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15734,"byte_end":15737,"line_start":108,"line_end":108,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52260,"byte_end":52261,"line_start":1052,"line_end":1052,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52426,"byte_end":52432,"line_start":1062,"line_end":1062,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55307,"byte_end":55319,"line_start":1143,"line_end":1143,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55806,"byte_end":55818,"line_start":1163,"line_end":1163,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133292,"byte_end":133296,"line_start":36,"line_end":36,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134526,"byte_end":134532,"line_start":39,"line_end":39,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135773,"byte_end":135783,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":137169,"byte_end":137175,"line_start":44,"line_end":44,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138008,"byte_end":138015,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138931,"byte_end":138938,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":139398,"byte_end":139405,"line_start":77,"line_end":77,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":141056,"byte_end":141061,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142291,"byte_end":142298,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142722,"byte_end":142729,"line_start":37,"line_end":37,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143644,"byte_end":143650,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":144102,"byte_end":144108,"line_start":89,"line_end":89,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":144974,"byte_end":144984,"line_start":127,"line_end":127,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146929,"byte_end":146934,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147583,"byte_end":147589,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148462,"byte_end":148468,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148922,"byte_end":148928,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149955,"byte_end":149964,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150837,"byte_end":150846,"line_start":51,"line_end":51,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":151303,"byte_end":151312,"line_start":70,"line_end":70,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152387,"byte_end":152394,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153261,"byte_end":153268,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153725,"byte_end":153732,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":155477,"byte_end":155481,"line_start":42,"line_end":42,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157618,"byte_end":157625,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158767,"byte_end":158774,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159612,"byte_end":159619,"line_start":51,"line_end":51,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":160016,"byte_end":160023,"line_start":65,"line_end":65,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160917,"byte_end":160921,"line_start":17,"line_end":17,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161457,"byte_end":161461,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161832,"byte_end":161836,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163351,"byte_end":163363,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":165072,"byte_end":165084,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166186,"byte_end":166193,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":167066,"byte_end":167073,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":167536,"byte_end":167543,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168434,"byte_end":168444,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169317,"byte_end":169327,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169790,"byte_end":169800,"line_start":68,"line_end":68,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170550,"byte_end":170553,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171426,"byte_end":171429,"line_start":51,"line_end":51,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171886,"byte_end":171889,"line_start":70,"line_end":70,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172646,"byte_end":172652,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173525,"byte_end":173531,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173988,"byte_end":173994,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175357,"byte_end":175362,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177450,"byte_end":177454,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":178439,"byte_end":178445,"line_start":31,"line_end":31,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":178920,"byte_end":178926,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180495,"byte_end":180503,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180968,"byte_end":180976,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181261,"byte_end":181269,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182837,"byte_end":182843,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183786,"byte_end":183792,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185507,"byte_end":185511,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186378,"byte_end":186382,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186830,"byte_end":186834,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187961,"byte_end":187970,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188880,"byte_end":188889,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":189373,"byte_end":189382,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191078,"byte_end":191082,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191949,"byte_end":191953,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":192410,"byte_end":192414,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193614,"byte_end":193623,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194533,"byte_end":194542,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":195026,"byte_end":195035,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196906,"byte_end":196910,"line_start":31,"line_end":31,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":197386,"byte_end":197390,"line_start":50,"line_end":50,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200702,"byte_end":200708,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":203078,"byte_end":203081,"line_start":29,"line_end":29,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204828,"byte_end":204835,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":206608,"byte_end":206615,"line_start":78,"line_end":78,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8346347,"byte_end":8346355,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4128}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347128,"byte_end":8347136,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8348110,"byte_end":8348118,"line_start":78,"line_end":78,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141},{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8348607,"byte_end":8348615,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350428,"byte_end":8350443,"line_start":22,"line_end":22,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351108,"byte_end":8351123,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8352037,"byte_end":8352052,"line_start":75,"line_end":75,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4175},{"krate":0,"index":4176},{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8353263,"byte_end":8353278,"line_start":112,"line_end":112,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8354430,"byte_end":8354441,"line_start":33,"line_end":33,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8355622,"byte_end":8355638,"line_start":64,"line_end":64,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356725,"byte_end":8356731,"line_start":37,"line_end":37,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357178,"byte_end":8357184,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8358173,"byte_end":8358179,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360447,"byte_end":8360454,"line_start":27,"line_end":27,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360581,"byte_end":8360588,"line_start":33,"line_end":33,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361631,"byte_end":8361635,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362576,"byte_end":8362580,"line_start":47,"line_end":47,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4269},{"krate":0,"index":4270}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364695,"byte_end":8364704,"line_start":57,"line_end":57,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364897,"byte_end":8364906,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365066,"byte_end":8365075,"line_start":71,"line_end":71,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365224,"byte_end":8365232,"line_start":80,"line_end":80,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365642,"byte_end":8365648,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8366019,"byte_end":8366031,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366560,"byte_end":8366571,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366946,"byte_end":8366957,"line_start":21,"line_end":21,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367333,"byte_end":8367342,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367809,"byte_end":8367818,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369028,"byte_end":8369040,"line_start":87,"line_end":87,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4360}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369230,"byte_end":8369242,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369432,"byte_end":8369444,"line_start":101,"line_end":101,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4366}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371843,"byte_end":8371859,"line_start":53,"line_end":53,"column_start":31,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371896,"byte_end":8371912,"line_start":54,"line_end":54,"column_start":31,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374170,"byte_end":8374186,"line_start":116,"line_end":116,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4436}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374284,"byte_end":8374300,"line_start":122,"line_end":122,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4439}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375338,"byte_end":8375354,"line_start":154,"line_end":154,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8379641,"byte_end":8379657,"line_start":270,"line_end":270,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8382896,"byte_end":8382900,"line_start":343,"line_end":343,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8384776,"byte_end":8384792,"line_start":389,"line_end":389,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8384935,"byte_end":8384951,"line_start":395,"line_end":395,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386419,"byte_end":8386435,"line_start":425,"line_end":425,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386907,"byte_end":8386914,"line_start":445,"line_end":445,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8387446,"byte_end":8387453,"line_start":466,"line_end":466,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8387473,"byte_end":8387478,"line_start":468,"line_end":468,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8389327,"byte_end":8389332,"line_start":529,"line_end":529,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390250,"byte_end":8390262,"line_start":553,"line_end":553,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390382,"byte_end":8390394,"line_start":559,"line_end":559,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390840,"byte_end":8390847,"line_start":573,"line_end":573,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390878,"byte_end":8390885,"line_start":574,"line_end":574,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390912,"byte_end":8390919,"line_start":576,"line_end":576,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8391205,"byte_end":8391212,"line_start":587,"line_end":587,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4517},{"krate":0,"index":4518}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8391754,"byte_end":8391758,"line_start":606,"line_end":606,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4523}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8392908,"byte_end":8392912,"line_start":635,"line_end":635,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8394028,"byte_end":8394039,"line_start":670,"line_end":670,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394528,"byte_end":8394540,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4557}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394645,"byte_end":8394657,"line_start":21,"line_end":21,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394688,"byte_end":8394700,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4562}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394823,"byte_end":8394835,"line_start":29,"line_end":29,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4565}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395016,"byte_end":8395028,"line_start":36,"line_end":36,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4568},{"krate":0,"index":4569},{"krate":0,"index":4570}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398459,"byte_end":8398473,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4581}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398569,"byte_end":8398583,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8400186,"byte_end":8400200,"line_start":169,"line_end":169,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8401212,"byte_end":8401226,"line_start":201,"line_end":201,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4595}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8401406,"byte_end":8401420,"line_start":209,"line_end":209,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4598}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93626,"byte_end":93629,"line_start":134,"line_end":134,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4627}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227441,"byte_end":227446,"line_start":30,"line_end":30,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227999,"byte_end":228003,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228270,"byte_end":228274,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":229992,"byte_end":229996,"line_start":124,"line_end":124,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231842,"byte_end":231853,"line_start":39,"line_end":39,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":233211,"byte_end":233222,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":233518,"byte_end":233529,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234846,"byte_end":234851,"line_start":16,"line_end":16,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235436,"byte_end":235441,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236293,"byte_end":236304,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236854,"byte_end":236865,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":237434,"byte_end":237445,"line_start":64,"line_end":64,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238078,"byte_end":238082,"line_start":20,"line_end":20,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238723,"byte_end":238727,"line_start":40,"line_end":40,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":240041,"byte_end":240048,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":241089,"byte_end":241096,"line_start":59,"line_end":59,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242412,"byte_end":242422,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242975,"byte_end":242985,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":243695,"byte_end":243705,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244346,"byte_end":244352,"line_start":15,"line_end":15,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244728,"byte_end":244734,"line_start":25,"line_end":25,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":245181,"byte_end":245187,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":246919,"byte_end":246929,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402330,"byte_end":8402336,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8403279,"byte_end":8403285,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8403484,"byte_end":8403490,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405078,"byte_end":8405082,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208574,"byte_end":208577,"line_start":34,"line_end":34,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209359,"byte_end":209362,"line_start":58,"line_end":58,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249255,"byte_end":249259,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249296,"byte_end":249300,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249316,"byte_end":249320,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250147,"byte_end":250154,"line_start":66,"line_end":66,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250411,"byte_end":250418,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250785,"byte_end":250792,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286529,"byte_end":286539,"line_start":137,"line_end":137,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286741,"byte_end":286745,"line_start":142,"line_end":142,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292150,"byte_end":292160,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292245,"byte_end":292255,"line_start":276,"line_end":276,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292383,"byte_end":292393,"line_start":282,"line_end":282,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292418,"byte_end":292428,"line_start":283,"line_end":283,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293113,"byte_end":293127,"line_start":33,"line_end":33,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293310,"byte_end":293324,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293664,"byte_end":293676,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293800,"byte_end":293810,"line_start":65,"line_end":65,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294042,"byte_end":294052,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294245,"byte_end":294255,"line_start":83,"line_end":83,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":297709,"byte_end":297714,"line_start":176,"line_end":176,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":320819,"byte_end":320830,"line_start":25,"line_end":25,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":320867,"byte_end":320878,"line_start":26,"line_end":26,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":321585,"byte_end":321596,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326672,"byte_end":326673,"line_start":43,"line_end":43,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327742,"byte_end":327750,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327836,"byte_end":327844,"line_start":78,"line_end":78,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328124,"byte_end":328132,"line_start":93,"line_end":93,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333239,"byte_end":333245,"line_start":72,"line_end":72,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333282,"byte_end":333288,"line_start":73,"line_end":73,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333304,"byte_end":333310,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334995,"byte_end":335001,"line_start":122,"line_end":122,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":299879,"byte_end":299884,"line_start":70,"line_end":70,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":300814,"byte_end":300828,"line_start":119,"line_end":119,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":301247,"byte_end":301261,"line_start":134,"line_end":134,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":302159,"byte_end":302171,"line_start":166,"line_end":166,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":302933,"byte_end":302943,"line_start":197,"line_end":197,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303563,"byte_end":303568,"line_start":218,"line_end":218,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305216,"byte_end":305221,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306144,"byte_end":306149,"line_start":291,"line_end":291,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310509,"byte_end":310512,"line_start":413,"line_end":413,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":311464,"byte_end":311467,"line_start":441,"line_end":441,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":311660,"byte_end":311668,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":312242,"byte_end":312254,"line_start":479,"line_end":479,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2159},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":313644,"byte_end":313656,"line_start":523,"line_end":523,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316312,"byte_end":316323,"line_start":603,"line_end":603,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316746,"byte_end":316757,"line_start":620,"line_end":620,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":318186,"byte_end":318196,"line_start":658,"line_end":658,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":318938,"byte_end":318948,"line_start":684,"line_end":684,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":319388,"byte_end":319400,"line_start":698,"line_end":698,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254266,"byte_end":254270,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255781,"byte_end":255785,"line_start":136,"line_end":136,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259889,"byte_end":259893,"line_start":224,"line_end":224,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261307,"byte_end":261312,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266714,"byte_end":266719,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277723,"byte_end":277735,"line_start":637,"line_end":637,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277760,"byte_end":277772,"line_start":638,"line_end":638,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277782,"byte_end":277794,"line_start":640,"line_end":640,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278768,"byte_end":278780,"line_start":669,"line_end":669,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278921,"byte_end":278933,"line_start":678,"line_end":678,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279076,"byte_end":279088,"line_start":685,"line_end":685,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279300,"byte_end":279309,"line_start":696,"line_end":696,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279759,"byte_end":279768,"line_start":713,"line_end":713,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279968,"byte_end":279980,"line_start":721,"line_end":721,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/resultstream.rs","byte_start":336074,"byte_end":336081,"line_start":33,"line_end":33,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343355,"byte_end":343360,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":351823,"byte_end":351829,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354796,"byte_end":354802,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355055,"byte_end":355063,"line_start":404,"line_end":404,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355191,"byte_end":355199,"line_start":410,"line_end":410,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355282,"byte_end":355290,"line_start":416,"line_end":416,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356351,"byte_end":356359,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356510,"byte_end":356518,"line_start":452,"line_end":452,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359671,"byte_end":359682,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360103,"byte_end":360114,"line_start":548,"line_end":548,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360536,"byte_end":360547,"line_start":562,"line_end":562,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360701,"byte_end":360712,"line_start":569,"line_end":569,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360815,"byte_end":360822,"line_start":575,"line_end":575,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":361549,"byte_end":361556,"line_start":599,"line_end":599,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":361748,"byte_end":361755,"line_start":607,"line_end":607,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404090,"byte_end":404095,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404133,"byte_end":404138,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404155,"byte_end":404159,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404355,"byte_end":404360,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":406115,"byte_end":406120,"line_start":140,"line_end":140,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366723,"byte_end":366738,"line_start":114,"line_end":114,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367787,"byte_end":367796,"line_start":152,"line_end":152,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367983,"byte_end":367992,"line_start":160,"line_end":160,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368151,"byte_end":368160,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368266,"byte_end":368275,"line_start":173,"line_end":173,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368433,"byte_end":368445,"line_start":180,"line_end":180,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368635,"byte_end":368647,"line_start":188,"line_end":188,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368928,"byte_end":368940,"line_start":198,"line_end":198,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369155,"byte_end":369167,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":371727,"byte_end":371737,"line_start":305,"line_end":305,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374546,"byte_end":374552,"line_start":391,"line_end":391,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":383348,"byte_end":383354,"line_start":639,"line_end":639,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2594}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384450,"byte_end":384465,"line_start":672,"line_end":672,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385421,"byte_end":385436,"line_start":699,"line_end":699,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":386243,"byte_end":386258,"line_start":734,"line_end":734,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2617}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":386376,"byte_end":386382,"line_start":741,"line_end":741,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387572,"byte_end":387578,"line_start":774,"line_end":774,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387870,"byte_end":387878,"line_start":791,"line_end":791,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":392270,"byte_end":392278,"line_start":923,"line_end":923,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":393791,"byte_end":393799,"line_start":960,"line_end":960,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394799,"byte_end":394816,"line_start":989,"line_end":989,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395099,"byte_end":395116,"line_start":999,"line_end":999,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398654,"byte_end":398665,"line_start":1095,"line_end":1095,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399166,"byte_end":399177,"line_start":1110,"line_end":1110,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399338,"byte_end":399345,"line_start":1117,"line_end":1117,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399745,"byte_end":399752,"line_start":1133,"line_end":1133,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399927,"byte_end":399932,"line_start":1146,"line_end":1146,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400277,"byte_end":400282,"line_start":1157,"line_end":1157,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400319,"byte_end":400324,"line_start":1158,"line_end":1158,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400337,"byte_end":400342,"line_start":1160,"line_end":1160,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407933,"byte_end":407938,"line_start":44,"line_end":44,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407975,"byte_end":407980,"line_start":45,"line_end":45,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407996,"byte_end":408002,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":412981,"byte_end":412986,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413126,"byte_end":413131,"line_start":176,"line_end":176,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413409,"byte_end":413421,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413611,"byte_end":413623,"line_start":194,"line_end":194,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413797,"byte_end":413809,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414253,"byte_end":414264,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414425,"byte_end":414436,"line_start":223,"line_end":223,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414588,"byte_end":414599,"line_start":229,"line_end":229,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414859,"byte_end":414872,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415698,"byte_end":415712,"line_start":268,"line_end":268,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415946,"byte_end":415960,"line_start":279,"line_end":279,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2765},{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":416131,"byte_end":416145,"line_start":286,"line_end":286,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":416307,"byte_end":416321,"line_start":292,"line_end":292,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418464,"byte_end":418470,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419251,"byte_end":419257,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419366,"byte_end":419372,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419742,"byte_end":419748,"line_start":107,"line_end":107,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420900,"byte_end":420908,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":421688,"byte_end":421696,"line_start":164,"line_end":164,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422679,"byte_end":422687,"line_start":196,"line_end":196,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422930,"byte_end":422945,"line_start":208,"line_end":208,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423047,"byte_end":423062,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423821,"byte_end":423836,"line_start":246,"line_end":246,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425137,"byte_end":425154,"line_start":284,"line_end":284,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2861}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425437,"byte_end":425454,"line_start":294,"line_end":294,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426044,"byte_end":426053,"line_start":315,"line_end":315,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426240,"byte_end":426249,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426408,"byte_end":426417,"line_start":329,"line_end":329,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426523,"byte_end":426532,"line_start":335,"line_end":335,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430239,"byte_end":430250,"line_start":431,"line_end":431,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430754,"byte_end":430765,"line_start":446,"line_end":446,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430929,"byte_end":430936,"line_start":453,"line_end":453,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":431336,"byte_end":431343,"line_start":469,"line_end":469,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433289,"byte_end":433295,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436088,"byte_end":436094,"line_start":138,"line_end":138,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436492,"byte_end":436500,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":437373,"byte_end":437381,"line_start":178,"line_end":178,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438419,"byte_end":438427,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441287,"byte_end":441298,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2980}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441706,"byte_end":441717,"line_start":300,"line_end":300,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":442133,"byte_end":442144,"line_start":314,"line_end":314,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":442305,"byte_end":442312,"line_start":321,"line_end":321,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":443051,"byte_end":443058,"line_start":345,"line_end":345,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6532,"byte_end":6538,"line_start":177,"line_end":177,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6587,"byte_end":6593,"line_start":180,"line_end":180,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":568}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":92531,"byte_end":92548,"line_start":110,"line_end":110,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":4367}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":6628,"byte_end":6632,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1509}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7253,"byte_end":7257,"line_start":206,"line_end":206,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2321}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7267,"byte_end":7275,"line_start":207,"line_end":207,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2341}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7313,"byte_end":7317,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2354}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339673,"byte_end":339680,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2355}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mod.rs","byte_start":339690,"byte_end":339694,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2460}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lib.rs","byte_start":7355,"byte_end":7361,"line_start":211,"line_end":211,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2778}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416630,"byte_end":416634,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2779}},{"kind":"Mod","span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mod.rs","byte_start":416644,"byte_end":416651,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2918}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10346,"byte_end":10351,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":10995,"byte_end":11000,"line_start":57,"line_end":57,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3009},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/poll.rs","byte_start":11613,"byte_end":11622,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/empty.rs","byte_start":56763,"byte_end":56768,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3051},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":58105,"byte_end":58109,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/lazy.rs","byte_start":58771,"byte_end":58775,"line_start":74,"line_end":74,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3059},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/poll_fn.rs","byte_start":59791,"byte_end":59797,"line_start":36,"line_end":36,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3082},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":61784,"byte_end":61796,"line_start":68,"line_end":68,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3088},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/result.rs","byte_start":62006,"byte_end":62018,"line_start":77,"line_end":77,"column_start":35,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3088},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/loop_fn.rs","byte_start":64420,"byte_end":64426,"line_start":84,"line_end":84,"column_start":29,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/option.rs","byte_start":64966,"byte_end":64972,"line_start":5,"line_end":5,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":29547},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/and_then.rs","byte_start":65855,"byte_end":65862,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3122},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":66663,"byte_end":66670,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":202},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten.rs","byte_start":67155,"byte_end":67162,"line_start":35,"line_end":35,"column_start":20,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":202},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":68073,"byte_end":68086,"line_start":17,"line_end":17,"column_start":24,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/flatten_stream.rs","byte_start":68913,"byte_end":68926,"line_start":52,"line_end":52,"column_start":20,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":223},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71180,"byte_end":71184,"line_start":22,"line_end":22,"column_start":17,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/fuse.rs","byte_start":71596,"byte_end":71600,"line_start":34,"line_end":34,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3147},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/into_stream.rs","byte_start":72424,"byte_end":72434,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3153},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join.rs","byte_start":77255,"byte_end":77264,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map.rs","byte_start":78353,"byte_end":78356,"line_start":22,"line_end":22,"column_start":26,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3330},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/map_err.rs","byte_start":79271,"byte_end":79277,"line_start":22,"line_end":22,"column_start":26,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3339},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/from_err.rs","byte_start":80183,"byte_end":80190,"line_start":24,"line_end":24,"column_start":45,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3348},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/or_else.rs","byte_start":81076,"byte_end":81082,"line_start":23,"line_end":23,"column_start":26,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3357},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":82467,"byte_end":82473,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3367},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select.rs","byte_start":83674,"byte_end":83684,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3375},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select2.rs","byte_start":84520,"byte_end":84527,"line_start":20,"line_end":20,"column_start":23,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3396},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/then.rs","byte_start":85892,"byte_end":85896,"line_start":23,"line_end":23,"column_start":26,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3404},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86477,"byte_end":86483,"line_start":13,"line_end":13,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":86889,"byte_end":86895,"line_start":26,"line_end":26,"column_start":23,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/either.rs","byte_start":87239,"byte_end":87245,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3414},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/inspect.rs","byte_start":88058,"byte_end":88065,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3427},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/chain.rs","byte_start":88694,"byte_end":88699,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8327187,"byte_end":8327198,"line_start":24,"line_end":24,"column_start":20,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3660},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/catch_unwind.rs","byte_start":8327823,"byte_end":8327839,"line_start":44,"line_end":44,"column_start":28,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":3748},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8328639,"byte_end":8328646,"line_start":29,"line_end":29,"column_start":24,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3487},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/join_all.rs","byte_start":8330284,"byte_end":8330291,"line_start":86,"line_end":86,"column_start":20,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3487},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_all.rs","byte_start":8333101,"byte_end":8333110,"line_start":45,"line_end":45,"column_start":20,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3677},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/select_ok.rs","byte_start":8335363,"byte_end":8335371,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8337781,"byte_end":8337787,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3562},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8338991,"byte_end":8338997,"line_start":81,"line_end":81,"column_start":9,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8340503,"byte_end":8340509,"line_start":123,"line_end":123,"column_start":20,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3562},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8341431,"byte_end":8341436,"line_start":152,"line_end":152,"column_start":31,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3597},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343248,"byte_end":8343254,"line_start":208,"line_end":208,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3562},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343509,"byte_end":8343515,"line_start":219,"line_end":219,"column_start":18,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3562},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8343696,"byte_end":8343704,"line_start":226,"line_end":226,"column_start":17,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3575},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344186,"byte_end":8344191,"line_start":241,"line_end":241,"column_start":25,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3569},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344316,"byte_end":8344321,"line_start":247,"line_end":247,"column_start":25,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3569},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344445,"byte_end":8344450,"line_start":253,"line_end":253,"column_start":24,"column_end":29},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3569},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8344876,"byte_end":8344886,"line_start":271,"line_end":271,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3689},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345179,"byte_end":8345190,"line_start":286,"line_end":286,"column_start":24,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3698},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345309,"byte_end":8345320,"line_start":294,"line_end":294,"column_start":26,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3698},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/shared.rs","byte_start":8345472,"byte_end":8345483,"line_start":302,"line_end":302,"column_start":26,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3698},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":15734,"byte_end":15737,"line_start":108,"line_end":108,"column_start":55,"column_end":58},"kind":{"Impl":{"id":53}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52260,"byte_end":52261,"line_start":1052,"line_end":1052,"column_start":32,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":533},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52426,"byte_end":52432,"line_start":1062,"line_end":1062,"column_start":35,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":1,"index":29668},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":52766,"byte_end":52771,"line_start":1076,"line_end":1076,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":545}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55307,"byte_end":55319,"line_start":1143,"line_end":1143,"column_start":9,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/future/mod.rs","byte_start":55806,"byte_end":55818,"line_start":1163,"line_end":1163,"column_start":24,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":553},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter.rs","byte_start":133292,"byte_end":133296,"line_start":36,"line_end":36,"column_start":26,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3722},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_ok.rs","byte_start":134526,"byte_end":134532,"line_start":39,"line_end":39,"column_start":23,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3729},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/iter_result.rs","byte_start":135773,"byte_end":135783,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3738},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/repeat.rs","byte_start":137169,"byte_end":137175,"line_start":44,"line_end":44,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3744},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138008,"byte_end":138015,"line_start":30,"line_end":30,"column_start":15,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":138931,"byte_end":138938,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3753},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/and_then.rs","byte_start":139398,"byte_end":139405,"line_start":77,"line_end":77,"column_start":26,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3753},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chain.rs","byte_start":141056,"byte_end":141061,"line_start":34,"line_end":34,"column_start":25,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3781},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142291,"byte_end":142298,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":142722,"byte_end":142729,"line_start":37,"line_end":37,"column_start":20,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":709},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":143644,"byte_end":143650,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":723},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":144102,"byte_end":144108,"line_start":89,"line_end":89,"column_start":20,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":723},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/concat.rs","byte_start":144974,"byte_end":144984,"line_start":127,"line_end":127,"column_start":20,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3789},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/empty.rs","byte_start":146929,"byte_end":146934,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":147583,"byte_end":147589,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148462,"byte_end":148468,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3816},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter.rs","byte_start":148922,"byte_end":148928,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3816},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":149955,"byte_end":149964,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":150837,"byte_end":150846,"line_start":51,"line_end":51,"column_start":29,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3825},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/filter_map.rs","byte_start":151303,"byte_end":151312,"line_start":70,"line_end":70,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3825},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":152387,"byte_end":152394,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153261,"byte_end":153268,"line_start":54,"line_end":54,"column_start":26,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3834},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/flatten.rs","byte_start":153725,"byte_end":153732,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3834},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fold.rs","byte_start":155477,"byte_end":155481,"line_start":42,"line_end":42,"column_start":31,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3841},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/for_each.rs","byte_start":157618,"byte_end":157625,"line_start":28,"line_end":28,"column_start":26,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3870},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":158767,"byte_end":158774,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":159612,"byte_end":159619,"line_start":51,"line_end":51,"column_start":47,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/from_err.rs","byte_start":160016,"byte_end":160023,"line_start":65,"line_end":65,"column_start":52,"column_end":59},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3882},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":160917,"byte_end":160921,"line_start":17,"line_end":17,"column_start":26,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3891},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161457,"byte_end":161461,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3891},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/fuse.rs","byte_start":161832,"byte_end":161836,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":163351,"byte_end":163363,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/future.rs","byte_start":165072,"byte_end":165084,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3898},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":166186,"byte_end":166193,"line_start":23,"line_end":23,"column_start":20,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":167066,"byte_end":167073,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3904},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect.rs","byte_start":167536,"byte_end":167543,"line_start":68,"line_end":68,"column_start":23,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3904},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":168434,"byte_end":168444,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169317,"byte_end":169327,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3913},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/inspect_err.rs","byte_start":169790,"byte_end":169800,"line_start":68,"line_end":68,"column_start":23,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3913},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":170550,"byte_end":170553,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171426,"byte_end":171429,"line_start":51,"line_end":51,"column_start":29,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3922},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map.rs","byte_start":171886,"byte_end":171889,"line_start":70,"line_end":70,"column_start":26,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3922},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":172646,"byte_end":172652,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173525,"byte_end":173531,"line_start":51,"line_end":51,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3931},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/map_err.rs","byte_start":173988,"byte_end":173994,"line_start":70,"line_end":70,"column_start":26,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3931},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/merge.rs","byte_start":175357,"byte_end":175362,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3940},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/once.rs","byte_start":177450,"byte_end":177454,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3967},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":178439,"byte_end":178445,"line_start":31,"line_end":31,"column_start":32,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3976},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/or_else.rs","byte_start":178920,"byte_end":178926,"line_start":50,"line_end":50,"column_start":26,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3976},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180495,"byte_end":180503,"line_start":25,"line_end":25,"column_start":26,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3988},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":180968,"byte_end":180976,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3988},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/peek.rs","byte_start":181261,"byte_end":181269,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/poll_fn.rs","byte_start":182837,"byte_end":182843,"line_start":39,"line_end":39,"column_start":26,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3995},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/select.rs","byte_start":183786,"byte_end":183792,"line_start":28,"line_end":28,"column_start":25,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4001},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":185507,"byte_end":185511,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186378,"byte_end":186382,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip.rs","byte_start":186830,"byte_end":186834,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4011},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":187961,"byte_end":187970,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":188880,"byte_end":188889,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4018},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/skip_while.rs","byte_start":189373,"byte_end":189382,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4018},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191078,"byte_end":191082,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":191949,"byte_end":191953,"line_start":49,"line_end":49,"column_start":26,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4031},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take.rs","byte_start":192410,"byte_end":192414,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4031},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":193614,"byte_end":193623,"line_start":30,"line_end":30,"column_start":15,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":194533,"byte_end":194542,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4038},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/take_while.rs","byte_start":195026,"byte_end":195035,"line_start":75,"line_end":75,"column_start":26,"column_end":35},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4038},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":196906,"byte_end":196910,"line_start":31,"line_end":31,"column_start":32,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4051},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/then.rs","byte_start":197386,"byte_end":197390,"line_start":50,"line_end":50,"column_start":26,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4051},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/unfold.rs","byte_start":200702,"byte_end":200708,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4063},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/zip.rs","byte_start":203078,"byte_end":203081,"line_start":29,"line_end":29,"column_start":25,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4089},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":204828,"byte_end":204835,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/forward.rs","byte_start":206608,"byte_end":206615,"line_start":78,"line_end":78,"column_start":23,"column_end":30},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4100},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8346347,"byte_end":8346355,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4121},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8347128,"byte_end":8347136,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8348110,"byte_end":8348118,"line_start":78,"line_end":78,"column_start":26,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4121},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffered.rs","byte_start":8348607,"byte_end":8348615,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4121},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8350428,"byte_end":8350443,"line_start":22,"line_end":22,"column_start":24,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4158},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8351108,"byte_end":8351123,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8352037,"byte_end":8352052,"line_start":75,"line_end":75,"column_start":20,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/buffer_unordered.rs","byte_start":8353263,"byte_end":8353278,"line_start":112,"line_end":112,"column_start":26,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8354430,"byte_end":8354441,"line_start":33,"line_end":33,"column_start":20,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4628},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/catch_unwind.rs","byte_start":8355622,"byte_end":8355638,"line_start":64,"line_end":64,"column_start":28,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":4,"index":3748},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8356725,"byte_end":8356731,"line_start":37,"line_end":37,"column_start":26,"column_end":32},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8357178,"byte_end":8357184,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/chunks.rs","byte_start":8358173,"byte_end":8358179,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4646},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360447,"byte_end":8360454,"line_start":27,"line_end":27,"column_start":17,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/collect.rs","byte_start":8360581,"byte_end":8360588,"line_start":33,"line_end":33,"column_start":20,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4655},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8361631,"byte_end":8361635,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/wait.rs","byte_start":8362576,"byte_end":8362580,"line_start":47,"line_end":47,"column_start":30,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4662},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364695,"byte_end":8364704,"line_start":57,"line_end":57,"column_start":27,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4286},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8364897,"byte_end":8364906,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4286},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365066,"byte_end":8365075,"line_start":71,"line_end":71,"column_start":22,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4286},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365224,"byte_end":8365232,"line_start":80,"line_end":80,"column_start":23,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4676},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8365642,"byte_end":8365648,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/channel.rs","byte_start":8366019,"byte_end":8366031,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4684},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366560,"byte_end":8366571,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8366946,"byte_end":8366957,"line_start":21,"line_end":21,"column_start":28,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4692},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367333,"byte_end":8367342,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8367809,"byte_end":8367818,"line_start":48,"line_end":48,"column_start":24,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4699},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369028,"byte_end":8369040,"line_start":87,"line_end":87,"column_start":24,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4353},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369230,"byte_end":8369242,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4353},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/split.rs","byte_start":8369432,"byte_end":8369444,"line_start":101,"line_end":101,"column_start":24,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4353},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371843,"byte_end":8371859,"line_start":53,"line_end":53,"column_start":31,"column_end":47},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8371896,"byte_end":8371912,"line_start":54,"line_end":54,"column_start":31,"column_end":47},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374170,"byte_end":8374186,"line_start":116,"line_end":116,"column_start":21,"column_end":37},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8374284,"byte_end":8374300,"line_start":122,"line_end":122,"column_start":9,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8375338,"byte_end":8375354,"line_start":154,"line_end":154,"column_start":9,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8379641,"byte_end":8379657,"line_start":270,"line_end":270,"column_start":20,"column_end":36},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4402},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8382896,"byte_end":8382900,"line_start":343,"line_end":343,"column_start":38,"column_end":42},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4454},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8384776,"byte_end":8384792,"line_start":389,"line_end":389,"column_start":26,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8384935,"byte_end":8384951,"line_start":395,"line_end":395,"column_start":18,"column_end":34},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386419,"byte_end":8386435,"line_start":425,"line_end":425,"column_start":37,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4402},"to":{"krate":1,"index":4755}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8386907,"byte_end":8386914,"line_start":445,"line_end":445,"column_start":26,"column_end":33},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5301},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8387446,"byte_end":8387453,"line_start":466,"line_end":466,"column_start":35,"column_end":42},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5301},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8387473,"byte_end":8387478,"line_start":468,"line_end":468,"column_start":9,"column_end":14},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8389327,"byte_end":8389332,"line_start":529,"line_end":529,"column_start":18,"column_end":23},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4411},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390250,"byte_end":8390262,"line_start":553,"line_end":553,"column_start":23,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4491},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390382,"byte_end":8390394,"line_start":559,"line_end":559,"column_start":43,"column_end":55},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390840,"byte_end":8390847,"line_start":573,"line_end":573,"column_start":25,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4504},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390878,"byte_end":8390885,"line_start":574,"line_end":574,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4504},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8390912,"byte_end":8390919,"line_start":576,"line_end":576,"column_start":20,"column_end":27},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8391205,"byte_end":8391212,"line_start":587,"line_end":587,"column_start":33,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4504},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8391754,"byte_end":8391758,"line_start":606,"line_end":606,"column_start":9,"column_end":13},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8392908,"byte_end":8392912,"line_start":635,"line_end":635,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4417},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_unordered.rs","byte_start":8394028,"byte_end":8394039,"line_start":670,"line_end":670,"column_start":19,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4532},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394528,"byte_end":8394540,"line_start":15,"line_end":15,"column_start":23,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5294},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394645,"byte_end":8394657,"line_start":21,"line_end":21,"column_start":16,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5294},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394688,"byte_end":8394700,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5294},"to":{"krate":1,"index":1671}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8394823,"byte_end":8394835,"line_start":29,"line_end":29,"column_start":17,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5294},"to":{"krate":1,"index":1660}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8395016,"byte_end":8395028,"line_start":36,"line_end":36,"column_start":20,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5294},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398459,"byte_end":8398473,"line_start":117,"line_end":117,"column_start":21,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4571},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8398569,"byte_end":8398583,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8400186,"byte_end":8400200,"line_start":169,"line_end":169,"column_start":20,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4571},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8401212,"byte_end":8401226,"line_start":201,"line_end":201,"column_start":26,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4571},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/futures_ordered.rs","byte_start":8401406,"byte_end":8401420,"line_start":209,"line_end":209,"column_start":37,"column_end":51},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4571},"to":{"krate":1,"index":4755}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/stream/mod.rs","byte_start":93626,"byte_end":93629,"line_start":134,"line_end":134,"column_start":55,"column_end":58},"kind":{"Impl":{"id":193}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227441,"byte_end":227446,"line_start":30,"line_end":30,"column_start":14,"column_end":19},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":227999,"byte_end":228003,"line_start":55,"line_end":55,"column_start":31,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4706},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":228270,"byte_end":228274,"line_start":68,"line_end":68,"column_start":20,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with.rs","byte_start":229992,"byte_end":229996,"line_start":124,"line_end":124,"column_start":29,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4706},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":231842,"byte_end":231853,"line_start":39,"line_end":39,"column_start":19,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":233211,"byte_end":233222,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/with_flat_map.rs","byte_start":233518,"byte_end":233529,"line_start":96,"line_end":96,"column_start":28,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":234846,"byte_end":234851,"line_start":16,"line_end":16,"column_start":15,"column_end":20},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/flush.rs","byte_start":235436,"byte_end":235441,"line_start":33,"line_end":33,"column_start":26,"column_end":31},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4762},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236293,"byte_end":236304,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":236854,"byte_end":236865,"line_start":44,"line_end":44,"column_start":21,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/from_err.rs","byte_start":237434,"byte_end":237445,"line_start":64,"line_end":64,"column_start":51,"column_end":62},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238078,"byte_end":238082,"line_start":20,"line_end":20,"column_start":15,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send.rs","byte_start":238723,"byte_end":238727,"line_start":40,"line_end":40,"column_start":26,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4781},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":240041,"byte_end":240048,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/send_all.rs","byte_start":241089,"byte_end":241096,"line_start":59,"line_end":59,"column_start":23,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4788},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242412,"byte_end":242422,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":242975,"byte_end":242985,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4798},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/map_err.rs","byte_start":243695,"byte_end":243705,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4798},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244346,"byte_end":244352,"line_start":15,"line_end":15,"column_start":24,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":244728,"byte_end":244734,"line_start":25,"line_end":25,"column_start":50,"column_end":56},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":245181,"byte_end":245187,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/fanout.rs","byte_start":246919,"byte_end":246929,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8402330,"byte_end":8402336,"line_start":28,"line_end":28,"column_start":15,"column_end":21},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8403279,"byte_end":8403285,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4877},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/buffer.rs","byte_start":8403484,"byte_end":8403490,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4877},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/wait.rs","byte_start":8405078,"byte_end":8405082,"line_start":22,"line_end":22,"column_start":15,"column_end":19},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":208574,"byte_end":208577,"line_start":34,"line_end":34,"column_start":34,"column_end":37},"kind":{"Impl":{"id":221}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sink/mod.rs","byte_start":209359,"byte_end":209362,"line_start":58,"line_end":58,"column_start":51,"column_end":54},"kind":{"Impl":{"id":222}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249255,"byte_end":249259,"line_start":36,"line_end":36,"column_start":31,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4891},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249296,"byte_end":249300,"line_start":37,"line_end":37,"column_start":31,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4891},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":249316,"byte_end":249320,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250147,"byte_end":250154,"line_start":66,"line_end":66,"column_start":23,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1855},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250411,"byte_end":250418,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1855},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/lock.rs","byte_start":250785,"byte_end":250792,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1855},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286529,"byte_end":286539,"line_start":137,"line_end":137,"column_start":6,"column_end":16},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286705,"byte_end":286709,"line_start":141,"line_end":141,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":1906}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":286741,"byte_end":286745,"line_start":142,"line_end":142,"column_start":29,"column_end":33},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4993},"to":{"krate":0,"index":1906}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292150,"byte_end":292160,"line_start":270,"line_end":270,"column_start":18,"column_end":28},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1898},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292245,"byte_end":292255,"line_start":276,"line_end":276,"column_start":21,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1898},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292383,"byte_end":292393,"line_start":282,"line_end":282,"column_start":22,"column_end":32},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1898},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/atomic_task.rs","byte_start":292418,"byte_end":292428,"line_start":283,"line_end":283,"column_start":22,"column_end":32},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1898},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293113,"byte_end":293127,"line_start":33,"line_end":33,"column_start":10,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293310,"byte_end":293324,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293664,"byte_end":293676,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":293800,"byte_end":293810,"line_start":65,"line_end":65,"column_start":6,"column_end":16},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294042,"byte_end":294052,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":294245,"byte_end":294255,"line_start":83,"line_end":83,"column_start":15,"column_end":25},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1934},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/core.rs","byte_start":297709,"byte_end":297714,"line_start":176,"line_end":176,"column_start":19,"column_end":24},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1965},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":320819,"byte_end":320830,"line_start":25,"line_end":25,"column_start":31,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2007},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":320867,"byte_end":320878,"line_start":26,"line_end":26,"column_start":31,"column_end":42},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2007},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/unpark_mutex.rs","byte_start":321585,"byte_end":321596,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326639,"byte_end":326643,"line_start":42,"line_end":42,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2039}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":326672,"byte_end":326673,"line_start":43,"line_end":43,"column_start":26,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2041},"to":{"krate":0,"index":2039}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327742,"byte_end":327750,"line_start":72,"line_end":72,"column_start":18,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2042},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":327836,"byte_end":327844,"line_start":78,"line_end":78,"column_start":17,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2042},"to":{"krate":1,"index":6265}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/data.rs","byte_start":328124,"byte_end":328132,"line_start":93,"line_end":93,"column_start":25,"column_end":33},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333239,"byte_end":333245,"line_start":72,"line_end":72,"column_start":31,"column_end":37},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4927},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333282,"byte_end":333288,"line_start":73,"line_end":73,"column_start":31,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4927},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":333304,"byte_end":333310,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/task_rc.rs","byte_start":334995,"byte_end":335001,"line_start":122,"line_end":122,"column_start":19,"column_end":25},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4927},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":299879,"byte_end":299884,"line_start":70,"line_end":70,"column_start":23,"column_end":28},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2090},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":300814,"byte_end":300828,"line_start":119,"line_end":119,"column_start":10,"column_end":24},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":301247,"byte_end":301261,"line_start":134,"line_end":134,"column_start":10,"column_end":24},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":302159,"byte_end":302171,"line_start":166,"line_end":166,"column_start":6,"column_end":18},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":302933,"byte_end":302943,"line_start":197,"line_end":197,"column_start":6,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":303563,"byte_end":303568,"line_start":218,"line_end":218,"column_start":17,"column_end":22},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":305216,"byte_end":305221,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":306144,"byte_end":306149,"line_start":291,"line_end":291,"column_start":15,"column_end":20},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309208,"byte_end":309212,"line_start":373,"line_end":373,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2135}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":309215,"byte_end":309219,"line_start":373,"line_end":373,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":2135}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310055,"byte_end":310059,"line_start":393,"line_end":393,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2137}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310062,"byte_end":310066,"line_start":393,"line_end":393,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":2137}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":310509,"byte_end":310512,"line_start":413,"line_end":413,"column_start":6,"column_end":9},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":311464,"byte_end":311467,"line_start":441,"line_end":441,"column_start":21,"column_end":24},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2139},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":311660,"byte_end":311668,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":312242,"byte_end":312254,"line_start":479,"line_end":479,"column_start":6,"column_end":18},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":313644,"byte_end":313656,"line_start":523,"line_end":523,"column_start":17,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2151},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316312,"byte_end":316323,"line_start":603,"line_end":603,"column_start":6,"column_end":17},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":316746,"byte_end":316757,"line_start":620,"line_end":620,"column_start":21,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4988},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317295,"byte_end":317299,"line_start":634,"line_end":634,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2175}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":317302,"byte_end":317306,"line_start":634,"line_end":634,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":2175}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":318186,"byte_end":318196,"line_start":658,"line_end":658,"column_start":38,"column_end":48},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":318938,"byte_end":318948,"line_start":684,"line_end":684,"column_start":51,"column_end":61},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2177},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/std/mod.rs","byte_start":319388,"byte_end":319400,"line_start":698,"line_end":698,"column_start":26,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254238,"byte_end":254242,"line_start":92,"line_end":92,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2209}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":254266,"byte_end":254270,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4993},"to":{"krate":0,"index":2209}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":255781,"byte_end":255785,"line_start":136,"line_end":136,"column_start":6,"column_end":10},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":4993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":259889,"byte_end":259893,"line_start":224,"line_end":224,"column_start":21,"column_end":25},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4993},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":261307,"byte_end":261312,"line_start":265,"line_end":265,"column_start":17,"column_end":22},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":266714,"byte_end":266719,"line_start":403,"line_end":403,"column_start":45,"column_end":50},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2223},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267738,"byte_end":267742,"line_start":426,"line_end":426,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":267745,"byte_end":267749,"line_start":426,"line_end":426,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":274459,"byte_end":274465,"line_start":566,"line_end":566,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2262},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277723,"byte_end":277735,"line_start":637,"line_end":637,"column_start":22,"column_end":34},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277760,"byte_end":277772,"line_start":638,"line_end":638,"column_start":22,"column_end":34},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":277782,"byte_end":277794,"line_start":640,"line_end":640,"column_start":6,"column_end":18},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278768,"byte_end":278780,"line_start":669,"line_end":669,"column_start":16,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":278921,"byte_end":278933,"line_start":678,"line_end":678,"column_start":21,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279076,"byte_end":279088,"line_start":685,"line_end":685,"column_start":15,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279300,"byte_end":279309,"line_start":696,"line_end":696,"column_start":28,"column_end":37},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2290},"to":{"krate":0,"index":2262}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279759,"byte_end":279768,"line_start":713,"line_end":713,"column_start":51,"column_end":60},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2290},"to":{"krate":0,"index":2272}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs","byte_start":279968,"byte_end":279980,"line_start":721,"line_end":721,"column_start":38,"column_end":50},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2275},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/resultstream.rs","byte_start":336074,"byte_end":336081,"line_start":33,"line_end":33,"column_start":31,"column_end":38},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4999},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":343355,"byte_end":343360,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":351823,"byte_end":351829,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":354796,"byte_end":354802,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5014},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355055,"byte_end":355063,"line_start":404,"line_end":404,"column_start":23,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5029},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355191,"byte_end":355199,"line_start":410,"line_end":410,"column_start":16,"column_end":24},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5029},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":355282,"byte_end":355290,"line_start":416,"line_end":416,"column_start":9,"column_end":17},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356351,"byte_end":356359,"line_start":443,"line_end":443,"column_start":20,"column_end":28},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5008},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":356510,"byte_end":356518,"line_start":452,"line_end":452,"column_start":18,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5008},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":359671,"byte_end":359682,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360103,"byte_end":360114,"line_start":548,"line_end":548,"column_start":23,"column_end":34},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2412},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360536,"byte_end":360547,"line_start":562,"line_end":562,"column_start":51,"column_end":62},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2412},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360701,"byte_end":360712,"line_start":569,"line_end":569,"column_start":21,"column_end":32},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2412},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":360815,"byte_end":360822,"line_start":575,"line_end":575,"column_start":28,"column_end":35},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2420},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":361549,"byte_end":361556,"line_start":599,"line_end":599,"column_start":45,"column_end":52},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2420},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/oneshot.rs","byte_start":361748,"byte_end":361755,"line_start":607,"line_end":607,"column_start":26,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2420},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404090,"byte_end":404095,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5049},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404133,"byte_end":404138,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5049},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404155,"byte_end":404159,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":404355,"byte_end":404360,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/queue.rs","byte_start":406115,"byte_end":406120,"line_start":140,"line_end":140,"column_start":18,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5049},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366679,"byte_end":366683,"line_start":113,"line_end":113,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":2523}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366686,"byte_end":366690,"line_start":113,"line_end":113,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":2523}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366693,"byte_end":366698,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":1606},"to":{"krate":0,"index":2523}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":366723,"byte_end":366738,"line_start":114,"line_end":114,"column_start":22,"column_end":37},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5064},"to":{"krate":0,"index":2523}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367787,"byte_end":367796,"line_start":152,"line_end":152,"column_start":24,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5084},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":367983,"byte_end":367992,"line_start":160,"line_end":160,"column_start":26,"column_end":35},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5084},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368151,"byte_end":368160,"line_start":166,"line_end":166,"column_start":24,"column_end":33},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5084},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368266,"byte_end":368275,"line_start":173,"line_end":173,"column_start":9,"column_end":18},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368433,"byte_end":368445,"line_start":180,"line_end":180,"column_start":24,"column_end":36},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5102},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368635,"byte_end":368647,"line_start":188,"line_end":188,"column_start":26,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5102},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":368928,"byte_end":368940,"line_start":198,"line_end":198,"column_start":24,"column_end":36},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":5102},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":369155,"byte_end":369167,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":371727,"byte_end":371737,"line_start":305,"line_end":305,"column_start":6,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":374546,"byte_end":374552,"line_start":391,"line_end":391,"column_start":9,"column_end":15},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":383348,"byte_end":383354,"line_start":639,"line_end":639,"column_start":18,"column_end":24},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5056},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":384450,"byte_end":384465,"line_start":672,"line_end":672,"column_start":9,"column_end":24},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":385421,"byte_end":385436,"line_start":699,"line_end":699,"column_start":18,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":5064},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":386243,"byte_end":386258,"line_start":734,"line_end":734,"column_start":19,"column_end":34},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":5064},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":386376,"byte_end":386382,"line_start":741,"line_end":741,"column_start":19,"column_end":25},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":5056},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387572,"byte_end":387578,"line_start":774,"line_end":774,"column_start":18,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":5056},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":387870,"byte_end":387878,"line_start":791,"line_end":791,"column_start":9,"column_end":17},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":5071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":392270,"byte_end":392278,"line_start":923,"line_end":923,"column_start":20,"column_end":28},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":5071},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":393791,"byte_end":393799,"line_start":960,"line_end":960,"column_start":18,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":5071},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":394799,"byte_end":394816,"line_start":989,"line_end":989,"column_start":9,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":5077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":395099,"byte_end":395116,"line_start":999,"line_end":999,"column_start":20,"column_end":37},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":5077},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":398654,"byte_end":398665,"line_start":1095,"line_end":1095,"column_start":23,"column_end":34},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2647},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399166,"byte_end":399177,"line_start":1110,"line_end":1110,"column_start":27,"column_end":38},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2647},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399338,"byte_end":399345,"line_start":1117,"line_end":1117,"column_start":28,"column_end":35},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2652},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399745,"byte_end":399752,"line_start":1133,"line_end":1133,"column_start":32,"column_end":39},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2652},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":399927,"byte_end":399932,"line_start":1146,"line_end":1146,"column_start":9,"column_end":14},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":5141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400277,"byte_end":400282,"line_start":1157,"line_end":1157,"column_start":31,"column_end":36},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5141},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400319,"byte_end":400324,"line_start":1158,"line_end":1158,"column_start":31,"column_end":36},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5141},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs","byte_start":400337,"byte_end":400342,"line_start":1160,"line_end":1160,"column_start":6,"column_end":11},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407933,"byte_end":407938,"line_start":44,"line_end":44,"column_start":31,"column_end":36},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5176},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407975,"byte_end":407980,"line_start":45,"line_end":45,"column_start":31,"column_end":36},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5176},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":407996,"byte_end":408002,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":412981,"byte_end":412986,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413126,"byte_end":413131,"line_start":176,"line_end":176,"column_start":18,"column_end":23},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5176},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413409,"byte_end":413421,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2728},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413611,"byte_end":413623,"line_start":194,"line_end":194,"column_start":26,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":2728},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":413797,"byte_end":413809,"line_start":200,"line_end":200,"column_start":24,"column_end":36},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":2728},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414253,"byte_end":414264,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5183},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414425,"byte_end":414436,"line_start":223,"line_end":223,"column_start":26,"column_end":37},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5183},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414588,"byte_end":414599,"line_start":229,"line_end":229,"column_start":22,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5183},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":414859,"byte_end":414872,"line_start":242,"line_end":242,"column_start":20,"column_end":33},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5191},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415698,"byte_end":415712,"line_start":268,"line_end":268,"column_start":9,"column_end":23},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":415946,"byte_end":415960,"line_start":279,"line_end":279,"column_start":19,"column_end":33},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5197},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":416131,"byte_end":416145,"line_start":286,"line_end":286,"column_start":22,"column_end":36},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5197},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/bilock.rs","byte_start":416307,"byte_end":416321,"line_start":292,"line_end":292,"column_start":18,"column_end":32},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5197},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":418464,"byte_end":418470,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419251,"byte_end":419257,"line_start":84,"line_end":84,"column_start":19,"column_end":25},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5212},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419366,"byte_end":419372,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5212},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":419742,"byte_end":419748,"line_start":107,"line_end":107,"column_start":18,"column_end":24},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5212},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":420900,"byte_end":420908,"line_start":142,"line_end":142,"column_start":9,"column_end":17},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":421688,"byte_end":421696,"line_start":164,"line_end":164,"column_start":20,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5218},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422679,"byte_end":422687,"line_start":196,"line_end":196,"column_start":18,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5218},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":422930,"byte_end":422945,"line_start":208,"line_end":208,"column_start":19,"column_end":34},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5235},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423047,"byte_end":423062,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5235},"to":{"krate":0,"index":1784}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":423821,"byte_end":423836,"line_start":246,"line_end":246,"column_start":9,"column_end":24},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425137,"byte_end":425154,"line_start":284,"line_end":284,"column_start":9,"column_end":26},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":425437,"byte_end":425454,"line_start":294,"line_end":294,"column_start":20,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5242},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426044,"byte_end":426053,"line_start":315,"line_end":315,"column_start":24,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2869},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426240,"byte_end":426249,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":2869},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426408,"byte_end":426417,"line_start":329,"line_end":329,"column_start":24,"column_end":33},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":2869},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":426523,"byte_end":426532,"line_start":335,"line_end":335,"column_start":9,"column_end":18},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430239,"byte_end":430250,"line_start":431,"line_end":431,"column_start":23,"column_end":34},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":2885},"to":{"krate":0,"index":1430}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430754,"byte_end":430765,"line_start":446,"line_end":446,"column_start":27,"column_end":38},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2885},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":430929,"byte_end":430936,"line_start":453,"line_end":453,"column_start":28,"column_end":35},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2890},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/mpsc.rs","byte_start":431336,"byte_end":431343,"line_start":469,"line_end":469,"column_start":32,"column_end":39},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2890},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":433289,"byte_end":433295,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436088,"byte_end":436094,"line_start":138,"line_end":138,"column_start":18,"column_end":24},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5249},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":436492,"byte_end":436500,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":437373,"byte_end":437381,"line_start":178,"line_end":178,"column_start":20,"column_end":28},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5255},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":438419,"byte_end":438427,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5255},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441287,"byte_end":441298,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":2960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":441706,"byte_end":441717,"line_start":300,"line_end":300,"column_start":23,"column_end":34},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":2960},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":442133,"byte_end":442144,"line_start":314,"line_end":314,"column_start":51,"column_end":62},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":2960},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":442305,"byte_end":442312,"line_start":321,"line_end":321,"column_start":28,"column_end":35},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2965},"to":{"krate":0,"index":468}},{"span":{"file_name":"/Users/helabenkhalfallah/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/unsync/oneshot.rs","byte_start":443051,"byte_end":443058,"line_start":345,"line_end":345,"column_start":45,"column_end":52},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2965},"to":{"krate":1,"index":6069}}]}